import { unref, mergeProps, withCtx, renderSlot, useSSRContext, createVNode, createTextVNode, resolveDynamicComponent, createBlock, openBlock, Fragment, toDisplayString, ref, computed, renderList, createCommentVNode, withModifiers, reactive, watch, createSSRApp, h } from "vue";
import { ssrRenderComponent, ssrRenderSlot, ssrRenderAttrs, ssrRenderClass, ssrGetDynamicModelProps, ssrInterpolate, ssrRenderVNode, ssrRenderList, ssrRenderAttr } from "vue/server-renderer";
import { X, PanelLeft, ChevronsUpDown, Sparkles, BadgeCheck, CreditCard, Bell, LogOut, Plus, GalleryVerticalEnd, AudioWaveform, Command, LayoutDashboard, Frame, ClipboardCheck, ChevronRight, Check, ChevronDown, ChevronUp, MoreHorizontal, Pencil, Trash2, List, Kanban, Loader } from "lucide-vue-next";
import { cva } from "class-variance-authority";
import { clsx } from "clsx";
import { twMerge } from "tailwind-merge";
import { useForwardPropsEmits, DialogRoot, DialogOverlay, DialogPortal, DialogContent, DialogClose, DialogDescription, DialogTitle, createContext, Primitive, TooltipRoot, TooltipPortal, TooltipContent, TooltipArrow, TooltipTrigger, TooltipProvider, Separator, AvatarRoot, AvatarFallback, AvatarImage, DropdownMenuRoot, DropdownMenuPortal, DropdownMenuContent, DropdownMenuGroup, useForwardProps, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger, ProgressRoot, ProgressIndicator, Label, SelectRoot, SelectPortal, SelectContent, SelectViewport, SelectItem, SelectItemIndicator, SelectItemText, SelectScrollDownButton, SelectScrollUpButton, SelectTrigger, SelectIcon, SelectValue, TabsRoot, TabsContent, TabsList, TabsTrigger, AlertDialogRoot, AlertDialogAction, AlertDialogCancel, AlertDialogPortal, AlertDialogOverlay, AlertDialogContent, AlertDialogDescription, AlertDialogTitle, AlertDialogTrigger } from "reka-ui";
import { reactiveOmit, useVModel, useMediaQuery, useEventListener } from "@vueuse/core";
import { Link, usePage, useForm, router, Head, createInertiaApp } from "@inertiajs/vue3";
import { Doughnut } from "vue-chartjs";
import { Chart, Title, Tooltip, Legend, ArcElement } from "chart.js";
import { Toaster, toast } from "vue-sonner";
import debounce from "lodash.debounce";
import { formatDistanceToNow, format, parseISO } from "date-fns";
import { VueDraggable } from "vue-draggable-plus";
import createServer from "@inertiajs/vue3/server";
import { renderToString } from "@vue/server-renderer";
function cn(...inputs) {
  return twMerge(clsx(inputs));
}
const _sfc_main$1N = {
  __name: "Sheet",
  __ssrInlineRender: true,
  props: {
    open: { type: Boolean, required: false },
    defaultOpen: { type: Boolean, required: false },
    modal: { type: Boolean, required: false }
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const forwarded = useForwardPropsEmits(props, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogRoot), mergeProps({ "data-slot": "sheet" }, unref(forwarded), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1N = _sfc_main$1N.setup;
_sfc_main$1N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sheet/Sheet.vue");
  return _sfc_setup$1N ? _sfc_setup$1N(props, ctx) : void 0;
};
const _sfc_main$1M = {
  __name: "SheetOverlay",
  __ssrInlineRender: true,
  props: {
    forceMount: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogOverlay), mergeProps({
        "data-slot": "sheet-overlay",
        class: unref(cn)(
          "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80",
          props.class
        )
      }, unref(delegatedProps), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1M = _sfc_main$1M.setup;
_sfc_main$1M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sheet/SheetOverlay.vue");
  return _sfc_setup$1M ? _sfc_setup$1M(props, ctx) : void 0;
};
const _sfc_main$1L = /* @__PURE__ */ Object.assign({
  inheritAttrs: false
}, {
  __name: "SheetContent",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false },
    side: { type: String, required: false, default: "right" },
    forceMount: { type: Boolean, required: false },
    disableOutsidePointerEvents: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const delegatedProps = reactiveOmit(props, "class", "side");
    const forwarded = useForwardPropsEmits(delegatedProps, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogPortal), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$1M, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(DialogContent), mergeProps({
              "data-slot": "sheet-content",
              class: unref(cn)(
                "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
                __props.side === "right" && "data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm",
                __props.side === "left" && "data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm",
                __props.side === "top" && "data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b",
                __props.side === "bottom" && "data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t",
                props.class
              )
            }, { ...unref(forwarded), ..._ctx.$attrs }), {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                  _push3(ssrRenderComponent(unref(DialogClose), { class: "ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(X), { class: "size-4" }, null, _parent4, _scopeId3));
                        _push4(`<span class="sr-only"${_scopeId3}>Close</span>`);
                      } else {
                        return [
                          createVNode(unref(X), { class: "size-4" }),
                          createVNode("span", { class: "sr-only" }, "Close")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    renderSlot(_ctx.$slots, "default"),
                    createVNode(unref(DialogClose), { class: "ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none" }, {
                      default: withCtx(() => [
                        createVNode(unref(X), { class: "size-4" }),
                        createVNode("span", { class: "sr-only" }, "Close")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$1M),
              createVNode(unref(DialogContent), mergeProps({
                "data-slot": "sheet-content",
                class: unref(cn)(
                  "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
                  __props.side === "right" && "data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm",
                  __props.side === "left" && "data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm",
                  __props.side === "top" && "data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b",
                  __props.side === "bottom" && "data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t",
                  props.class
                )
              }, { ...unref(forwarded), ..._ctx.$attrs }), {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default"),
                  createVNode(unref(DialogClose), { class: "ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none" }, {
                    default: withCtx(() => [
                      createVNode(unref(X), { class: "size-4" }),
                      createVNode("span", { class: "sr-only" }, "Close")
                    ]),
                    _: 1
                  })
                ]),
                _: 3
              }, 16, ["class"])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
});
const _sfc_setup$1L = _sfc_main$1L.setup;
_sfc_main$1L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sheet/SheetContent.vue");
  return _sfc_setup$1L ? _sfc_setup$1L(props, ctx) : void 0;
};
const _sfc_main$1K = {
  __name: "SheetDescription",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogDescription), mergeProps({
        "data-slot": "sheet-description",
        class: unref(cn)("text-muted-foreground text-sm", props.class)
      }, unref(delegatedProps), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1K = _sfc_main$1K.setup;
_sfc_main$1K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sheet/SheetDescription.vue");
  return _sfc_setup$1K ? _sfc_setup$1K(props, ctx) : void 0;
};
const _sfc_main$1J = {
  __name: "SheetHeader",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "sheet-header",
        class: unref(cn)("flex flex-col gap-1.5 p-4", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$1J = _sfc_main$1J.setup;
_sfc_main$1J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sheet/SheetHeader.vue");
  return _sfc_setup$1J ? _sfc_setup$1J(props, ctx) : void 0;
};
const _sfc_main$1I = {
  __name: "SheetTitle",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogTitle), mergeProps({
        "data-slot": "sheet-title",
        class: unref(cn)("text-foreground font-semibold", props.class)
      }, unref(delegatedProps), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1I = _sfc_main$1I.setup;
_sfc_main$1I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sheet/SheetTitle.vue");
  return _sfc_setup$1I ? _sfc_setup$1I(props, ctx) : void 0;
};
const SIDEBAR_COOKIE_NAME = "sidebar_state";
const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;
const SIDEBAR_WIDTH = "16rem";
const SIDEBAR_WIDTH_MOBILE = "18rem";
const SIDEBAR_WIDTH_ICON = "3rem";
const SIDEBAR_KEYBOARD_SHORTCUT = "b";
const [useSidebar, provideSidebarContext] = createContext("Sidebar");
const _sfc_main$1H = /* @__PURE__ */ Object.assign({
  inheritAttrs: false
}, {
  __name: "Sidebar",
  __ssrInlineRender: true,
  props: {
    side: { type: String, required: false, default: "left" },
    variant: { type: String, required: false, default: "sidebar" },
    collapsible: { type: String, required: false, default: "offcanvas" },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const { isMobile, state, openMobile, setOpenMobile } = useSidebar();
    return (_ctx, _push, _parent, _attrs) => {
      if (__props.collapsible === "none") {
        _push(`<div${ssrRenderAttrs(mergeProps({
          "data-slot": "sidebar",
          class: unref(cn)(
            "bg-sidebar text-sidebar-foreground flex h-full w-(--sidebar-width) flex-col",
            props.class
          )
        }, _ctx.$attrs, _attrs))}>`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</div>`);
      } else if (unref(isMobile)) {
        _push(ssrRenderComponent(unref(_sfc_main$1N), mergeProps({ open: unref(openMobile) }, _ctx.$attrs, { "onUpdate:open": unref(setOpenMobile) }, _attrs), {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(unref(_sfc_main$1L), {
                "data-sidebar": "sidebar",
                "data-slot": "sidebar",
                "data-mobile": "true",
                side: __props.side,
                class: "bg-sidebar text-sidebar-foreground w-(--sidebar-width) p-0 [&>button]:hidden",
                style: {
                  "--sidebar-width": unref(SIDEBAR_WIDTH_MOBILE)
                }
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$1J, { class: "sr-only" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_sfc_main$1I, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`Sidebar`);
                              } else {
                                return [
                                  createTextVNode("Sidebar")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_sfc_main$1K, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`Displays the mobile sidebar.`);
                              } else {
                                return [
                                  createTextVNode("Displays the mobile sidebar.")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_sfc_main$1I, null, {
                              default: withCtx(() => [
                                createTextVNode("Sidebar")
                              ]),
                              _: 1
                            }),
                            createVNode(_sfc_main$1K, null, {
                              default: withCtx(() => [
                                createTextVNode("Displays the mobile sidebar.")
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(`<div class="flex h-full w-full flex-col"${_scopeId2}>`);
                    ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                    _push3(`</div>`);
                  } else {
                    return [
                      createVNode(_sfc_main$1J, { class: "sr-only" }, {
                        default: withCtx(() => [
                          createVNode(_sfc_main$1I, null, {
                            default: withCtx(() => [
                              createTextVNode("Sidebar")
                            ]),
                            _: 1
                          }),
                          createVNode(_sfc_main$1K, null, {
                            default: withCtx(() => [
                              createTextVNode("Displays the mobile sidebar.")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode("div", { class: "flex h-full w-full flex-col" }, [
                        renderSlot(_ctx.$slots, "default")
                      ])
                    ];
                  }
                }),
                _: 3
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(unref(_sfc_main$1L), {
                  "data-sidebar": "sidebar",
                  "data-slot": "sidebar",
                  "data-mobile": "true",
                  side: __props.side,
                  class: "bg-sidebar text-sidebar-foreground w-(--sidebar-width) p-0 [&>button]:hidden",
                  style: {
                    "--sidebar-width": unref(SIDEBAR_WIDTH_MOBILE)
                  }
                }, {
                  default: withCtx(() => [
                    createVNode(_sfc_main$1J, { class: "sr-only" }, {
                      default: withCtx(() => [
                        createVNode(_sfc_main$1I, null, {
                          default: withCtx(() => [
                            createTextVNode("Sidebar")
                          ]),
                          _: 1
                        }),
                        createVNode(_sfc_main$1K, null, {
                          default: withCtx(() => [
                            createTextVNode("Displays the mobile sidebar.")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode("div", { class: "flex h-full w-full flex-col" }, [
                      renderSlot(_ctx.$slots, "default")
                    ])
                  ]),
                  _: 3
                }, 8, ["side", "style"])
              ];
            }
          }),
          _: 3
        }, _parent));
      } else {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: "group peer text-sidebar-foreground hidden md:block",
          "data-slot": "sidebar",
          "data-state": unref(state),
          "data-collapsible": unref(state) === "collapsed" ? __props.collapsible : "",
          "data-variant": __props.variant,
          "data-side": __props.side
        }, _attrs))}><div class="${ssrRenderClass(
          unref(cn)(
            "relative w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear",
            "group-data-[collapsible=offcanvas]:w-0",
            "group-data-[side=right]:rotate-180",
            __props.variant === "floating" || __props.variant === "inset" ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]" : "group-data-[collapsible=icon]:w-(--sidebar-width-icon)"
          )
        )}"></div><div${ssrRenderAttrs(mergeProps({
          class: unref(cn)(
            "fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex",
            __props.side === "left" ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]" : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
            // Adjust the padding for floating and inset variants.
            __props.variant === "floating" || __props.variant === "inset" ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]" : "group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l",
            props.class
          )
        }, _ctx.$attrs))}><div data-sidebar="sidebar" class="bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm">`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</div></div></div>`);
      }
    };
  }
});
const _sfc_setup$1H = _sfc_main$1H.setup;
_sfc_main$1H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/Sidebar.vue");
  return _sfc_setup$1H ? _sfc_setup$1H(props, ctx) : void 0;
};
const _sfc_main$1G = {
  __name: "SidebarContent",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "sidebar-content",
        "data-sidebar": "content",
        class: unref(cn)(
          "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$1G = _sfc_main$1G.setup;
_sfc_main$1G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarContent.vue");
  return _sfc_setup$1G ? _sfc_setup$1G(props, ctx) : void 0;
};
const _sfc_main$1F = {
  __name: "SidebarFooter",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "sidebar-footer",
        "data-sidebar": "footer",
        class: unref(cn)("flex flex-col gap-2 p-2", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$1F = _sfc_main$1F.setup;
_sfc_main$1F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarFooter.vue");
  return _sfc_setup$1F ? _sfc_setup$1F(props, ctx) : void 0;
};
const _sfc_main$1E = {
  __name: "SidebarGroup",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "sidebar-group",
        "data-sidebar": "group",
        class: unref(cn)("relative flex w-full min-w-0 flex-col p-2", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$1E = _sfc_main$1E.setup;
_sfc_main$1E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarGroup.vue");
  return _sfc_setup$1E ? _sfc_setup$1E(props, ctx) : void 0;
};
const _sfc_main$1D = {
  __name: "SidebarGroupLabel",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Primitive), mergeProps({
        "data-slot": "sidebar-group-label",
        "data-sidebar": "group-label",
        as: __props.as,
        "as-child": __props.asChild,
        class: unref(cn)(
          "text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
          "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1D = _sfc_main$1D.setup;
_sfc_main$1D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarGroupLabel.vue");
  return _sfc_setup$1D ? _sfc_setup$1D(props, ctx) : void 0;
};
const _sfc_main$1C = {
  __name: "SidebarHeader",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "sidebar-header",
        "data-sidebar": "header",
        class: unref(cn)("flex flex-col gap-2 p-2", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$1C = _sfc_main$1C.setup;
_sfc_main$1C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarHeader.vue");
  return _sfc_setup$1C ? _sfc_setup$1C(props, ctx) : void 0;
};
const _sfc_main$1B = {
  __name: "Input",
  __ssrInlineRender: true,
  props: {
    defaultValue: { type: [String, Number], required: false },
    modelValue: { type: [String, Number], required: false },
    class: { type: null, required: false }
  },
  emits: ["update:modelValue"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const modelValue = useVModel(props, "modelValue", emits, {
      passive: true,
      defaultValue: props.defaultValue
    });
    return (_ctx, _push, _parent, _attrs) => {
      let _temp0;
      _push(`<input${ssrRenderAttrs((_temp0 = mergeProps({
        "data-slot": "input",
        class: unref(cn)(
          "file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          "focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]",
          "aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
          props.class
        )
      }, _attrs), mergeProps(_temp0, ssrGetDynamicModelProps(_temp0, unref(modelValue)))))}>`);
    };
  }
};
const _sfc_setup$1B = _sfc_main$1B.setup;
_sfc_main$1B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/input/Input.vue");
  return _sfc_setup$1B ? _sfc_setup$1B(props, ctx) : void 0;
};
const _sfc_main$1A = {
  __name: "SidebarInset",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<main${ssrRenderAttrs(mergeProps({
        "data-slot": "sidebar-inset",
        class: unref(cn)(
          "bg-background relative flex w-full flex-1 flex-col",
          "md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</main>`);
    };
  }
};
const _sfc_setup$1A = _sfc_main$1A.setup;
_sfc_main$1A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarInset.vue");
  return _sfc_setup$1A ? _sfc_setup$1A(props, ctx) : void 0;
};
const _sfc_main$1z = {
  __name: "SidebarMenu",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<ul${ssrRenderAttrs(mergeProps({
        "data-slot": "sidebar-menu",
        "data-sidebar": "menu",
        class: unref(cn)("flex w-full min-w-0 flex-col gap-1", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</ul>`);
    };
  }
};
const _sfc_setup$1z = _sfc_main$1z.setup;
_sfc_main$1z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarMenu.vue");
  return _sfc_setup$1z ? _sfc_setup$1z(props, ctx) : void 0;
};
const _sfc_main$1y = {
  __name: "Tooltip",
  __ssrInlineRender: true,
  props: {
    defaultOpen: { type: Boolean, required: false },
    open: { type: Boolean, required: false },
    delayDuration: { type: Number, required: false },
    disableHoverableContent: { type: Boolean, required: false },
    disableClosingTrigger: { type: Boolean, required: false },
    disabled: { type: Boolean, required: false },
    ignoreNonKeyboardFocus: { type: Boolean, required: false }
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const forwarded = useForwardPropsEmits(props, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TooltipRoot), mergeProps({ "data-slot": "tooltip" }, unref(forwarded), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1y = _sfc_main$1y.setup;
_sfc_main$1y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/tooltip/Tooltip.vue");
  return _sfc_setup$1y ? _sfc_setup$1y(props, ctx) : void 0;
};
const _sfc_main$1x = /* @__PURE__ */ Object.assign({
  inheritAttrs: false
}, {
  __name: "TooltipContent",
  __ssrInlineRender: true,
  props: {
    forceMount: { type: Boolean, required: false },
    ariaLabel: { type: String, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    side: { type: null, required: false },
    sideOffset: { type: Number, required: false, default: 4 },
    align: { type: null, required: false },
    alignOffset: { type: Number, required: false },
    avoidCollisions: { type: Boolean, required: false },
    collisionBoundary: { type: null, required: false },
    collisionPadding: { type: [Number, Object], required: false },
    arrowPadding: { type: Number, required: false },
    sticky: { type: String, required: false },
    hideWhenDetached: { type: Boolean, required: false },
    positionStrategy: { type: String, required: false },
    updatePositionStrategy: { type: String, required: false },
    class: { type: null, required: false }
  },
  emits: ["escapeKeyDown", "pointerDownOutside"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const delegatedProps = reactiveOmit(props, "class");
    const forwarded = useForwardPropsEmits(delegatedProps, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TooltipPortal), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(TooltipContent), mergeProps({ "data-slot": "tooltip-content" }, { ...unref(forwarded), ..._ctx.$attrs }, {
              class: unref(cn)(
                "bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit rounded-md px-3 py-1.5 text-xs text-balance",
                props.class
              )
            }), {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                  _push3(ssrRenderComponent(unref(TooltipArrow), { class: "bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    renderSlot(_ctx.$slots, "default"),
                    createVNode(unref(TooltipArrow), { class: "bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]" })
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(TooltipContent), mergeProps({ "data-slot": "tooltip-content" }, { ...unref(forwarded), ..._ctx.$attrs }, {
                class: unref(cn)(
                  "bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit rounded-md px-3 py-1.5 text-xs text-balance",
                  props.class
                )
              }), {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default"),
                  createVNode(unref(TooltipArrow), { class: "bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]" })
                ]),
                _: 3
              }, 16, ["class"])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
});
const _sfc_setup$1x = _sfc_main$1x.setup;
_sfc_main$1x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/tooltip/TooltipContent.vue");
  return _sfc_setup$1x ? _sfc_setup$1x(props, ctx) : void 0;
};
const _sfc_main$1w = {
  __name: "TooltipTrigger",
  __ssrInlineRender: true,
  props: {
    reference: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TooltipTrigger), mergeProps({ "data-slot": "tooltip-trigger" }, props, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1w = _sfc_main$1w.setup;
_sfc_main$1w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/tooltip/TooltipTrigger.vue");
  return _sfc_setup$1w ? _sfc_setup$1w(props, ctx) : void 0;
};
const _sfc_main$1v = {
  __name: "SidebarMenuButtonChild",
  __ssrInlineRender: true,
  props: {
    variant: { type: null, required: false, default: "default" },
    size: { type: null, required: false, default: "default" },
    isActive: { type: Boolean, required: false },
    class: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false, default: "button" }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Primitive), mergeProps({
        "data-slot": "sidebar-menu-button",
        "data-sidebar": "menu-button",
        "data-size": __props.size,
        "data-active": __props.isActive,
        class: unref(cn)(unref(sidebarMenuButtonVariants)({ variant: __props.variant, size: __props.size }), props.class),
        as: __props.as,
        "as-child": __props.asChild
      }, _ctx.$attrs, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1v = _sfc_main$1v.setup;
_sfc_main$1v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarMenuButtonChild.vue");
  return _sfc_setup$1v ? _sfc_setup$1v(props, ctx) : void 0;
};
const _sfc_main$1u = /* @__PURE__ */ Object.assign({
  inheritAttrs: false
}, {
  __name: "SidebarMenuButton",
  __ssrInlineRender: true,
  props: {
    variant: { type: null, required: false, default: "default" },
    size: { type: null, required: false, default: "default" },
    isActive: { type: Boolean, required: false },
    class: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false, default: "button" },
    tooltip: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const { isMobile, state } = useSidebar();
    const delegatedProps = reactiveOmit(props, "tooltip");
    return (_ctx, _push, _parent, _attrs) => {
      if (!__props.tooltip) {
        _push(ssrRenderComponent(_sfc_main$1v, mergeProps({ ...unref(delegatedProps), ..._ctx.$attrs }, _attrs), {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent));
      } else {
        _push(ssrRenderComponent(unref(_sfc_main$1y), _attrs, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(unref(_sfc_main$1w), { "as-child": "" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$1v, { ...unref(delegatedProps), ..._ctx.$attrs }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          ssrRenderSlot(_ctx.$slots, "default", {}, null, _push4, _parent4, _scopeId3);
                        } else {
                          return [
                            renderSlot(_ctx.$slots, "default")
                          ];
                        }
                      }),
                      _: 3
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_sfc_main$1v, { ...unref(delegatedProps), ..._ctx.$attrs }, {
                        default: withCtx(() => [
                          renderSlot(_ctx.$slots, "default")
                        ]),
                        _: 3
                      }, 16)
                    ];
                  }
                }),
                _: 3
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(unref(_sfc_main$1x), {
                side: "right",
                align: "center",
                hidden: unref(state) !== "collapsed" || unref(isMobile)
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (typeof __props.tooltip === "string") {
                      _push3(`<!--[-->${ssrInterpolate(__props.tooltip)}<!--]-->`);
                    } else {
                      ssrRenderVNode(_push3, createVNode(resolveDynamicComponent(__props.tooltip), null, null), _parent3, _scopeId2);
                    }
                  } else {
                    return [
                      typeof __props.tooltip === "string" ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                        createTextVNode(toDisplayString(__props.tooltip), 1)
                      ], 64)) : (openBlock(), createBlock(resolveDynamicComponent(__props.tooltip), { key: 1 }))
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(unref(_sfc_main$1w), { "as-child": "" }, {
                  default: withCtx(() => [
                    createVNode(_sfc_main$1v, { ...unref(delegatedProps), ..._ctx.$attrs }, {
                      default: withCtx(() => [
                        renderSlot(_ctx.$slots, "default")
                      ]),
                      _: 3
                    }, 16)
                  ]),
                  _: 3
                }),
                createVNode(unref(_sfc_main$1x), {
                  side: "right",
                  align: "center",
                  hidden: unref(state) !== "collapsed" || unref(isMobile)
                }, {
                  default: withCtx(() => [
                    typeof __props.tooltip === "string" ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                      createTextVNode(toDisplayString(__props.tooltip), 1)
                    ], 64)) : (openBlock(), createBlock(resolveDynamicComponent(__props.tooltip), { key: 1 }))
                  ]),
                  _: 1
                }, 8, ["hidden"])
              ];
            }
          }),
          _: 3
        }, _parent));
      }
    };
  }
});
const _sfc_setup$1u = _sfc_main$1u.setup;
_sfc_main$1u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarMenuButton.vue");
  return _sfc_setup$1u ? _sfc_setup$1u(props, ctx) : void 0;
};
const _sfc_main$1t = {
  __name: "SidebarMenuItem",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<li${ssrRenderAttrs(mergeProps({
        "data-slot": "sidebar-menu-item",
        "data-sidebar": "menu-item",
        class: unref(cn)("group/menu-item relative", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</li>`);
    };
  }
};
const _sfc_setup$1t = _sfc_main$1t.setup;
_sfc_main$1t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarMenuItem.vue");
  return _sfc_setup$1t ? _sfc_setup$1t(props, ctx) : void 0;
};
const _sfc_main$1s = {
  __name: "SidebarProvider",
  __ssrInlineRender: true,
  props: {
    defaultOpen: { type: Boolean, required: false, default: true },
    open: { type: Boolean, required: false, default: void 0 },
    class: { type: null, required: false }
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const isMobile = useMediaQuery("(max-width: 768px)");
    const openMobile = ref(false);
    const open = useVModel(props, "open", emits, {
      defaultValue: props.defaultOpen ?? false,
      passive: props.open === void 0
    });
    function setOpen(value) {
      open.value = value;
      document.cookie = `${SIDEBAR_COOKIE_NAME}=${open.value}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;
    }
    function setOpenMobile(value) {
      openMobile.value = value;
    }
    function toggleSidebar() {
      return isMobile.value ? setOpenMobile(!openMobile.value) : setOpen(!open.value);
    }
    useEventListener("keydown", (event) => {
      if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {
        event.preventDefault();
        toggleSidebar();
      }
    });
    const state = computed(() => open.value ? "expanded" : "collapsed");
    provideSidebarContext({
      state,
      open,
      setOpen,
      isMobile,
      openMobile,
      setOpenMobile,
      toggleSidebar
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TooltipProvider), mergeProps({ "delay-duration": 0 }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div${ssrRenderAttrs(mergeProps({
              "data-slot": "sidebar-wrapper",
              style: {
                "--sidebar-width": unref(SIDEBAR_WIDTH),
                "--sidebar-width-icon": unref(SIDEBAR_WIDTH_ICON)
              },
              class: unref(cn)(
                "group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full",
                props.class
              )
            }, _ctx.$attrs))}${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", mergeProps({
                "data-slot": "sidebar-wrapper",
                style: {
                  "--sidebar-width": unref(SIDEBAR_WIDTH),
                  "--sidebar-width-icon": unref(SIDEBAR_WIDTH_ICON)
                },
                class: unref(cn)(
                  "group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full",
                  props.class
                )
              }, _ctx.$attrs), [
                renderSlot(_ctx.$slots, "default")
              ], 16)
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1s = _sfc_main$1s.setup;
_sfc_main$1s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarProvider.vue");
  return _sfc_setup$1s ? _sfc_setup$1s(props, ctx) : void 0;
};
const _sfc_main$1r = {
  __name: "SidebarRail",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const { toggleSidebar } = useSidebar();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<button${ssrRenderAttrs(mergeProps({
        "data-sidebar": "rail",
        "data-slot": "sidebar-rail",
        "aria-label": "Toggle Sidebar",
        tabindex: -1,
        title: "Toggle Sidebar",
        class: unref(cn)(
          "hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex",
          "in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize",
          "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
          "hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full",
          "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
          "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</button>`);
    };
  }
};
const _sfc_setup$1r = _sfc_main$1r.setup;
_sfc_main$1r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarRail.vue");
  return _sfc_setup$1r ? _sfc_setup$1r(props, ctx) : void 0;
};
const _sfc_main$1q = {
  __name: "Separator",
  __ssrInlineRender: true,
  props: {
    orientation: { type: String, required: false, default: "horizontal" },
    decorative: { type: Boolean, required: false, default: true },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Separator), mergeProps({ "data-slot": "separator-root" }, unref(delegatedProps), {
        class: unref(cn)(
          `bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px`,
          props.class
        )
      }, _attrs), null, _parent));
    };
  }
};
const _sfc_setup$1q = _sfc_main$1q.setup;
_sfc_main$1q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/separator/Separator.vue");
  return _sfc_setup$1q ? _sfc_setup$1q(props, ctx) : void 0;
};
const _sfc_main$1p = {
  __name: "Button",
  __ssrInlineRender: true,
  props: {
    variant: { type: null, required: false },
    size: { type: null, required: false },
    class: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false, default: "button" }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Primitive), mergeProps({
        "data-slot": "button",
        as: __props.as,
        "as-child": __props.asChild,
        class: unref(cn)(unref(buttonVariants)({ variant: __props.variant, size: __props.size }), props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1p = _sfc_main$1p.setup;
_sfc_main$1p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/button/Button.vue");
  return _sfc_setup$1p ? _sfc_setup$1p(props, ctx) : void 0;
};
const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",
        destructive: "bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
        outline: "border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",
        secondary: "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",
        link: "text-primary underline-offset-4 hover:underline"
      },
      size: {
        default: "h-9 px-4 py-2 has-[>svg]:px-3",
        sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
        lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
        icon: "size-9"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
);
const _sfc_main$1o = {
  __name: "SidebarTrigger",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const { toggleSidebar } = useSidebar();
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$1p), mergeProps({
        "data-sidebar": "trigger",
        "data-slot": "sidebar-trigger",
        variant: "ghost",
        size: "icon",
        class: unref(cn)("h-7 w-7", props.class),
        onClick: unref(toggleSidebar)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(PanelLeft), null, null, _parent2, _scopeId));
            _push2(`<span class="sr-only"${_scopeId}>Toggle Sidebar</span>`);
          } else {
            return [
              createVNode(unref(PanelLeft)),
              createVNode("span", { class: "sr-only" }, "Toggle Sidebar")
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1o = _sfc_main$1o.setup;
_sfc_main$1o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/sidebar/SidebarTrigger.vue");
  return _sfc_setup$1o ? _sfc_setup$1o(props, ctx) : void 0;
};
const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline: "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]"
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:p-0!"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
);
const _sfc_main$1n = {
  __name: "app-link",
  __ssrInlineRender: true,
  props: {
    href: {
      type: String,
      default: "#"
    },
    prefetch: {
      type: Boolean,
      default: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Link), mergeProps({
        href: __props.href,
        prefetch: __props.prefetch
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1n = _sfc_main$1n.setup;
_sfc_main$1n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/layouts/app-link.vue");
  return _sfc_setup$1n ? _sfc_setup$1n(props, ctx) : void 0;
};
const _sfc_main$1m = {
  __name: "nav-main",
  __ssrInlineRender: true,
  props: {
    items: Array
  },
  setup(__props) {
    const page = usePage();
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$1E), mergeProps({ class: "group-data-[collapsible=icon]:hidden" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$1D), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Projects`);
                } else {
                  return [
                    createTextVNode("Projects")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$1z), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  ssrRenderList(__props.items, (item) => {
                    _push3(ssrRenderComponent(unref(_sfc_main$1t), {
                      key: item.name
                    }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$1u), {
                            "as-child": "",
                            "is-active": unref(page).component.startsWith(item.name)
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1n, {
                                  href: item.url
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      ssrRenderVNode(_push6, createVNode(resolveDynamicComponent(item.icon), null, null), _parent6, _scopeId5);
                                      _push6(`<span${_scopeId5}>${ssrInterpolate(item.title)}</span>`);
                                    } else {
                                      return [
                                        (openBlock(), createBlock(resolveDynamicComponent(item.icon))),
                                        createVNode("span", null, toDisplayString(item.title), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1n, {
                                    href: item.url
                                  }, {
                                    default: withCtx(() => [
                                      (openBlock(), createBlock(resolveDynamicComponent(item.icon))),
                                      createVNode("span", null, toDisplayString(item.title), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["href"])
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$1u), {
                              "as-child": "",
                              "is-active": unref(page).component.startsWith(item.name)
                            }, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1n, {
                                  href: item.url
                                }, {
                                  default: withCtx(() => [
                                    (openBlock(), createBlock(resolveDynamicComponent(item.icon))),
                                    createVNode("span", null, toDisplayString(item.title), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["href"])
                              ]),
                              _: 2
                            }, 1032, ["is-active"])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (openBlock(true), createBlock(Fragment, null, renderList(__props.items, (item) => {
                      return openBlock(), createBlock(unref(_sfc_main$1t), {
                        key: item.name
                      }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1u), {
                            "as-child": "",
                            "is-active": unref(page).component.startsWith(item.name)
                          }, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1n, {
                                href: item.url
                              }, {
                                default: withCtx(() => [
                                  (openBlock(), createBlock(resolveDynamicComponent(item.icon))),
                                  createVNode("span", null, toDisplayString(item.title), 1)
                                ]),
                                _: 2
                              }, 1032, ["href"])
                            ]),
                            _: 2
                          }, 1032, ["is-active"])
                        ]),
                        _: 2
                      }, 1024);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$1D), null, {
                default: withCtx(() => [
                  createTextVNode("Projects")
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$1z), null, {
                default: withCtx(() => [
                  (openBlock(true), createBlock(Fragment, null, renderList(__props.items, (item) => {
                    return openBlock(), createBlock(unref(_sfc_main$1t), {
                      key: item.name
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$1u), {
                          "as-child": "",
                          "is-active": unref(page).component.startsWith(item.name)
                        }, {
                          default: withCtx(() => [
                            createVNode(_sfc_main$1n, {
                              href: item.url
                            }, {
                              default: withCtx(() => [
                                (openBlock(), createBlock(resolveDynamicComponent(item.icon))),
                                createVNode("span", null, toDisplayString(item.title), 1)
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ]),
                          _: 2
                        }, 1032, ["is-active"])
                      ]),
                      _: 2
                    }, 1024);
                  }), 128))
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1m = _sfc_main$1m.setup;
_sfc_main$1m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/layouts/nav-main.vue");
  return _sfc_setup$1m ? _sfc_setup$1m(props, ctx) : void 0;
};
const _sfc_main$1l = {
  __name: "Avatar",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AvatarRoot), mergeProps({
        "data-slot": "avatar",
        class: unref(cn)(
          "relative flex size-8 shrink-0 overflow-hidden rounded-full",
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1l = _sfc_main$1l.setup;
_sfc_main$1l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/avatar/Avatar.vue");
  return _sfc_setup$1l ? _sfc_setup$1l(props, ctx) : void 0;
};
const _sfc_main$1k = {
  __name: "AvatarFallback",
  __ssrInlineRender: true,
  props: {
    delayMs: { type: Number, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AvatarFallback), mergeProps({ "data-slot": "avatar-fallback" }, unref(delegatedProps), {
        class: unref(cn)(
          "bg-muted flex size-full items-center justify-center rounded-full",
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1k = _sfc_main$1k.setup;
_sfc_main$1k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/avatar/AvatarFallback.vue");
  return _sfc_setup$1k ? _sfc_setup$1k(props, ctx) : void 0;
};
const _sfc_main$1j = {
  __name: "AvatarImage",
  __ssrInlineRender: true,
  props: {
    src: { type: String, required: true },
    referrerPolicy: { type: null, required: false },
    crossOrigin: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AvatarImage), mergeProps({ "data-slot": "avatar-image" }, props, { class: "aspect-square size-full" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1j = _sfc_main$1j.setup;
_sfc_main$1j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/avatar/AvatarImage.vue");
  return _sfc_setup$1j ? _sfc_setup$1j(props, ctx) : void 0;
};
const _sfc_main$1i = {
  __name: "DropdownMenu",
  __ssrInlineRender: true,
  props: {
    defaultOpen: { type: Boolean, required: false },
    open: { type: Boolean, required: false },
    dir: { type: String, required: false },
    modal: { type: Boolean, required: false }
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const forwarded = useForwardPropsEmits(props, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DropdownMenuRoot), mergeProps({ "data-slot": "dropdown-menu" }, unref(forwarded), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1i = _sfc_main$1i.setup;
_sfc_main$1i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenu.vue");
  return _sfc_setup$1i ? _sfc_setup$1i(props, ctx) : void 0;
};
const _sfc_main$1h = {
  __name: "DropdownMenuContent",
  __ssrInlineRender: true,
  props: {
    forceMount: { type: Boolean, required: false },
    loop: { type: Boolean, required: false },
    side: { type: null, required: false },
    sideOffset: { type: Number, required: false, default: 4 },
    align: { type: null, required: false },
    alignOffset: { type: Number, required: false },
    avoidCollisions: { type: Boolean, required: false },
    collisionBoundary: { type: null, required: false },
    collisionPadding: { type: [Number, Object], required: false },
    arrowPadding: { type: Number, required: false },
    sticky: { type: String, required: false },
    hideWhenDetached: { type: Boolean, required: false },
    positionStrategy: { type: String, required: false },
    updatePositionStrategy: { type: String, required: false },
    disableUpdateOnLayoutShift: { type: Boolean, required: false },
    prioritizePosition: { type: Boolean, required: false },
    reference: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "closeAutoFocus"
  ],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const delegatedProps = reactiveOmit(props, "class");
    const forwarded = useForwardPropsEmits(delegatedProps, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DropdownMenuPortal), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(DropdownMenuContent), mergeProps({ "data-slot": "dropdown-menu-content" }, unref(forwarded), {
              class: unref(cn)(
                "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--reka-dropdown-menu-content-available-height) min-w-[8rem] origin-(--reka-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md",
                props.class
              )
            }), {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                } else {
                  return [
                    renderSlot(_ctx.$slots, "default")
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(DropdownMenuContent), mergeProps({ "data-slot": "dropdown-menu-content" }, unref(forwarded), {
                class: unref(cn)(
                  "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--reka-dropdown-menu-content-available-height) min-w-[8rem] origin-(--reka-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md",
                  props.class
                )
              }), {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default")
                ]),
                _: 3
              }, 16, ["class"])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1h = _sfc_main$1h.setup;
_sfc_main$1h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenuContent.vue");
  return _sfc_setup$1h ? _sfc_setup$1h(props, ctx) : void 0;
};
const _sfc_main$1g = {
  __name: "DropdownMenuGroup",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DropdownMenuGroup), mergeProps({ "data-slot": "dropdown-menu-group" }, props, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1g = _sfc_main$1g.setup;
_sfc_main$1g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenuGroup.vue");
  return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
};
const _sfc_main$1f = {
  __name: "DropdownMenuItem",
  __ssrInlineRender: true,
  props: {
    disabled: { type: Boolean, required: false },
    textValue: { type: String, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false },
    inset: { type: Boolean, required: false },
    variant: { type: String, required: false, default: "default" }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "inset", "variant", "class");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DropdownMenuItem), mergeProps({
        "data-slot": "dropdown-menu-item",
        "data-inset": __props.inset ? "" : void 0,
        "data-variant": __props.variant
      }, unref(forwardedProps), {
        class: unref(cn)(
          `focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1f = _sfc_main$1f.setup;
_sfc_main$1f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenuItem.vue");
  return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
};
const _sfc_main$1e = {
  __name: "DropdownMenuLabel",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false },
    inset: { type: Boolean, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class", "inset");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DropdownMenuLabel), mergeProps({
        "data-slot": "dropdown-menu-label",
        "data-inset": __props.inset ? "" : void 0
      }, unref(forwardedProps), {
        class: unref(cn)("px-2 py-1.5 text-sm font-medium data-[inset]:pl-8", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1e = _sfc_main$1e.setup;
_sfc_main$1e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenuLabel.vue");
  return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
};
const _sfc_main$1d = {
  __name: "DropdownMenuSeparator",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DropdownMenuSeparator), mergeProps({ "data-slot": "dropdown-menu-separator" }, unref(delegatedProps), {
        class: unref(cn)("bg-border -mx-1 my-1 h-px", props.class)
      }, _attrs), null, _parent));
    };
  }
};
const _sfc_setup$1d = _sfc_main$1d.setup;
_sfc_main$1d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenuSeparator.vue");
  return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
};
const _sfc_main$1c = {
  __name: "DropdownMenuShortcut",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<span${ssrRenderAttrs(mergeProps({
        "data-slot": "dropdown-menu-shortcut",
        class: unref(cn)("text-muted-foreground ml-auto text-xs tracking-widest", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</span>`);
    };
  }
};
const _sfc_setup$1c = _sfc_main$1c.setup;
_sfc_main$1c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenuShortcut.vue");
  return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
};
const _sfc_main$1b = {
  __name: "DropdownMenuTrigger",
  __ssrInlineRender: true,
  props: {
    disabled: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const forwardedProps = useForwardProps(props);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DropdownMenuTrigger), mergeProps({ "data-slot": "dropdown-menu-trigger" }, unref(forwardedProps), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$1b = _sfc_main$1b.setup;
_sfc_main$1b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dropdown-menu/DropdownMenuTrigger.vue");
  return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
};
const _sfc_main$1a = {
  __name: "nav-user",
  __ssrInlineRender: true,
  setup(__props) {
    const form = useForm();
    const handleLogout = (e) => {
      e.preventDefault();
      form.post("/logout");
    };
    const handleRouter = (url) => {
      router.get(url);
    };
    const user = usePage().props.auth.user;
    const { isMobile } = useSidebar();
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$1z), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$1t), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$1i), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$1b), { "as-child": "" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$1u), {
                                size: "lg",
                                class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                              }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(_sfc_main$1j), {
                                            src: unref(user).avatar ?? "https://github.com/unovue.png",
                                            alt: unref(user).name
                                          }, null, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              var _a, _b;
                                              if (_push8) {
                                                _push8(`${ssrInterpolate(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U")}`);
                                              } else {
                                                return [
                                                  createTextVNode(toDisplayString(((_b = unref(user).name) == null ? void 0 : _b.charAt(0)) ?? "U"), 1)
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(unref(_sfc_main$1j), {
                                              src: unref(user).avatar ?? "https://github.com/unovue.png",
                                              alt: unref(user).name
                                            }, null, 8, ["src", "alt"]),
                                            createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                              default: withCtx(() => {
                                                var _a;
                                                return [
                                                  createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                                ];
                                              }),
                                              _: 1
                                            })
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(`<div class="grid flex-1 text-left text-sm leading-tight"${_scopeId5}><span class="truncate font-semibold"${_scopeId5}>${ssrInterpolate(unref(user).name)}</span><span class="truncate text-xs"${_scopeId5}>${ssrInterpolate(unref(user).email)}</span></div>`);
                                    _push6(ssrRenderComponent(unref(ChevronsUpDown), { class: "ml-auto size-4" }, null, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1j), {
                                            src: unref(user).avatar ?? "https://github.com/unovue.png",
                                            alt: unref(user).name
                                          }, null, 8, ["src", "alt"]),
                                          createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                            default: withCtx(() => {
                                              var _a;
                                              return [
                                                createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                              ];
                                            }),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                        createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                        createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                      ]),
                                      createVNode(unref(ChevronsUpDown), { class: "ml-auto size-4" })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$1u), {
                                  size: "lg",
                                  class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$1j), {
                                          src: unref(user).avatar ?? "https://github.com/unovue.png",
                                          alt: unref(user).name
                                        }, null, 8, ["src", "alt"]),
                                        createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                          default: withCtx(() => {
                                            var _a;
                                            return [
                                              createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                            ];
                                          }),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    }),
                                    createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                      createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                      createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                    ]),
                                    createVNode(unref(ChevronsUpDown), { class: "ml-auto size-4" })
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$1h), {
                          class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                          side: unref(isMobile) ? "bottom" : "right",
                          align: "end",
                          "side-offset": 4
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$1e), { class: "p-0 font-normal" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<div class="flex items-center gap-2 px-1 py-1.5 text-left text-sm"${_scopeId5}>`);
                                    _push6(ssrRenderComponent(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(_sfc_main$1j), {
                                            src: unref(user).avatar ?? "https://github.com/unovue.png",
                                            alt: unref(user).name
                                          }, null, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              var _a, _b;
                                              if (_push8) {
                                                _push8(`${ssrInterpolate(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U")}`);
                                              } else {
                                                return [
                                                  createTextVNode(toDisplayString(((_b = unref(user).name) == null ? void 0 : _b.charAt(0)) ?? "U"), 1)
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(unref(_sfc_main$1j), {
                                              src: unref(user).avatar ?? "https://github.com/unovue.png",
                                              alt: unref(user).name
                                            }, null, 8, ["src", "alt"]),
                                            createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                              default: withCtx(() => {
                                                var _a;
                                                return [
                                                  createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                                ];
                                              }),
                                              _: 1
                                            })
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(`<div class="grid flex-1 text-left text-sm leading-tight"${_scopeId5}><span class="truncate font-semibold"${_scopeId5}>${ssrInterpolate(unref(user).name)}</span><span class="truncate text-xs"${_scopeId5}>${ssrInterpolate(unref(user).email)}</span></div></div>`);
                                  } else {
                                    return [
                                      createVNode("div", { class: "flex items-center gap-2 px-1 py-1.5 text-left text-sm" }, [
                                        createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$1j), {
                                              src: unref(user).avatar ?? "https://github.com/unovue.png",
                                              alt: unref(user).name
                                            }, null, 8, ["src", "alt"]),
                                            createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                              default: withCtx(() => {
                                                var _a;
                                                return [
                                                  createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                                ];
                                              }),
                                              _: 1
                                            })
                                          ]),
                                          _: 1
                                        }),
                                        createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                          createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                          createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                        ])
                                      ])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$1d), null, null, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$1g), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$1f), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(Sparkles), null, null, _parent7, _scopeId6));
                                          _push7(` Upgrade to Pro `);
                                        } else {
                                          return [
                                            createVNode(unref(Sparkles)),
                                            createTextVNode(" Upgrade to Pro ")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$1f), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(Sparkles)),
                                          createTextVNode(" Upgrade to Pro ")
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$1d), null, null, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$1g), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$1f), {
                                      onClick: ($event) => handleRouter("/profile")
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(BadgeCheck), null, null, _parent7, _scopeId6));
                                          _push7(` Account `);
                                        } else {
                                          return [
                                            createVNode(unref(BadgeCheck)),
                                            createTextVNode(" Account ")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$1f), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(CreditCard), null, null, _parent7, _scopeId6));
                                          _push7(` Billing `);
                                        } else {
                                          return [
                                            createVNode(unref(CreditCard)),
                                            createTextVNode(" Billing ")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$1f), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(Bell), null, null, _parent7, _scopeId6));
                                          _push7(` Notifications `);
                                        } else {
                                          return [
                                            createVNode(unref(Bell)),
                                            createTextVNode(" Notifications ")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$1f), {
                                        onClick: ($event) => handleRouter("/profile")
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(BadgeCheck)),
                                          createTextVNode(" Account ")
                                        ]),
                                        _: 1
                                      }, 8, ["onClick"]),
                                      createVNode(unref(_sfc_main$1f), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(CreditCard)),
                                          createTextVNode(" Billing ")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$1f), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(Bell)),
                                          createTextVNode(" Notifications ")
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$1d), null, null, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$1f), { onClick: handleLogout }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(LogOut), null, null, _parent6, _scopeId5));
                                    _push6(` Log out `);
                                  } else {
                                    return [
                                      createVNode(unref(LogOut)),
                                      createTextVNode(" Log out ")
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$1e), { class: "p-0 font-normal" }, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "flex items-center gap-2 px-1 py-1.5 text-left text-sm" }, [
                                      createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1j), {
                                            src: unref(user).avatar ?? "https://github.com/unovue.png",
                                            alt: unref(user).name
                                          }, null, 8, ["src", "alt"]),
                                          createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                            default: withCtx(() => {
                                              var _a;
                                              return [
                                                createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                              ];
                                            }),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                        createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                        createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                      ])
                                    ])
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$1d)),
                                createVNode(unref(_sfc_main$1g), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1f), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(Sparkles)),
                                        createTextVNode(" Upgrade to Pro ")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$1d)),
                                createVNode(unref(_sfc_main$1g), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1f), {
                                      onClick: ($event) => handleRouter("/profile")
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(BadgeCheck)),
                                        createTextVNode(" Account ")
                                      ]),
                                      _: 1
                                    }, 8, ["onClick"]),
                                    createVNode(unref(_sfc_main$1f), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(CreditCard)),
                                        createTextVNode(" Billing ")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$1f), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(Bell)),
                                        createTextVNode(" Notifications ")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$1d)),
                                createVNode(unref(_sfc_main$1f), { onClick: handleLogout }, {
                                  default: withCtx(() => [
                                    createVNode(unref(LogOut)),
                                    createTextVNode(" Log out ")
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1u), {
                                size: "lg",
                                class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1j), {
                                        src: unref(user).avatar ?? "https://github.com/unovue.png",
                                        alt: unref(user).name
                                      }, null, 8, ["src", "alt"]),
                                      createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                        default: withCtx(() => {
                                          var _a;
                                          return [
                                            createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                          ];
                                        }),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  }),
                                  createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                    createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                    createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                  ]),
                                  createVNode(unref(ChevronsUpDown), { class: "ml-auto size-4" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1h), {
                            class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                            side: unref(isMobile) ? "bottom" : "right",
                            align: "end",
                            "side-offset": 4
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1e), { class: "p-0 font-normal" }, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "flex items-center gap-2 px-1 py-1.5 text-left text-sm" }, [
                                    createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$1j), {
                                          src: unref(user).avatar ?? "https://github.com/unovue.png",
                                          alt: unref(user).name
                                        }, null, 8, ["src", "alt"]),
                                        createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                          default: withCtx(() => {
                                            var _a;
                                            return [
                                              createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                            ];
                                          }),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    }),
                                    createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                      createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                      createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                    ])
                                  ])
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$1d)),
                              createVNode(unref(_sfc_main$1g), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(Sparkles)),
                                      createTextVNode(" Upgrade to Pro ")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$1d)),
                              createVNode(unref(_sfc_main$1g), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), {
                                    onClick: ($event) => handleRouter("/profile")
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(BadgeCheck)),
                                      createTextVNode(" Account ")
                                    ]),
                                    _: 1
                                  }, 8, ["onClick"]),
                                  createVNode(unref(_sfc_main$1f), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(CreditCard)),
                                      createTextVNode(" Billing ")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$1f), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(Bell)),
                                      createTextVNode(" Notifications ")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$1d)),
                              createVNode(unref(_sfc_main$1f), { onClick: handleLogout }, {
                                default: withCtx(() => [
                                  createVNode(unref(LogOut)),
                                  createTextVNode(" Log out ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["side"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$1i), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1u), {
                              size: "lg",
                              class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                            }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: unref(user).avatar ?? "https://github.com/unovue.png",
                                      alt: unref(user).name
                                    }, null, 8, ["src", "alt"]),
                                    createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                      default: withCtx(() => {
                                        var _a;
                                        return [
                                          createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                  createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                  createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                ]),
                                createVNode(unref(ChevronsUpDown), { class: "ml-auto size-4" })
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1h), {
                          class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                          side: unref(isMobile) ? "bottom" : "right",
                          align: "end",
                          "side-offset": 4
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1e), { class: "p-0 font-normal" }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex items-center gap-2 px-1 py-1.5 text-left text-sm" }, [
                                  createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1j), {
                                        src: unref(user).avatar ?? "https://github.com/unovue.png",
                                        alt: unref(user).name
                                      }, null, 8, ["src", "alt"]),
                                      createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                        default: withCtx(() => {
                                          var _a;
                                          return [
                                            createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                          ];
                                        }),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  }),
                                  createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                    createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                    createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                  ])
                                ])
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1d)),
                            createVNode(unref(_sfc_main$1g), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1f), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(Sparkles)),
                                    createTextVNode(" Upgrade to Pro ")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1d)),
                            createVNode(unref(_sfc_main$1g), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1f), {
                                  onClick: ($event) => handleRouter("/profile")
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(BadgeCheck)),
                                    createTextVNode(" Account ")
                                  ]),
                                  _: 1
                                }, 8, ["onClick"]),
                                createVNode(unref(_sfc_main$1f), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(CreditCard)),
                                    createTextVNode(" Billing ")
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$1f), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(Bell)),
                                    createTextVNode(" Notifications ")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1d)),
                            createVNode(unref(_sfc_main$1f), { onClick: handleLogout }, {
                              default: withCtx(() => [
                                createVNode(unref(LogOut)),
                                createTextVNode(" Log out ")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["side"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$1t), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$1i), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1u), {
                            size: "lg",
                            class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1j), {
                                    src: unref(user).avatar ?? "https://github.com/unovue.png",
                                    alt: unref(user).name
                                  }, null, 8, ["src", "alt"]),
                                  createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                    default: withCtx(() => {
                                      var _a;
                                      return [
                                        createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                      ];
                                    }),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                              ]),
                              createVNode(unref(ChevronsUpDown), { class: "ml-auto size-4" })
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$1h), {
                        class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                        side: unref(isMobile) ? "bottom" : "right",
                        align: "end",
                        "side-offset": 4
                      }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1e), { class: "p-0 font-normal" }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "flex items-center gap-2 px-1 py-1.5 text-left text-sm" }, [
                                createVNode(unref(_sfc_main$1l), { class: "h-8 w-8 rounded-lg" }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: unref(user).avatar ?? "https://github.com/unovue.png",
                                      alt: unref(user).name
                                    }, null, 8, ["src", "alt"]),
                                    createVNode(unref(_sfc_main$1k), { class: "rounded-lg" }, {
                                      default: withCtx(() => {
                                        var _a;
                                        return [
                                          createTextVNode(toDisplayString(((_a = unref(user).name) == null ? void 0 : _a.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                  createVNode("span", { class: "truncate font-semibold" }, toDisplayString(unref(user).name), 1),
                                  createVNode("span", { class: "truncate text-xs" }, toDisplayString(unref(user).email), 1)
                                ])
                              ])
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1d)),
                          createVNode(unref(_sfc_main$1g), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1f), null, {
                                default: withCtx(() => [
                                  createVNode(unref(Sparkles)),
                                  createTextVNode(" Upgrade to Pro ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1d)),
                          createVNode(unref(_sfc_main$1g), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1f), {
                                onClick: ($event) => handleRouter("/profile")
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(BadgeCheck)),
                                  createTextVNode(" Account ")
                                ]),
                                _: 1
                              }, 8, ["onClick"]),
                              createVNode(unref(_sfc_main$1f), null, {
                                default: withCtx(() => [
                                  createVNode(unref(CreditCard)),
                                  createTextVNode(" Billing ")
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$1f), null, {
                                default: withCtx(() => [
                                  createVNode(unref(Bell)),
                                  createTextVNode(" Notifications ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1d)),
                          createVNode(unref(_sfc_main$1f), { onClick: handleLogout }, {
                            default: withCtx(() => [
                              createVNode(unref(LogOut)),
                              createTextVNode(" Log out ")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }, 8, ["side"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1a = _sfc_main$1a.setup;
_sfc_main$1a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/layouts/nav-user.vue");
  return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
};
const _sfc_main$19 = {
  __name: "team-switcher",
  __ssrInlineRender: true,
  props: {
    teams: Array
  },
  setup(__props) {
    const props = __props;
    const { isMobile } = useSidebar();
    const activeTeam = ref(props.teams[0]);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$1z), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$1t), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$1i), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$1b), { "as-child": "" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$1u), {
                                size: "lg",
                                class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                              }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<div class="flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground"${_scopeId5}>`);
                                    ssrRenderVNode(_push6, createVNode(resolveDynamicComponent(activeTeam.value.logo), { class: "size-4" }, null), _parent6, _scopeId5);
                                    _push6(`</div><div class="grid flex-1 text-left text-sm leading-tight"${_scopeId5}><span class="truncate font-semibold"${_scopeId5}>${ssrInterpolate(activeTeam.value.name)}</span><span class="truncate text-xs"${_scopeId5}>${ssrInterpolate(activeTeam.value.plan)}</span></div>`);
                                    _push6(ssrRenderComponent(unref(ChevronsUpDown), { class: "ml-auto" }, null, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode("div", { class: "flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground" }, [
                                        (openBlock(), createBlock(resolveDynamicComponent(activeTeam.value.logo), { class: "size-4" }))
                                      ]),
                                      createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                        createVNode("span", { class: "truncate font-semibold" }, toDisplayString(activeTeam.value.name), 1),
                                        createVNode("span", { class: "truncate text-xs" }, toDisplayString(activeTeam.value.plan), 1)
                                      ]),
                                      createVNode(unref(ChevronsUpDown), { class: "ml-auto" })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$1u), {
                                  size: "lg",
                                  class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                                }, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground" }, [
                                      (openBlock(), createBlock(resolveDynamicComponent(activeTeam.value.logo), { class: "size-4" }))
                                    ]),
                                    createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                      createVNode("span", { class: "truncate font-semibold" }, toDisplayString(activeTeam.value.name), 1),
                                      createVNode("span", { class: "truncate text-xs" }, toDisplayString(activeTeam.value.plan), 1)
                                    ]),
                                    createVNode(unref(ChevronsUpDown), { class: "ml-auto" })
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$1h), {
                          class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                          align: "start",
                          side: unref(isMobile) ? "bottom" : "right",
                          "side-offset": 4
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$1e), { class: "text-xs text-muted-foreground" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(` Teams `);
                                  } else {
                                    return [
                                      createTextVNode(" Teams ")
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(`<!--[-->`);
                              ssrRenderList(__props.teams, (team, index) => {
                                _push5(ssrRenderComponent(unref(_sfc_main$1f), {
                                  key: team.name,
                                  class: "gap-2 p-2",
                                  onClick: ($event) => activeTeam.value = team
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(`<div class="flex size-6 items-center justify-center rounded-sm border"${_scopeId5}>`);
                                      ssrRenderVNode(_push6, createVNode(resolveDynamicComponent(team.logo), { class: "size-4 shrink-0" }, null), _parent6, _scopeId5);
                                      _push6(`</div> ${ssrInterpolate(team.name)} `);
                                      _push6(ssrRenderComponent(unref(_sfc_main$1c), null, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(`⌘${ssrInterpolate(index + 1)}`);
                                          } else {
                                            return [
                                              createTextVNode("⌘" + toDisplayString(index + 1), 1)
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode("div", { class: "flex size-6 items-center justify-center rounded-sm border" }, [
                                          (openBlock(), createBlock(resolveDynamicComponent(team.logo), { class: "size-4 shrink-0" }))
                                        ]),
                                        createTextVNode(" " + toDisplayString(team.name) + " ", 1),
                                        createVNode(unref(_sfc_main$1c), null, {
                                          default: withCtx(() => [
                                            createTextVNode("⌘" + toDisplayString(index + 1), 1)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              });
                              _push5(`<!--]-->`);
                              _push5(ssrRenderComponent(unref(_sfc_main$1d), null, null, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$1f), { class: "gap-2 p-2" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<div class="flex size-6 items-center justify-center rounded-md border bg-background"${_scopeId5}>`);
                                    _push6(ssrRenderComponent(unref(Plus), { class: "size-4" }, null, _parent6, _scopeId5));
                                    _push6(`</div><div class="font-medium text-muted-foreground"${_scopeId5}>Add team</div>`);
                                  } else {
                                    return [
                                      createVNode("div", { class: "flex size-6 items-center justify-center rounded-md border bg-background" }, [
                                        createVNode(unref(Plus), { class: "size-4" })
                                      ]),
                                      createVNode("div", { class: "font-medium text-muted-foreground" }, "Add team")
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$1e), { class: "text-xs text-muted-foreground" }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Teams ")
                                  ]),
                                  _: 1
                                }),
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.teams, (team, index) => {
                                  return openBlock(), createBlock(unref(_sfc_main$1f), {
                                    key: team.name,
                                    class: "gap-2 p-2",
                                    onClick: ($event) => activeTeam.value = team
                                  }, {
                                    default: withCtx(() => [
                                      createVNode("div", { class: "flex size-6 items-center justify-center rounded-sm border" }, [
                                        (openBlock(), createBlock(resolveDynamicComponent(team.logo), { class: "size-4 shrink-0" }))
                                      ]),
                                      createTextVNode(" " + toDisplayString(team.name) + " ", 1),
                                      createVNode(unref(_sfc_main$1c), null, {
                                        default: withCtx(() => [
                                          createTextVNode("⌘" + toDisplayString(index + 1), 1)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]);
                                }), 128)),
                                createVNode(unref(_sfc_main$1d)),
                                createVNode(unref(_sfc_main$1f), { class: "gap-2 p-2" }, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "flex size-6 items-center justify-center rounded-md border bg-background" }, [
                                      createVNode(unref(Plus), { class: "size-4" })
                                    ]),
                                    createVNode("div", { class: "font-medium text-muted-foreground" }, "Add team")
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1u), {
                                size: "lg",
                                class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                              }, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground" }, [
                                    (openBlock(), createBlock(resolveDynamicComponent(activeTeam.value.logo), { class: "size-4" }))
                                  ]),
                                  createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                    createVNode("span", { class: "truncate font-semibold" }, toDisplayString(activeTeam.value.name), 1),
                                    createVNode("span", { class: "truncate text-xs" }, toDisplayString(activeTeam.value.plan), 1)
                                  ]),
                                  createVNode(unref(ChevronsUpDown), { class: "ml-auto" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1h), {
                            class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                            align: "start",
                            side: unref(isMobile) ? "bottom" : "right",
                            "side-offset": 4
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1e), { class: "text-xs text-muted-foreground" }, {
                                default: withCtx(() => [
                                  createTextVNode(" Teams ")
                                ]),
                                _: 1
                              }),
                              (openBlock(true), createBlock(Fragment, null, renderList(__props.teams, (team, index) => {
                                return openBlock(), createBlock(unref(_sfc_main$1f), {
                                  key: team.name,
                                  class: "gap-2 p-2",
                                  onClick: ($event) => activeTeam.value = team
                                }, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "flex size-6 items-center justify-center rounded-sm border" }, [
                                      (openBlock(), createBlock(resolveDynamicComponent(team.logo), { class: "size-4 shrink-0" }))
                                    ]),
                                    createTextVNode(" " + toDisplayString(team.name) + " ", 1),
                                    createVNode(unref(_sfc_main$1c), null, {
                                      default: withCtx(() => [
                                        createTextVNode("⌘" + toDisplayString(index + 1), 1)
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ]),
                                  _: 2
                                }, 1032, ["onClick"]);
                              }), 128)),
                              createVNode(unref(_sfc_main$1d)),
                              createVNode(unref(_sfc_main$1f), { class: "gap-2 p-2" }, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "flex size-6 items-center justify-center rounded-md border bg-background" }, [
                                    createVNode(unref(Plus), { class: "size-4" })
                                  ]),
                                  createVNode("div", { class: "font-medium text-muted-foreground" }, "Add team")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["side"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$1i), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1u), {
                              size: "lg",
                              class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground" }, [
                                  (openBlock(), createBlock(resolveDynamicComponent(activeTeam.value.logo), { class: "size-4" }))
                                ]),
                                createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                  createVNode("span", { class: "truncate font-semibold" }, toDisplayString(activeTeam.value.name), 1),
                                  createVNode("span", { class: "truncate text-xs" }, toDisplayString(activeTeam.value.plan), 1)
                                ]),
                                createVNode(unref(ChevronsUpDown), { class: "ml-auto" })
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1h), {
                          class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                          align: "start",
                          side: unref(isMobile) ? "bottom" : "right",
                          "side-offset": 4
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1e), { class: "text-xs text-muted-foreground" }, {
                              default: withCtx(() => [
                                createTextVNode(" Teams ")
                              ]),
                              _: 1
                            }),
                            (openBlock(true), createBlock(Fragment, null, renderList(__props.teams, (team, index) => {
                              return openBlock(), createBlock(unref(_sfc_main$1f), {
                                key: team.name,
                                class: "gap-2 p-2",
                                onClick: ($event) => activeTeam.value = team
                              }, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "flex size-6 items-center justify-center rounded-sm border" }, [
                                    (openBlock(), createBlock(resolveDynamicComponent(team.logo), { class: "size-4 shrink-0" }))
                                  ]),
                                  createTextVNode(" " + toDisplayString(team.name) + " ", 1),
                                  createVNode(unref(_sfc_main$1c), null, {
                                    default: withCtx(() => [
                                      createTextVNode("⌘" + toDisplayString(index + 1), 1)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1032, ["onClick"]);
                            }), 128)),
                            createVNode(unref(_sfc_main$1d)),
                            createVNode(unref(_sfc_main$1f), { class: "gap-2 p-2" }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex size-6 items-center justify-center rounded-md border bg-background" }, [
                                  createVNode(unref(Plus), { class: "size-4" })
                                ]),
                                createVNode("div", { class: "font-medium text-muted-foreground" }, "Add team")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["side"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$1t), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$1i), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1u), {
                            size: "lg",
                            class: "data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground" }, [
                                (openBlock(), createBlock(resolveDynamicComponent(activeTeam.value.logo), { class: "size-4" }))
                              ]),
                              createVNode("div", { class: "grid flex-1 text-left text-sm leading-tight" }, [
                                createVNode("span", { class: "truncate font-semibold" }, toDisplayString(activeTeam.value.name), 1),
                                createVNode("span", { class: "truncate text-xs" }, toDisplayString(activeTeam.value.plan), 1)
                              ]),
                              createVNode(unref(ChevronsUpDown), { class: "ml-auto" })
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$1h), {
                        class: "w-[--reka-dropdown-menu-trigger-width] min-w-56 rounded-lg",
                        align: "start",
                        side: unref(isMobile) ? "bottom" : "right",
                        "side-offset": 4
                      }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1e), { class: "text-xs text-muted-foreground" }, {
                            default: withCtx(() => [
                              createTextVNode(" Teams ")
                            ]),
                            _: 1
                          }),
                          (openBlock(true), createBlock(Fragment, null, renderList(__props.teams, (team, index) => {
                            return openBlock(), createBlock(unref(_sfc_main$1f), {
                              key: team.name,
                              class: "gap-2 p-2",
                              onClick: ($event) => activeTeam.value = team
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex size-6 items-center justify-center rounded-sm border" }, [
                                  (openBlock(), createBlock(resolveDynamicComponent(team.logo), { class: "size-4 shrink-0" }))
                                ]),
                                createTextVNode(" " + toDisplayString(team.name) + " ", 1),
                                createVNode(unref(_sfc_main$1c), null, {
                                  default: withCtx(() => [
                                    createTextVNode("⌘" + toDisplayString(index + 1), 1)
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1032, ["onClick"]);
                          }), 128)),
                          createVNode(unref(_sfc_main$1d)),
                          createVNode(unref(_sfc_main$1f), { class: "gap-2 p-2" }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "flex size-6 items-center justify-center rounded-md border bg-background" }, [
                                createVNode(unref(Plus), { class: "size-4" })
                              ]),
                              createVNode("div", { class: "font-medium text-muted-foreground" }, "Add team")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }, 8, ["side"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$19 = _sfc_main$19.setup;
_sfc_main$19.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/layouts/team-switcher.vue");
  return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
};
const _sfc_main$18 = {
  __name: "app-sidebar",
  __ssrInlineRender: true,
  setup(__props) {
    const data = {
      teams: [
        {
          name: "Acme Inc",
          logo: GalleryVerticalEnd,
          plan: "Enterprise"
        },
        {
          name: "Acme Corp.",
          logo: AudioWaveform,
          plan: "Startup"
        },
        {
          name: "Evil Corp.",
          logo: Command,
          plan: "Free"
        }
      ],
      items: [
        {
          title: "Dashboard",
          url: "/dashboard",
          icon: LayoutDashboard,
          name: "app/dashboard"
        },
        {
          title: "Project",
          url: "/project",
          icon: Frame,
          name: "app/project"
        },
        {
          title: "Your Task",
          url: "/task",
          icon: ClipboardCheck,
          name: "app/task"
        }
      ]
    };
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$1H), mergeProps(props, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$1C), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$19, {
                    teams: data.teams
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$19, {
                      teams: data.teams
                    }, null, 8, ["teams"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$1G), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1m, {
                    items: data.items
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1m, {
                      items: data.items
                    }, null, 8, ["items"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$1F), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1a, null, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1a)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$1r), null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$1C), null, {
                default: withCtx(() => [
                  createVNode(_sfc_main$19, {
                    teams: data.teams
                  }, null, 8, ["teams"])
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$1G), null, {
                default: withCtx(() => [
                  createVNode(_sfc_main$1m, {
                    items: data.items
                  }, null, 8, ["items"])
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$1F), null, {
                default: withCtx(() => [
                  createVNode(_sfc_main$1a)
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$1r))
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$18 = _sfc_main$18.setup;
_sfc_main$18.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/layouts/app-sidebar.vue");
  return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
};
const _sfc_main$17 = {
  __name: "Breadcrumb",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<nav${ssrRenderAttrs(mergeProps({
        "aria-label": "breadcrumb",
        "data-slot": "breadcrumb",
        class: props.class
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</nav>`);
    };
  }
};
const _sfc_setup$17 = _sfc_main$17.setup;
_sfc_main$17.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/breadcrumb/Breadcrumb.vue");
  return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
};
const _sfc_main$16 = {
  __name: "BreadcrumbItem",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<li${ssrRenderAttrs(mergeProps({
        "data-slot": "breadcrumb-item",
        class: unref(cn)("inline-flex items-center gap-1.5", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</li>`);
    };
  }
};
const _sfc_setup$16 = _sfc_main$16.setup;
_sfc_main$16.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/breadcrumb/BreadcrumbItem.vue");
  return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
};
const _sfc_main$15 = {
  __name: "BreadcrumbLink",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false, default: "a" },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Primitive), mergeProps({
        "data-slot": "breadcrumb-link",
        as: __props.as,
        "as-child": __props.asChild,
        class: unref(cn)("hover:text-foreground transition-colors", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$15 = _sfc_main$15.setup;
_sfc_main$15.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/breadcrumb/BreadcrumbLink.vue");
  return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
};
const _sfc_main$14 = {
  __name: "BreadcrumbList",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<ol${ssrRenderAttrs(mergeProps({
        "data-slot": "breadcrumb-list",
        class: unref(cn)(
          "text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</ol>`);
    };
  }
};
const _sfc_setup$14 = _sfc_main$14.setup;
_sfc_main$14.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/breadcrumb/BreadcrumbList.vue");
  return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
};
const _sfc_main$13 = {
  __name: "BreadcrumbPage",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<span${ssrRenderAttrs(mergeProps({
        "data-slot": "breadcrumb-page",
        role: "link",
        "aria-disabled": "true",
        "aria-current": "page",
        class: unref(cn)("text-foreground font-normal", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</span>`);
    };
  }
};
const _sfc_setup$13 = _sfc_main$13.setup;
_sfc_main$13.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/breadcrumb/BreadcrumbPage.vue");
  return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
};
const _sfc_main$12 = {
  __name: "BreadcrumbSeparator",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<li${ssrRenderAttrs(mergeProps({
        "data-slot": "breadcrumb-separator",
        role: "presentation",
        "aria-hidden": "true",
        class: unref(cn)("[&>svg]:size-3.5", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, () => {
        _push(ssrRenderComponent(unref(ChevronRight), null, null, _parent));
      }, _push, _parent);
      _push(`</li>`);
    };
  }
};
const _sfc_setup$12 = _sfc_main$12.setup;
_sfc_main$12.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/breadcrumb/BreadcrumbSeparator.vue");
  return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
};
const _sfc_main$11 = {
  __name: "breadcrumb",
  __ssrInlineRender: true,
  props: {
    breadcrumbs: {
      type: Array,
      default: () => []
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$17), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<!--[-->`);
            ssrRenderList(__props.breadcrumbs, (item) => {
              _push2(ssrRenderComponent(unref(_sfc_main$14), {
                key: item.label
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(unref(_sfc_main$16), { class: "hidden md:block" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$15), {
                            href: item.url
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`${ssrInterpolate(item.label)}`);
                              } else {
                                return [
                                  createTextVNode(toDisplayString(item.label), 1)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$15), {
                              href: item.url
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(item.label), 1)
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                    if (item.subs) {
                      _push3(`<!--[-->`);
                      _push3(ssrRenderComponent(unref(_sfc_main$12), { class: "hidden md:block" }, null, _parent3, _scopeId2));
                      _push3(`<!--[-->`);
                      ssrRenderList(item.subs, (sub) => {
                        _push3(ssrRenderComponent(unref(_sfc_main$16), {
                          key: sub.label
                        }, {
                          default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                            if (_push4) {
                              _push4(ssrRenderComponent(unref(_sfc_main$13), null, {
                                default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                  if (_push5) {
                                    _push5(`${ssrInterpolate(sub.label)}`);
                                  } else {
                                    return [
                                      createTextVNode(toDisplayString(sub.label), 1)
                                    ];
                                  }
                                }),
                                _: 2
                              }, _parent4, _scopeId3));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$13), null, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(sub.label), 1)
                                  ]),
                                  _: 2
                                }, 1024)
                              ];
                            }
                          }),
                          _: 2
                        }, _parent3, _scopeId2));
                      });
                      _push3(`<!--]--><!--]-->`);
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      createVNode(unref(_sfc_main$16), { class: "hidden md:block" }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$15), {
                            href: item.url
                          }, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(item.label), 1)
                            ]),
                            _: 2
                          }, 1032, ["href"])
                        ]),
                        _: 2
                      }, 1024),
                      item.subs ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                        createVNode(unref(_sfc_main$12), { class: "hidden md:block" }),
                        (openBlock(true), createBlock(Fragment, null, renderList(item.subs, (sub) => {
                          return openBlock(), createBlock(unref(_sfc_main$16), {
                            key: sub.label
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$13), null, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(sub.label), 1)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024);
                        }), 128))
                      ], 64)) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
            });
            _push2(`<!--]-->`);
          } else {
            return [
              (openBlock(true), createBlock(Fragment, null, renderList(__props.breadcrumbs, (item) => {
                return openBlock(), createBlock(unref(_sfc_main$14), {
                  key: item.label
                }, {
                  default: withCtx(() => [
                    createVNode(unref(_sfc_main$16), { class: "hidden md:block" }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$15), {
                          href: item.url
                        }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(item.label), 1)
                          ]),
                          _: 2
                        }, 1032, ["href"])
                      ]),
                      _: 2
                    }, 1024),
                    item.subs ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                      createVNode(unref(_sfc_main$12), { class: "hidden md:block" }),
                      (openBlock(true), createBlock(Fragment, null, renderList(item.subs, (sub) => {
                        return openBlock(), createBlock(unref(_sfc_main$16), {
                          key: sub.label
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$13), null, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(sub.label), 1)
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024);
                      }), 128))
                    ], 64)) : createCommentVNode("", true)
                  ]),
                  _: 2
                }, 1024);
              }), 128))
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$11 = _sfc_main$11.setup;
_sfc_main$11.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/layouts/breadcrumb.vue");
  return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
};
const _sfc_main$10 = {
  __name: "app",
  __ssrInlineRender: true,
  props: {
    breadcrumbs: {
      type: Array,
      default: () => []
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$1s), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$18, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$1A), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<header class="flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-[[data-collapsible=icon]]/sidebar-wrapper:h-12"${_scopeId2}><div class="flex items-center gap-2 px-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1o), { class: "-ml-1" }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1q), {
                    orientation: "vertical",
                    class: "mr-2 h-4"
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$11, { breadcrumbs: __props.breadcrumbs }, null, _parent3, _scopeId2));
                  _push3(`</div></header><div class="mx-6"${_scopeId2}>`);
                  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                  _push3(`</div>`);
                } else {
                  return [
                    createVNode("header", { class: "flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-[[data-collapsible=icon]]/sidebar-wrapper:h-12" }, [
                      createVNode("div", { class: "flex items-center gap-2 px-4" }, [
                        createVNode(unref(_sfc_main$1o), { class: "-ml-1" }),
                        createVNode(unref(_sfc_main$1q), {
                          orientation: "vertical",
                          class: "mr-2 h-4"
                        }),
                        createVNode(_sfc_main$11, { breadcrumbs: __props.breadcrumbs }, null, 8, ["breadcrumbs"])
                      ])
                    ]),
                    createVNode("div", { class: "mx-6" }, [
                      renderSlot(_ctx.$slots, "default")
                    ])
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$18),
              createVNode(unref(_sfc_main$1A), null, {
                default: withCtx(() => [
                  createVNode("header", { class: "flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-[[data-collapsible=icon]]/sidebar-wrapper:h-12" }, [
                    createVNode("div", { class: "flex items-center gap-2 px-4" }, [
                      createVNode(unref(_sfc_main$1o), { class: "-ml-1" }),
                      createVNode(unref(_sfc_main$1q), {
                        orientation: "vertical",
                        class: "mr-2 h-4"
                      }),
                      createVNode(_sfc_main$11, { breadcrumbs: __props.breadcrumbs }, null, 8, ["breadcrumbs"])
                    ])
                  ]),
                  createVNode("div", { class: "mx-6" }, [
                    renderSlot(_ctx.$slots, "default")
                  ])
                ]),
                _: 3
              })
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$10 = _sfc_main$10.setup;
_sfc_main$10.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/layouts/app.vue");
  return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
};
const _sfc_main$$ = {
  __name: "doughnut-chart",
  __ssrInlineRender: true,
  props: {
    chartData: {
      type: Object,
      required: true
    },
    chartOptions: {
      type: Object,
      default: () => ({
        responsive: true,
        maintainAspectRatio: false
      })
    }
  },
  setup(__props) {
    Chart.register(Title, Tooltip, Legend, ArcElement);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Doughnut), mergeProps({
        data: __props.chartData,
        options: __props.chartOptions
      }, _attrs), null, _parent));
    };
  }
};
const _sfc_setup$$ = _sfc_main$$.setup;
_sfc_main$$.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/charts/doughnut-chart.vue");
  return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
};
const _sfc_main$_ = {
  __name: "Card",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "card",
        class: unref(cn)(
          "bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$_ = _sfc_main$_.setup;
_sfc_main$_.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/card/Card.vue");
  return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
};
const _sfc_main$Z = {
  __name: "CardContent",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "card-content",
        class: unref(cn)("px-6", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$Z = _sfc_main$Z.setup;
_sfc_main$Z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/card/CardContent.vue");
  return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
};
const _sfc_main$Y = {
  __name: "CardDescription",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<p${ssrRenderAttrs(mergeProps({
        "data-slot": "card-description",
        class: unref(cn)("text-muted-foreground text-sm", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</p>`);
    };
  }
};
const _sfc_setup$Y = _sfc_main$Y.setup;
_sfc_main$Y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/card/CardDescription.vue");
  return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
};
const _sfc_main$X = {
  __name: "CardFooter",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "card-footer",
        class: unref(cn)("flex items-center px-6 [.border-t]:pt-6", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$X = _sfc_main$X.setup;
_sfc_main$X.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/card/CardFooter.vue");
  return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
};
const _sfc_main$W = {
  __name: "CardHeader",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "card-header",
        class: unref(cn)(
          "@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$W = _sfc_main$W.setup;
_sfc_main$W.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/card/CardHeader.vue");
  return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
};
const _sfc_main$V = {
  __name: "CardTitle",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<h3${ssrRenderAttrs(mergeProps({
        "data-slot": "card-title",
        class: unref(cn)("leading-none font-semibold", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</h3>`);
    };
  }
};
const _sfc_setup$V = _sfc_main$V.setup;
_sfc_main$V.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/card/CardTitle.vue");
  return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
};
const _sfc_main$U = {
  __name: "Progress",
  __ssrInlineRender: true,
  props: {
    modelValue: { type: [Number, null], required: false, default: 0 },
    max: { type: Number, required: false },
    getValueLabel: { type: Function, required: false },
    getValueText: { type: Function, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(ProgressRoot), mergeProps({ "data-slot": "progress" }, unref(delegatedProps), {
        class: unref(cn)(
          "bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(ProgressIndicator), {
              "data-slot": "progress-indicator",
              class: "bg-primary h-full w-full flex-1 transition-all",
              style: `transform: translateX(-${100 - (props.modelValue ?? 0)}%);`
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(ProgressIndicator), {
                "data-slot": "progress-indicator",
                class: "bg-primary h-full w-full flex-1 transition-all",
                style: `transform: translateX(-${100 - (props.modelValue ?? 0)}%);`
              }, null, 8, ["style"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$U = _sfc_main$U.setup;
_sfc_main$U.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/progress/Progress.vue");
  return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
};
const _sfc_main$T = {
  __name: "Table",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "table-container",
        class: "relative w-full overflow-auto"
      }, _attrs))}><table data-slot="table" class="${ssrRenderClass(unref(cn)("w-full caption-bottom text-sm", props.class))}">`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</table></div>`);
    };
  }
};
const _sfc_setup$T = _sfc_main$T.setup;
_sfc_main$T.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/table/Table.vue");
  return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
};
const _sfc_main$S = {
  __name: "TableBody",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<tbody${ssrRenderAttrs(mergeProps({
        "data-slot": "table-body",
        class: unref(cn)("[&_tr:last-child]:border-0", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</tbody>`);
    };
  }
};
const _sfc_setup$S = _sfc_main$S.setup;
_sfc_main$S.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/table/TableBody.vue");
  return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
};
const _sfc_main$R = {
  __name: "TableCell",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<td${ssrRenderAttrs(mergeProps({
        "data-slot": "table-cell",
        class: unref(cn)(
          "p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</td>`);
    };
  }
};
const _sfc_setup$R = _sfc_main$R.setup;
_sfc_main$R.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/table/TableCell.vue");
  return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
};
const _sfc_main$Q = {
  __name: "TableRow",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<tr${ssrRenderAttrs(mergeProps({
        "data-slot": "table-row",
        class: unref(cn)(
          "hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</tr>`);
    };
  }
};
const _sfc_setup$Q = _sfc_main$Q.setup;
_sfc_main$Q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/table/TableRow.vue");
  return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
};
const _sfc_main$P = {
  __name: "TableHead",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<th${ssrRenderAttrs(mergeProps({
        "data-slot": "table-head",
        class: unref(cn)(
          "text-muted-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
          props.class
        )
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</th>`);
    };
  }
};
const _sfc_setup$P = _sfc_main$P.setup;
_sfc_main$P.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/table/TableHead.vue");
  return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
};
const _sfc_main$O = {
  __name: "TableHeader",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<thead${ssrRenderAttrs(mergeProps({
        "data-slot": "table-header",
        class: unref(cn)("[&_tr]:border-b", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</thead>`);
    };
  }
};
const _sfc_setup$O = _sfc_main$O.setup;
_sfc_main$O.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/table/TableHeader.vue");
  return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
};
const _sfc_main$N = {
  __name: "Badge",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    variant: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Primitive), mergeProps({
        "data-slot": "badge",
        class: unref(cn)(unref(badgeVariants)({ variant: __props.variant }), props.class)
      }, unref(delegatedProps), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$N = _sfc_main$N.setup;
_sfc_main$N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/badge/Badge.vue");
  return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
};
const badgeVariants = cva(
  "inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden",
  {
    variants: {
      variant: {
        default: "border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90",
        secondary: "border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90",
        destructive: "border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
        outline: "text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
);
const _sfc_main$M = {
  __name: "dashboard",
  __ssrInlineRender: true,
  props: {
    projects: Array,
    openTasks: Array,
    analytics: [Array, Object]
  },
  setup(__props) {
    const breadcrumbs = [{ label: "Dashboard", url: "/dashboard" }];
    const props = __props;
    const getProgress = (project) => {
      if (project.tasks_count === 0) return 0;
      return project.completed_tasks_count / project.tasks_count * 100;
    };
    const statusChartData = computed(() => ({
      labels: Object.keys(props.analytics.taskStatusCount),
      datasets: [
        {
          backgroundColor: ["#F97316", "#3B82F6", "#22C55E"],
          data: Object.values(props.analytics.taskStatusCount)
        }
      ]
    }));
    const chartOptions = {
      responsive: true,
      maintainAspecRation: false,
      plugins: {
        legend: {
          position: "bottom"
        }
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Dashboard" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, { breadcrumbs }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex justify-between items-center mb-6"${_scopeId}><h2 class="font-semibold text-xl"${_scopeId}>Dashboard</h2></div><div class="pb-12"${_scopeId}><div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`My Completion Rate`);
                            } else {
                              return [
                                createTextVNode("My Completion Rate")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("My Completion Rate")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<p class="text-4xl font-bold berai-font-mono"${_scopeId3}>${ssrInterpolate(__props.analytics.completionRate)}%</p>`);
                      } else {
                        return [
                          createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.completionRate) + "%", 1)
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("My Completion Rate")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), null, {
                      default: withCtx(() => [
                        createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.completionRate) + "%", 1)
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Active Projects`);
                            } else {
                              return [
                                createTextVNode("Active Projects")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Active Projects")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<p class="text-4xl font-bold berai-font-mono"${_scopeId3}>${ssrInterpolate(__props.analytics.totalProjects)}</p>`);
                      } else {
                        return [
                          createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.totalProjects), 1)
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Active Projects")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), null, {
                      default: withCtx(() => [
                        createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.totalProjects), 1)
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Total Assigned Tasks`);
                            } else {
                              return [
                                createTextVNode("Total Assigned Tasks")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Total Assigned Tasks")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<p class="text-4xl font-bold berai-font-mono"${_scopeId3}>${ssrInterpolate(__props.analytics.totalUserTasks)}</p>`);
                      } else {
                        return [
                          createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.totalUserTasks), 1)
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Total Assigned Tasks")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), null, {
                      default: withCtx(() => [
                        createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.totalUserTasks), 1)
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="grid grid-cols-1 lg:grid-cols-3 gap-6"${_scopeId}><div class="lg:col-span-2 space-y-6"${_scopeId}>`);
            if (__props.projects.length > 0) {
              _push2(`<div class="grid grid-cols-1 md:grid-cols-2 gap-6"${_scopeId}><!--[-->`);
              ssrRenderList(__props.projects, (project) => {
                _push2(ssrRenderComponent(unref(_sfc_main$_), {
                  key: project.id,
                  class: "flex flex-col"
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(`${ssrInterpolate(project.name)}`);
                                } else {
                                  return [
                                    createTextVNode(toDisplayString(project.name), 1)
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                            _push4(ssrRenderComponent(unref(_sfc_main$Y), { class: "line-clamp-2 h-[40px]" }, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(`${ssrInterpolate(project.description || "No description provided.")}`);
                                } else {
                                  return [
                                    createTextVNode(toDisplayString(project.description || "No description provided."), 1)
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                          } else {
                            return [
                              createVNode(unref(_sfc_main$V), null, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(project.name), 1)
                                ]),
                                _: 2
                              }, 1024),
                              createVNode(unref(_sfc_main$Y), { class: "line-clamp-2 h-[40px]" }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(project.description || "No description provided."), 1)
                                ]),
                                _: 2
                              }, 1024)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent3, _scopeId2));
                      _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "flex-grow" }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(`<div class="flex justify-between items-center mb-2"${_scopeId3}><span class="text-sm text-muted-foreground"${_scopeId3}>Progress</span><span class="text-sm font-medium"${_scopeId3}>${ssrInterpolate(project.completed_tasks_count)} / ${ssrInterpolate(project.tasks_count)} tasks </span></div>`);
                            _push4(ssrRenderComponent(unref(_sfc_main$U), {
                              "model-value": getProgress(project)
                            }, null, _parent4, _scopeId3));
                          } else {
                            return [
                              createVNode("div", { class: "flex justify-between items-center mb-2" }, [
                                createVNode("span", { class: "text-sm text-muted-foreground" }, "Progress"),
                                createVNode("span", { class: "text-sm font-medium" }, toDisplayString(project.completed_tasks_count) + " / " + toDisplayString(project.tasks_count) + " tasks ", 1)
                              ]),
                              createVNode(unref(_sfc_main$U), {
                                "model-value": getProgress(project)
                              }, null, 8, ["model-value"])
                            ];
                          }
                        }),
                        _: 2
                      }, _parent3, _scopeId2));
                      _push3(ssrRenderComponent(unref(_sfc_main$X), null, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(ssrRenderComponent(unref(_sfc_main$1p), {
                              "as-child": "",
                              variant: "secondary",
                              class: "w-full"
                            }, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(ssrRenderComponent(_sfc_main$1n, {
                                    href: `/project/${project.id}`
                                  }, {
                                    default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                      if (_push6) {
                                        _push6(`View Project`);
                                      } else {
                                        return [
                                          createTextVNode("View Project")
                                        ];
                                      }
                                    }),
                                    _: 2
                                  }, _parent5, _scopeId4));
                                } else {
                                  return [
                                    createVNode(_sfc_main$1n, {
                                      href: `/project/${project.id}`
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode("View Project")
                                      ]),
                                      _: 2
                                    }, 1032, ["href"])
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                          } else {
                            return [
                              createVNode(unref(_sfc_main$1p), {
                                "as-child": "",
                                variant: "secondary",
                                class: "w-full"
                              }, {
                                default: withCtx(() => [
                                  createVNode(_sfc_main$1n, {
                                    href: `/project/${project.id}`
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode("View Project")
                                    ]),
                                    _: 2
                                  }, 1032, ["href"])
                                ]),
                                _: 2
                              }, 1024)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent3, _scopeId2));
                    } else {
                      return [
                        createVNode(unref(_sfc_main$W), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$V), null, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(project.name), 1)
                              ]),
                              _: 2
                            }, 1024),
                            createVNode(unref(_sfc_main$Y), { class: "line-clamp-2 h-[40px]" }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(project.description || "No description provided."), 1)
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$Z), { class: "flex-grow" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "flex justify-between items-center mb-2" }, [
                              createVNode("span", { class: "text-sm text-muted-foreground" }, "Progress"),
                              createVNode("span", { class: "text-sm font-medium" }, toDisplayString(project.completed_tasks_count) + " / " + toDisplayString(project.tasks_count) + " tasks ", 1)
                            ]),
                            createVNode(unref(_sfc_main$U), {
                              "model-value": getProgress(project)
                            }, null, 8, ["model-value"])
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$X), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1p), {
                              "as-child": "",
                              variant: "secondary",
                              class: "w-full"
                            }, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1n, {
                                  href: `/project/${project.id}`
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode("View Project")
                                  ]),
                                  _: 2
                                }, 1032, ["href"])
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024)
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(unref(_sfc_main$_), { class: "text-center" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`Welcome to Berai!`);
                              } else {
                                return [
                                  createTextVNode("Welcome to Berai!")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(unref(_sfc_main$Y), null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(` Get started by creating your first project. `);
                              } else {
                                return [
                                  createTextVNode(" Get started by creating your first project. ")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$V), null, {
                              default: withCtx(() => [
                                createTextVNode("Welcome to Berai!")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$Y), null, {
                              default: withCtx(() => [
                                createTextVNode(" Get started by creating your first project. ")
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(unref(_sfc_main$Z), null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$1p), {
                            size: "lg",
                            "as-child": "",
                            class: "mt-1"
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1n, { href: "/project/create" }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(` Create Your First Project `);
                                    } else {
                                      return [
                                        createTextVNode(" Create Your First Project ")
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1n, { href: "/project/create" }, {
                                    default: withCtx(() => [
                                      createTextVNode(" Create Your First Project ")
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$1p), {
                              size: "lg",
                              "as-child": "",
                              class: "mt-1"
                            }, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1n, { href: "/project/create" }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Create Your First Project ")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(unref(_sfc_main$W), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Welcome to Berai!")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Y), null, {
                            default: withCtx(() => [
                              createTextVNode(" Get started by creating your first project. ")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$Z), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1p), {
                            size: "lg",
                            "as-child": "",
                            class: "mt-1"
                          }, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1n, { href: "/project/create" }, {
                                default: withCtx(() => [
                                  createTextVNode(" Create Your First Project ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            }
            _push2(`</div><div class="lg:col-span-1 space-y-6"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Tasks by Status`);
                            } else {
                              return [
                                createTextVNode("Tasks by Status")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$Y), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`A breakdown of all tasks in your projects.`);
                            } else {
                              return [
                                createTextVNode("A breakdown of all tasks in your projects.")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Tasks by Status")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Y), null, {
                            default: withCtx(() => [
                              createTextVNode("A breakdown of all tasks in your projects.")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "h-72 flex justify-center py-4" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        if (__props.analytics.totalUserTasks > 0) {
                          _push4(ssrRenderComponent(_sfc_main$$, {
                            "chart-data": statusChartData.value,
                            "chart-options": chartOptions
                          }, null, _parent4, _scopeId3));
                        } else {
                          _push4(`<div class="flex items-center justify-center h-full text-muted-foreground"${_scopeId3}> No task data to display. </div>`);
                        }
                      } else {
                        return [
                          __props.analytics.totalUserTasks > 0 ? (openBlock(), createBlock(_sfc_main$$, {
                            key: 0,
                            "chart-data": statusChartData.value,
                            "chart-options": chartOptions
                          }, null, 8, ["chart-data"])) : (openBlock(), createBlock("div", {
                            key: 1,
                            class: "flex items-center justify-center h-full text-muted-foreground"
                          }, " No task data to display. "))
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Tasks by Status")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Y), null, {
                          default: withCtx(() => [
                            createTextVNode("A breakdown of all tasks in your projects.")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), { class: "h-72 flex justify-center py-4" }, {
                      default: withCtx(() => [
                        __props.analytics.totalUserTasks > 0 ? (openBlock(), createBlock(_sfc_main$$, {
                          key: 0,
                          "chart-data": statusChartData.value,
                          "chart-options": chartOptions
                        }, null, 8, ["chart-data"])) : (openBlock(), createBlock("div", {
                          key: 1,
                          class: "flex items-center justify-center h-full text-muted-foreground"
                        }, " No task data to display. "))
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`My Open Tasks`);
                            } else {
                              return [
                                createTextVNode("My Open Tasks")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$Y), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Your most urgent tasks across all projects.`);
                            } else {
                              return [
                                createTextVNode("Your most urgent tasks across all projects.")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("My Open Tasks")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Y), null, {
                            default: withCtx(() => [
                              createTextVNode("Your most urgent tasks across all projects.")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$T), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$S), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    if (__props.openTasks.length > 0) {
                                      _push6(`<!--[-->`);
                                      ssrRenderList(__props.openTasks, (task) => {
                                        _push6(ssrRenderComponent(_sfc_main$1n, {
                                          key: task.id,
                                          href: `/project/${task.project.id}`,
                                          as: "tr",
                                          class: "hover:bg-muted/50 cursor-pointer"
                                        }, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(ssrRenderComponent(unref(_sfc_main$R), null, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(`<div class="font-medium"${_scopeId7}>${ssrInterpolate(task.title)}</div><div class="text-xs text-muted-foreground"${_scopeId7}>${ssrInterpolate(task.project.name)}</div>`);
                                                  } else {
                                                    return [
                                                      createVNode("div", { class: "font-medium" }, toDisplayString(task.title), 1),
                                                      createVNode("div", { class: "text-xs text-muted-foreground" }, toDisplayString(task.project.name), 1)
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                              _push7(ssrRenderComponent(unref(_sfc_main$R), { class: "text-right" }, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(ssrRenderComponent(unref(_sfc_main$N), { variant: "destructive" }, {
                                                      default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                        if (_push9) {
                                                          _push9(`${ssrInterpolate(task.due_date || "No due date")}`);
                                                        } else {
                                                          return [
                                                            createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                                          ];
                                                        }
                                                      }),
                                                      _: 2
                                                    }, _parent8, _scopeId7));
                                                  } else {
                                                    return [
                                                      createVNode(unref(_sfc_main$N), { variant: "destructive" }, {
                                                        default: withCtx(() => [
                                                          createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                                        ]),
                                                        _: 2
                                                      }, 1024)
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                            } else {
                                              return [
                                                createVNode(unref(_sfc_main$R), null, {
                                                  default: withCtx(() => [
                                                    createVNode("div", { class: "font-medium" }, toDisplayString(task.title), 1),
                                                    createVNode("div", { class: "text-xs text-muted-foreground" }, toDisplayString(task.project.name), 1)
                                                  ]),
                                                  _: 2
                                                }, 1024),
                                                createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$N), { variant: "destructive" }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                      });
                                      _push6(`<!--]-->`);
                                    } else {
                                      _push6(ssrRenderComponent(unref(_sfc_main$Q), null, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(_sfc_main$R), { class: "text-center py-12" }, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(` You have no open tasks. Great job! `);
                                                } else {
                                                  return [
                                                    createTextVNode(" You have no open tasks. Great job! ")
                                                  ];
                                                }
                                              }),
                                              _: 1
                                            }, _parent7, _scopeId6));
                                          } else {
                                            return [
                                              createVNode(unref(_sfc_main$R), { class: "text-center py-12" }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" You have no open tasks. Great job! ")
                                                ]),
                                                _: 1
                                              })
                                            ];
                                          }
                                        }),
                                        _: 1
                                      }, _parent6, _scopeId5));
                                    }
                                  } else {
                                    return [
                                      __props.openTasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.openTasks, (task) => {
                                        return openBlock(), createBlock(_sfc_main$1n, {
                                          key: task.id,
                                          href: `/project/${task.project.id}`,
                                          as: "tr",
                                          class: "hover:bg-muted/50 cursor-pointer"
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$R), null, {
                                              default: withCtx(() => [
                                                createVNode("div", { class: "font-medium" }, toDisplayString(task.title), 1),
                                                createVNode("div", { class: "text-xs text-muted-foreground" }, toDisplayString(task.project.name), 1)
                                              ]),
                                              _: 2
                                            }, 1024),
                                            createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$N), { variant: "destructive" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1032, ["href"]);
                                      }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$R), { class: "text-center py-12" }, {
                                            default: withCtx(() => [
                                              createTextVNode(" You have no open tasks. Great job! ")
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }))
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$S), null, {
                                  default: withCtx(() => [
                                    __props.openTasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.openTasks, (task) => {
                                      return openBlock(), createBlock(_sfc_main$1n, {
                                        key: task.id,
                                        href: `/project/${task.project.id}`,
                                        as: "tr",
                                        class: "hover:bg-muted/50 cursor-pointer"
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$R), null, {
                                            default: withCtx(() => [
                                              createVNode("div", { class: "font-medium" }, toDisplayString(task.title), 1),
                                              createVNode("div", { class: "text-xs text-muted-foreground" }, toDisplayString(task.project.name), 1)
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$N), { variant: "destructive" }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1032, ["href"]);
                                    }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$R), { class: "text-center py-12" }, {
                                          default: withCtx(() => [
                                            createTextVNode(" You have no open tasks. Great job! ")
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    }))
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$T), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$S), null, {
                                default: withCtx(() => [
                                  __props.openTasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.openTasks, (task) => {
                                    return openBlock(), createBlock(_sfc_main$1n, {
                                      key: task.id,
                                      href: `/project/${task.project.id}`,
                                      as: "tr",
                                      class: "hover:bg-muted/50 cursor-pointer"
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$R), null, {
                                          default: withCtx(() => [
                                            createVNode("div", { class: "font-medium" }, toDisplayString(task.title), 1),
                                            createVNode("div", { class: "text-xs text-muted-foreground" }, toDisplayString(task.project.name), 1)
                                          ]),
                                          _: 2
                                        }, 1024),
                                        createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$N), { variant: "destructive" }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1032, ["href"]);
                                  }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$R), { class: "text-center py-12" }, {
                                        default: withCtx(() => [
                                          createTextVNode(" You have no open tasks. Great job! ")
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  }))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  if (__props.openTasks.length > 0) {
                    _push3(ssrRenderComponent(unref(_sfc_main$X), null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$1p), {
                            "as-child": "",
                            variant: "outline",
                            class: "w-full"
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1n, { href: "/task" }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(`View All My Tasks`);
                                    } else {
                                      return [
                                        createTextVNode("View All My Tasks")
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1n, { href: "/task" }, {
                                    default: withCtx(() => [
                                      createTextVNode("View All My Tasks")
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$1p), {
                              "as-child": "",
                              variant: "outline",
                              class: "w-full"
                            }, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1n, { href: "/task" }, {
                                  default: withCtx(() => [
                                    createTextVNode("View All My Tasks")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    _push3(`<!---->`);
                  }
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("My Open Tasks")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Y), null, {
                          default: withCtx(() => [
                            createTextVNode("Your most urgent tasks across all projects.")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$T), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$S), null, {
                              default: withCtx(() => [
                                __props.openTasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.openTasks, (task) => {
                                  return openBlock(), createBlock(_sfc_main$1n, {
                                    key: task.id,
                                    href: `/project/${task.project.id}`,
                                    as: "tr",
                                    class: "hover:bg-muted/50 cursor-pointer"
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$R), null, {
                                        default: withCtx(() => [
                                          createVNode("div", { class: "font-medium" }, toDisplayString(task.title), 1),
                                          createVNode("div", { class: "text-xs text-muted-foreground" }, toDisplayString(task.project.name), 1)
                                        ]),
                                        _: 2
                                      }, 1024),
                                      createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$N), { variant: "destructive" }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1032, ["href"]);
                                }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$R), { class: "text-center py-12" }, {
                                      default: withCtx(() => [
                                        createTextVNode(" You have no open tasks. Great job! ")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    __props.openTasks.length > 0 ? (openBlock(), createBlock(unref(_sfc_main$X), { key: 0 }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$1p), {
                          "as-child": "",
                          variant: "outline",
                          class: "w-full"
                        }, {
                          default: withCtx(() => [
                            createVNode(_sfc_main$1n, { href: "/task" }, {
                              default: withCtx(() => [
                                createTextVNode("View All My Tasks")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })) : createCommentVNode("", true)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div></div>`);
          } else {
            return [
              createVNode("div", { class: "flex justify-between items-center mb-6" }, [
                createVNode("h2", { class: "font-semibold text-xl" }, "Dashboard")
              ]),
              createVNode("div", { class: "pb-12" }, [
                createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-6 mb-6" }, [
                  createVNode(unref(_sfc_main$_), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$W), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("My Completion Rate")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$Z), null, {
                        default: withCtx(() => [
                          createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.completionRate) + "%", 1)
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$_), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$W), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Active Projects")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$Z), null, {
                        default: withCtx(() => [
                          createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.totalProjects), 1)
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$_), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$W), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Total Assigned Tasks")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$Z), null, {
                        default: withCtx(() => [
                          createVNode("p", { class: "text-4xl font-bold berai-font-mono" }, toDisplayString(__props.analytics.totalUserTasks), 1)
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                createVNode("div", { class: "grid grid-cols-1 lg:grid-cols-3 gap-6" }, [
                  createVNode("div", { class: "lg:col-span-2 space-y-6" }, [
                    __props.projects.length > 0 ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "grid grid-cols-1 md:grid-cols-2 gap-6"
                    }, [
                      (openBlock(true), createBlock(Fragment, null, renderList(__props.projects, (project) => {
                        return openBlock(), createBlock(unref(_sfc_main$_), {
                          key: project.id,
                          class: "flex flex-col"
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$W), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$V), null, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(project.name), 1)
                                  ]),
                                  _: 2
                                }, 1024),
                                createVNode(unref(_sfc_main$Y), { class: "line-clamp-2 h-[40px]" }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(project.description || "No description provided."), 1)
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1024),
                            createVNode(unref(_sfc_main$Z), { class: "flex-grow" }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex justify-between items-center mb-2" }, [
                                  createVNode("span", { class: "text-sm text-muted-foreground" }, "Progress"),
                                  createVNode("span", { class: "text-sm font-medium" }, toDisplayString(project.completed_tasks_count) + " / " + toDisplayString(project.tasks_count) + " tasks ", 1)
                                ]),
                                createVNode(unref(_sfc_main$U), {
                                  "model-value": getProgress(project)
                                }, null, 8, ["model-value"])
                              ]),
                              _: 2
                            }, 1024),
                            createVNode(unref(_sfc_main$X), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1p), {
                                  "as-child": "",
                                  variant: "secondary",
                                  class: "w-full"
                                }, {
                                  default: withCtx(() => [
                                    createVNode(_sfc_main$1n, {
                                      href: `/project/${project.id}`
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode("View Project")
                                      ]),
                                      _: 2
                                    }, 1032, ["href"])
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024);
                      }), 128))
                    ])) : (openBlock(), createBlock("div", { key: 1 }, [
                      createVNode(unref(_sfc_main$_), { class: "text-center" }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$W), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$V), null, {
                                default: withCtx(() => [
                                  createTextVNode("Welcome to Berai!")
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$Y), null, {
                                default: withCtx(() => [
                                  createTextVNode(" Get started by creating your first project. ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Z), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), {
                                size: "lg",
                                "as-child": "",
                                class: "mt-1"
                              }, {
                                default: withCtx(() => [
                                  createVNode(_sfc_main$1n, { href: "/project/create" }, {
                                    default: withCtx(() => [
                                      createTextVNode(" Create Your First Project ")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]))
                  ]),
                  createVNode("div", { class: "lg:col-span-1 space-y-6" }, [
                    createVNode(unref(_sfc_main$_), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$W), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$V), null, {
                              default: withCtx(() => [
                                createTextVNode("Tasks by Status")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$Y), null, {
                              default: withCtx(() => [
                                createTextVNode("A breakdown of all tasks in your projects.")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Z), { class: "h-72 flex justify-center py-4" }, {
                          default: withCtx(() => [
                            __props.analytics.totalUserTasks > 0 ? (openBlock(), createBlock(_sfc_main$$, {
                              key: 0,
                              "chart-data": statusChartData.value,
                              "chart-options": chartOptions
                            }, null, 8, ["chart-data"])) : (openBlock(), createBlock("div", {
                              key: 1,
                              class: "flex items-center justify-center h-full text-muted-foreground"
                            }, " No task data to display. "))
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$_), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$W), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$V), null, {
                              default: withCtx(() => [
                                createTextVNode("My Open Tasks")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$Y), null, {
                              default: withCtx(() => [
                                createTextVNode("Your most urgent tasks across all projects.")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Z), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$T), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$S), null, {
                                  default: withCtx(() => [
                                    __props.openTasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.openTasks, (task) => {
                                      return openBlock(), createBlock(_sfc_main$1n, {
                                        key: task.id,
                                        href: `/project/${task.project.id}`,
                                        as: "tr",
                                        class: "hover:bg-muted/50 cursor-pointer"
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$R), null, {
                                            default: withCtx(() => [
                                              createVNode("div", { class: "font-medium" }, toDisplayString(task.title), 1),
                                              createVNode("div", { class: "text-xs text-muted-foreground" }, toDisplayString(task.project.name), 1)
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$N), { variant: "destructive" }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(task.due_date || "No due date"), 1)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1032, ["href"]);
                                    }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$R), { class: "text-center py-12" }, {
                                          default: withCtx(() => [
                                            createTextVNode(" You have no open tasks. Great job! ")
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    }))
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        __props.openTasks.length > 0 ? (openBlock(), createBlock(unref(_sfc_main$X), { key: 0 }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1p), {
                              "as-child": "",
                              variant: "outline",
                              class: "w-full"
                            }, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1n, { href: "/task" }, {
                                  default: withCtx(() => [
                                    createTextVNode("View All My Tasks")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })) : createCommentVNode("", true)
                      ]),
                      _: 1
                    })
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$M = _sfc_main$M.setup;
_sfc_main$M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/app/dashboard.vue");
  return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
};
const __vite_glob_0_0 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$M
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$L = {
  __name: "Label",
  __ssrInlineRender: true,
  props: {
    for: { type: String, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Label), mergeProps({ "data-slot": "label" }, unref(delegatedProps), {
        class: unref(cn)(
          "flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$L = _sfc_main$L.setup;
_sfc_main$L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/label/Label.vue");
  return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
};
const _sfc_main$K = {
  __name: "edit",
  __ssrInlineRender: true,
  setup(__props) {
    const user = usePage().props.auth.user;
    const form = useForm({
      _method: "POST",
      name: user.name,
      email: user.email,
      avatar: null
    });
    const avatarPreview = ref(user.avatar ? `/storage/${user.avatar}` : null);
    function handleAvatarChange(event) {
      const file = event.target.files[0];
      if (file) {
        form.avatar = file;
        avatarPreview.value = URL.createObjectURL(file);
      }
    }
    function submit() {
      form.post("/profile", {
        onSuccess: () => {
          toast.success("Profile updated successfully.");
        }
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "My Profile" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(Toaster), {
              position: "top-right",
              richColors: ""
            }, null, _parent2, _scopeId));
            _push2(`<h2 class="font-semibold text-xl"${_scopeId}>My Profile</h2><div class="max-w-2xl mx-auto py-12"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Profile Information`);
                            } else {
                              return [
                                createTextVNode("Profile Information")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$Y), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Update your account&#39;s profile information.`);
                            } else {
                              return [
                                createTextVNode("Update your account's profile information.")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Profile Information")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Y), null, {
                            default: withCtx(() => [
                              createTextVNode("Update your account's profile information.")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`<form${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "space-y-6" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<div class="space-y-2"${_scopeId3}>`);
                        _push4(ssrRenderComponent(unref(_sfc_main$L), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Avatar`);
                            } else {
                              return [
                                createTextVNode("Avatar")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(`<div class="flex items-center gap-4"${_scopeId3}>`);
                        if (avatarPreview.value) {
                          _push4(`<img${ssrRenderAttr("src", avatarPreview.value)} class="w-20 h-20 rounded-full object-cover"${_scopeId3}>`);
                        } else {
                          _push4(`<div class="w-20 h-20 rounded-full bg-muted flex items-center justify-center"${_scopeId3}> ... </div>`);
                        }
                        _push4(`<input type="file" class="file-input file-input-bordered"${_scopeId3}></div>`);
                        if (unref(form).errors.avatar) {
                          _push4(`<p class="text-sm text-destructive"${_scopeId3}>${ssrInterpolate(unref(form).errors.avatar)}</p>`);
                        } else {
                          _push4(`<!---->`);
                        }
                        _push4(`</div><div class="space-y-2"${_scopeId3}>`);
                        _push4(ssrRenderComponent(unref(_sfc_main$L), { for: "name" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Name`);
                            } else {
                              return [
                                createTextVNode("Name")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$1B), {
                          id: "name",
                          modelValue: unref(form).name,
                          "onUpdate:modelValue": ($event) => unref(form).name = $event
                        }, null, _parent4, _scopeId3));
                        _push4(`</div><div class="space-y-2"${_scopeId3}>`);
                        _push4(ssrRenderComponent(unref(_sfc_main$L), { for: "email" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Email`);
                            } else {
                              return [
                                createTextVNode("Email")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$1B), {
                          id: "email",
                          modelValue: unref(form).email,
                          "onUpdate:modelValue": ($event) => unref(form).email = $event
                        }, null, _parent4, _scopeId3));
                        _push4(`</div>`);
                      } else {
                        return [
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), null, {
                              default: withCtx(() => [
                                createTextVNode("Avatar")
                              ]),
                              _: 1
                            }),
                            createVNode("div", { class: "flex items-center gap-4" }, [
                              avatarPreview.value ? (openBlock(), createBlock("img", {
                                key: 0,
                                src: avatarPreview.value,
                                class: "w-20 h-20 rounded-full object-cover"
                              }, null, 8, ["src"])) : (openBlock(), createBlock("div", {
                                key: 1,
                                class: "w-20 h-20 rounded-full bg-muted flex items-center justify-center"
                              }, " ... ")),
                              createVNode("input", {
                                type: "file",
                                onInput: handleAvatarChange,
                                class: "file-input file-input-bordered"
                              }, null, 32)
                            ]),
                            unref(form).errors.avatar ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-sm text-destructive"
                            }, toDisplayString(unref(form).errors.avatar), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "name" }, {
                              default: withCtx(() => [
                                createTextVNode("Name")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "name",
                              modelValue: unref(form).name,
                              "onUpdate:modelValue": ($event) => unref(form).name = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "email" }, {
                              default: withCtx(() => [
                                createTextVNode("Email")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "email",
                              modelValue: unref(form).email,
                              "onUpdate:modelValue": ($event) => unref(form).email = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$X), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$1p), {
                          type: "submit",
                          disabled: unref(form).processing,
                          class: "mt-6"
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Save Changes`);
                            } else {
                              return [
                                createTextVNode("Save Changes")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$1p), {
                            type: "submit",
                            disabled: unref(form).processing,
                            class: "mt-6"
                          }, {
                            default: withCtx(() => [
                              createTextVNode("Save Changes")
                            ]),
                            _: 1
                          }, 8, ["disabled"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</form>`);
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Profile Information")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Y), null, {
                          default: withCtx(() => [
                            createTextVNode("Update your account's profile information.")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode("form", {
                      onSubmit: withModifiers(submit, ["prevent"])
                    }, [
                      createVNode(unref(_sfc_main$Z), { class: "space-y-6" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), null, {
                              default: withCtx(() => [
                                createTextVNode("Avatar")
                              ]),
                              _: 1
                            }),
                            createVNode("div", { class: "flex items-center gap-4" }, [
                              avatarPreview.value ? (openBlock(), createBlock("img", {
                                key: 0,
                                src: avatarPreview.value,
                                class: "w-20 h-20 rounded-full object-cover"
                              }, null, 8, ["src"])) : (openBlock(), createBlock("div", {
                                key: 1,
                                class: "w-20 h-20 rounded-full bg-muted flex items-center justify-center"
                              }, " ... ")),
                              createVNode("input", {
                                type: "file",
                                onInput: handleAvatarChange,
                                class: "file-input file-input-bordered"
                              }, null, 32)
                            ]),
                            unref(form).errors.avatar ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-sm text-destructive"
                            }, toDisplayString(unref(form).errors.avatar), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "name" }, {
                              default: withCtx(() => [
                                createTextVNode("Name")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "name",
                              modelValue: unref(form).name,
                              "onUpdate:modelValue": ($event) => unref(form).name = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "email" }, {
                              default: withCtx(() => [
                                createTextVNode("Email")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "email",
                              modelValue: unref(form).email,
                              "onUpdate:modelValue": ($event) => unref(form).email = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$X), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1p), {
                            type: "submit",
                            disabled: unref(form).processing,
                            class: "mt-6"
                          }, {
                            default: withCtx(() => [
                              createTextVNode("Save Changes")
                            ]),
                            _: 1
                          }, 8, ["disabled"])
                        ]),
                        _: 1
                      })
                    ], 32)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode(unref(Toaster), {
                position: "top-right",
                richColors: ""
              }),
              createVNode("h2", { class: "font-semibold text-xl" }, "My Profile"),
              createVNode("div", { class: "max-w-2xl mx-auto py-12" }, [
                createVNode(unref(_sfc_main$_), null, {
                  default: withCtx(() => [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Profile Information")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Y), null, {
                          default: withCtx(() => [
                            createTextVNode("Update your account's profile information.")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode("form", {
                      onSubmit: withModifiers(submit, ["prevent"])
                    }, [
                      createVNode(unref(_sfc_main$Z), { class: "space-y-6" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), null, {
                              default: withCtx(() => [
                                createTextVNode("Avatar")
                              ]),
                              _: 1
                            }),
                            createVNode("div", { class: "flex items-center gap-4" }, [
                              avatarPreview.value ? (openBlock(), createBlock("img", {
                                key: 0,
                                src: avatarPreview.value,
                                class: "w-20 h-20 rounded-full object-cover"
                              }, null, 8, ["src"])) : (openBlock(), createBlock("div", {
                                key: 1,
                                class: "w-20 h-20 rounded-full bg-muted flex items-center justify-center"
                              }, " ... ")),
                              createVNode("input", {
                                type: "file",
                                onInput: handleAvatarChange,
                                class: "file-input file-input-bordered"
                              }, null, 32)
                            ]),
                            unref(form).errors.avatar ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-sm text-destructive"
                            }, toDisplayString(unref(form).errors.avatar), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "name" }, {
                              default: withCtx(() => [
                                createTextVNode("Name")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "name",
                              modelValue: unref(form).name,
                              "onUpdate:modelValue": ($event) => unref(form).name = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "email" }, {
                              default: withCtx(() => [
                                createTextVNode("Email")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "email",
                              modelValue: unref(form).email,
                              "onUpdate:modelValue": ($event) => unref(form).email = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$X), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1p), {
                            type: "submit",
                            disabled: unref(form).processing,
                            class: "mt-6"
                          }, {
                            default: withCtx(() => [
                              createTextVNode("Save Changes")
                            ]),
                            _: 1
                          }, 8, ["disabled"])
                        ]),
                        _: 1
                      })
                    ], 32)
                  ]),
                  _: 1
                })
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$K = _sfc_main$K.setup;
_sfc_main$K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/app/profile/edit.vue");
  return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
};
const __vite_glob_0_1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$K
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$J = {
  __name: "Textarea",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false },
    defaultValue: { type: [String, Number], required: false },
    modelValue: { type: [String, Number], required: false }
  },
  emits: ["update:modelValue"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const modelValue = useVModel(props, "modelValue", emits, {
      passive: true,
      defaultValue: props.defaultValue
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<textarea${ssrRenderAttrs(mergeProps({
        "data-slot": "textarea",
        class: unref(cn)(
          "border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          props.class
        )
      }, _attrs), "textarea")}>${ssrInterpolate(unref(modelValue))}</textarea>`);
    };
  }
};
const _sfc_setup$J = _sfc_main$J.setup;
_sfc_main$J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/textarea/Textarea.vue");
  return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
};
const _sfc_main$I = {
  __name: "form",
  __ssrInlineRender: true,
  setup(__props) {
    const form = useForm({
      name: "",
      description: ""
    });
    const submit = () => {
      form.post("/project/create");
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Create Project" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="py-12"${_scopeId}><div class="max-w-7xl mx-auto sm:px-6 lg:px-8"${_scopeId}><form${_scopeId}>`);
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Project Details`);
                            } else {
                              return [
                                createTextVNode("Project Details")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$Y), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(` Give your new project a name and an optional description to get started. `);
                            } else {
                              return [
                                createTextVNode(" Give your new project a name and an optional description to get started. ")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Project Details")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Y), null, {
                            default: withCtx(() => [
                              createTextVNode(" Give your new project a name and an optional description to get started. ")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "space-y-6" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<div class="space-y-2"${_scopeId3}>`);
                        _push4(ssrRenderComponent(unref(_sfc_main$L), { for: "name" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Project Name`);
                            } else {
                              return [
                                createTextVNode("Project Name")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$1B), {
                          id: "name",
                          modelValue: unref(form).name,
                          "onUpdate:modelValue": ($event) => unref(form).name = $event,
                          type: "text",
                          placeholder: "e.g., Marketing Campaign",
                          required: ""
                        }, null, _parent4, _scopeId3));
                        if (unref(form).errors.name) {
                          _push4(`<p class="text-sm text-destructive"${_scopeId3}>${ssrInterpolate(unref(form).errors.name)}</p>`);
                        } else {
                          _push4(`<!---->`);
                        }
                        _push4(`</div><div class="space-y-2"${_scopeId3}>`);
                        _push4(ssrRenderComponent(unref(_sfc_main$L), { for: "description" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Description (Optional)`);
                            } else {
                              return [
                                createTextVNode("Description (Optional)")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$J), {
                          id: "description",
                          modelValue: unref(form).description,
                          "onUpdate:modelValue": ($event) => unref(form).description = $event,
                          placeholder: "Describe the main goal of this project."
                        }, null, _parent4, _scopeId3));
                        if (unref(form).errors.description) {
                          _push4(`<p class="text-sm text-destructive"${_scopeId3}>${ssrInterpolate(unref(form).errors.description)}</p>`);
                        } else {
                          _push4(`<!---->`);
                        }
                        _push4(`</div>`);
                      } else {
                        return [
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "name" }, {
                              default: withCtx(() => [
                                createTextVNode("Project Name")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "name",
                              modelValue: unref(form).name,
                              "onUpdate:modelValue": ($event) => unref(form).name = $event,
                              type: "text",
                              placeholder: "e.g., Marketing Campaign",
                              required: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                            unref(form).errors.name ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-sm text-destructive"
                            }, toDisplayString(unref(form).errors.name), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "space-y-2" }, [
                            createVNode(unref(_sfc_main$L), { for: "description" }, {
                              default: withCtx(() => [
                                createTextVNode("Description (Optional)")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$J), {
                              id: "description",
                              modelValue: unref(form).description,
                              "onUpdate:modelValue": ($event) => unref(form).description = $event,
                              placeholder: "Describe the main goal of this project."
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                            unref(form).errors.description ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-sm text-destructive"
                            }, toDisplayString(unref(form).errors.description), 1)) : createCommentVNode("", true)
                          ])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$X), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$1p), {
                          type: "submit",
                          disabled: unref(form).processing
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(` Create Project `);
                            } else {
                              return [
                                createTextVNode(" Create Project ")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$1p), {
                            type: "submit",
                            disabled: unref(form).processing
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Create Project ")
                            ]),
                            _: 1
                          }, 8, ["disabled"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Project Details")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Y), null, {
                          default: withCtx(() => [
                            createTextVNode(" Give your new project a name and an optional description to get started. ")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), { class: "space-y-6" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "name" }, {
                            default: withCtx(() => [
                              createTextVNode("Project Name")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "name",
                            modelValue: unref(form).name,
                            "onUpdate:modelValue": ($event) => unref(form).name = $event,
                            type: "text",
                            placeholder: "e.g., Marketing Campaign",
                            required: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                          unref(form).errors.name ? (openBlock(), createBlock("p", {
                            key: 0,
                            class: "text-sm text-destructive"
                          }, toDisplayString(unref(form).errors.name), 1)) : createCommentVNode("", true)
                        ]),
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "description" }, {
                            default: withCtx(() => [
                              createTextVNode("Description (Optional)")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$J), {
                            id: "description",
                            modelValue: unref(form).description,
                            "onUpdate:modelValue": ($event) => unref(form).description = $event,
                            placeholder: "Describe the main goal of this project."
                          }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                          unref(form).errors.description ? (openBlock(), createBlock("p", {
                            key: 0,
                            class: "text-sm text-destructive"
                          }, toDisplayString(unref(form).errors.description), 1)) : createCommentVNode("", true)
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$X), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$1p), {
                          type: "submit",
                          disabled: unref(form).processing
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Create Project ")
                          ]),
                          _: 1
                        }, 8, ["disabled"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</form></div></div>`);
          } else {
            return [
              createVNode("div", { class: "py-12" }, [
                createVNode("div", { class: "max-w-7xl mx-auto sm:px-6 lg:px-8" }, [
                  createVNode("form", {
                    onSubmit: withModifiers(submit, ["prevent"])
                  }, [
                    createVNode(unref(_sfc_main$_), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$W), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$V), null, {
                              default: withCtx(() => [
                                createTextVNode("Project Details")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$Y), null, {
                              default: withCtx(() => [
                                createTextVNode(" Give your new project a name and an optional description to get started. ")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Z), { class: "space-y-6" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "space-y-2" }, [
                              createVNode(unref(_sfc_main$L), { for: "name" }, {
                                default: withCtx(() => [
                                  createTextVNode("Project Name")
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$1B), {
                                id: "name",
                                modelValue: unref(form).name,
                                "onUpdate:modelValue": ($event) => unref(form).name = $event,
                                type: "text",
                                placeholder: "e.g., Marketing Campaign",
                                required: ""
                              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                              unref(form).errors.name ? (openBlock(), createBlock("p", {
                                key: 0,
                                class: "text-sm text-destructive"
                              }, toDisplayString(unref(form).errors.name), 1)) : createCommentVNode("", true)
                            ]),
                            createVNode("div", { class: "space-y-2" }, [
                              createVNode(unref(_sfc_main$L), { for: "description" }, {
                                default: withCtx(() => [
                                  createTextVNode("Description (Optional)")
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$J), {
                                id: "description",
                                modelValue: unref(form).description,
                                "onUpdate:modelValue": ($event) => unref(form).description = $event,
                                placeholder: "Describe the main goal of this project."
                              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                              unref(form).errors.description ? (openBlock(), createBlock("p", {
                                key: 0,
                                class: "text-sm text-destructive"
                              }, toDisplayString(unref(form).errors.description), 1)) : createCommentVNode("", true)
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$X), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1p), {
                              type: "submit",
                              disabled: unref(form).processing
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Create Project ")
                              ]),
                              _: 1
                            }, 8, ["disabled"])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ], 32)
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$I = _sfc_main$I.setup;
_sfc_main$I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/app/project/form.vue");
  return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
};
const __vite_glob_0_2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$I
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$H = {
  __name: "index",
  __ssrInlineRender: true,
  props: {
    projects: Array,
    filters: Object
  },
  setup(__props) {
    const breadcrumbs = [{ label: "Project", url: "/project" }];
    const props = __props;
    const filters = reactive({
      search: props.filters.search || ""
    });
    const getProgress = (project) => {
      if (project.tasks_count === 0) return 0;
      return project.completed_tasks_count / project.tasks_count * 100;
    };
    watch(
      filters,
      debounce((newFilters) => {
        router.get(
          "/project",
          { search: newFilters.search },
          {
            preserveState: true,
            replace: true
          }
        );
      }, 500)
    );
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Projects" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, { breadcrumbs }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex flex-col sm:flex-row justify-between items-center gap-4 mb-6"${_scopeId}><h2 class="font-semibold text-xl"${_scopeId}>Projects</h2><div class="flex space-x-2"${_scopeId}><div class="w-full sm:w-auto sm:max-w-xs"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(_sfc_main$1B), {
              modelValue: filters.search,
              "onUpdate:modelValue": ($event) => filters.search = $event,
              type: "text",
              placeholder: "Search projects..."
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
            _push2(ssrRenderComponent(unref(_sfc_main$1p), { "as-child": "" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1n, { href: "/project/create" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Create Project`);
                      } else {
                        return [
                          createTextVNode("Create Project")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1n, { href: "/project/create" }, {
                      default: withCtx(() => [
                        createTextVNode("Create Project")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div>`);
            if (__props.projects.length > 0) {
              _push2(`<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"${_scopeId}><!--[-->`);
              ssrRenderList(__props.projects, (project) => {
                _push2(ssrRenderComponent(unref(_sfc_main$_), {
                  key: project.id,
                  class: "flex flex-col"
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(`${ssrInterpolate(project.name)}`);
                                } else {
                                  return [
                                    createTextVNode(toDisplayString(project.name), 1)
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                          } else {
                            return [
                              createVNode(unref(_sfc_main$V), null, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(project.name), 1)
                                ]),
                                _: 2
                              }, 1024)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent3, _scopeId2));
                      _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "flex-grow" }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(`<div class="flex justify-between items-center mb-2"${_scopeId3}><span class="text-sm text-muted-foreground"${_scopeId3}>Progress</span><span class="text-sm font-medium"${_scopeId3}>${ssrInterpolate(project.completed_tasks_count)} / ${ssrInterpolate(project.tasks_count)} tasks</span></div>`);
                            _push4(ssrRenderComponent(unref(_sfc_main$U), {
                              "model-value": getProgress(project)
                            }, null, _parent4, _scopeId3));
                          } else {
                            return [
                              createVNode("div", { class: "flex justify-between items-center mb-2" }, [
                                createVNode("span", { class: "text-sm text-muted-foreground" }, "Progress"),
                                createVNode("span", { class: "text-sm font-medium" }, toDisplayString(project.completed_tasks_count) + " / " + toDisplayString(project.tasks_count) + " tasks", 1)
                              ]),
                              createVNode(unref(_sfc_main$U), {
                                "model-value": getProgress(project)
                              }, null, 8, ["model-value"])
                            ];
                          }
                        }),
                        _: 2
                      }, _parent3, _scopeId2));
                      _push3(ssrRenderComponent(unref(_sfc_main$X), null, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(ssrRenderComponent(unref(_sfc_main$1p), {
                              "as-child": "",
                              variant: "secondary",
                              class: "w-full"
                            }, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(ssrRenderComponent(_sfc_main$1n, {
                                    href: `/project/${project.id}`
                                  }, {
                                    default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                      if (_push6) {
                                        _push6(`View Project`);
                                      } else {
                                        return [
                                          createTextVNode("View Project")
                                        ];
                                      }
                                    }),
                                    _: 2
                                  }, _parent5, _scopeId4));
                                } else {
                                  return [
                                    createVNode(_sfc_main$1n, {
                                      href: `/project/${project.id}`
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode("View Project")
                                      ]),
                                      _: 2
                                    }, 1032, ["href"])
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                          } else {
                            return [
                              createVNode(unref(_sfc_main$1p), {
                                "as-child": "",
                                variant: "secondary",
                                class: "w-full"
                              }, {
                                default: withCtx(() => [
                                  createVNode(_sfc_main$1n, {
                                    href: `/project/${project.id}`
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode("View Project")
                                    ]),
                                    _: 2
                                  }, 1032, ["href"])
                                ]),
                                _: 2
                              }, 1024)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent3, _scopeId2));
                    } else {
                      return [
                        createVNode(unref(_sfc_main$W), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$V), null, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(project.name), 1)
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$Z), { class: "flex-grow" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "flex justify-between items-center mb-2" }, [
                              createVNode("span", { class: "text-sm text-muted-foreground" }, "Progress"),
                              createVNode("span", { class: "text-sm font-medium" }, toDisplayString(project.completed_tasks_count) + " / " + toDisplayString(project.tasks_count) + " tasks", 1)
                            ]),
                            createVNode(unref(_sfc_main$U), {
                              "model-value": getProgress(project)
                            }, null, 8, ["model-value"])
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$X), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1p), {
                              "as-child": "",
                              variant: "secondary",
                              class: "w-full"
                            }, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1n, {
                                  href: `/project/${project.id}`
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode("View Project")
                                  ]),
                                  _: 2
                                }, 1032, ["href"])
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024)
                      ];
                    }
                  }),
                  _: 2
                }, _parent2, _scopeId));
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<div${_scopeId}><div class="text-center border-2 border-dashed rounded-lg p-12"${_scopeId}><svg class="mx-auto h-12 w-12 text-muted-foreground" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-semibold"${_scopeId}>No projects</h3><p class="mt-1 text-sm text-muted-foreground"${_scopeId}>Get started by creating a new project.</p><div class="mt-6"${_scopeId}>`);
              _push2(ssrRenderComponent(unref(_sfc_main$1p), { "as-child": "" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$1n, { href: "/project/create" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(Plus), { class: "mr-2 h-4 w-4" }, null, _parent4, _scopeId3));
                          _push4(` Create Project `);
                        } else {
                          return [
                            createVNode(unref(Plus), { class: "mr-2 h-4 w-4" }),
                            createTextVNode(" Create Project ")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_sfc_main$1n, { href: "/project/create" }, {
                        default: withCtx(() => [
                          createVNode(unref(Plus), { class: "mr-2 h-4 w-4" }),
                          createTextVNode(" Create Project ")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div></div></div>`);
            }
          } else {
            return [
              createVNode("div", { class: "flex flex-col sm:flex-row justify-between items-center gap-4 mb-6" }, [
                createVNode("h2", { class: "font-semibold text-xl" }, "Projects"),
                createVNode("div", { class: "flex space-x-2" }, [
                  createVNode("div", { class: "w-full sm:w-auto sm:max-w-xs" }, [
                    createVNode(unref(_sfc_main$1B), {
                      modelValue: filters.search,
                      "onUpdate:modelValue": ($event) => filters.search = $event,
                      type: "text",
                      placeholder: "Search projects..."
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  createVNode(unref(_sfc_main$1p), { "as-child": "" }, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$1n, { href: "/project/create" }, {
                        default: withCtx(() => [
                          createTextVNode("Create Project")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ])
              ]),
              __props.projects.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
              }, [
                (openBlock(true), createBlock(Fragment, null, renderList(__props.projects, (project) => {
                  return openBlock(), createBlock(unref(_sfc_main$_), {
                    key: project.id,
                    class: "flex flex-col"
                  }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$W), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(project.name), 1)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$Z), { class: "flex-grow" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "flex justify-between items-center mb-2" }, [
                            createVNode("span", { class: "text-sm text-muted-foreground" }, "Progress"),
                            createVNode("span", { class: "text-sm font-medium" }, toDisplayString(project.completed_tasks_count) + " / " + toDisplayString(project.tasks_count) + " tasks", 1)
                          ]),
                          createVNode(unref(_sfc_main$U), {
                            "model-value": getProgress(project)
                          }, null, 8, ["model-value"])
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$X), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1p), {
                            "as-child": "",
                            variant: "secondary",
                            class: "w-full"
                          }, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1n, {
                                href: `/project/${project.id}`
                              }, {
                                default: withCtx(() => [
                                  createTextVNode("View Project")
                                ]),
                                _: 2
                              }, 1032, ["href"])
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024)
                    ]),
                    _: 2
                  }, 1024);
                }), 128))
              ])) : (openBlock(), createBlock("div", { key: 1 }, [
                createVNode("div", { class: "text-center border-2 border-dashed rounded-lg p-12" }, [
                  (openBlock(), createBlock("svg", {
                    class: "mx-auto h-12 w-12 text-muted-foreground",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    "aria-hidden": "true"
                  }, [
                    createVNode("path", {
                      "vector-effect": "non-scaling-stroke",
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      "stroke-width": "2",
                      d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                    })
                  ])),
                  createVNode("h3", { class: "mt-2 text-sm font-semibold" }, "No projects"),
                  createVNode("p", { class: "mt-1 text-sm text-muted-foreground" }, "Get started by creating a new project."),
                  createVNode("div", { class: "mt-6" }, [
                    createVNode(unref(_sfc_main$1p), { "as-child": "" }, {
                      default: withCtx(() => [
                        createVNode(_sfc_main$1n, { href: "/project/create" }, {
                          default: withCtx(() => [
                            createVNode(unref(Plus), { class: "mr-2 h-4 w-4" }),
                            createTextVNode(" Create Project ")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ])
                ])
              ]))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$H = _sfc_main$H.setup;
_sfc_main$H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/app/project/index.vue");
  return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
};
const __vite_glob_0_3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$H
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$G = {
  __name: "Select",
  __ssrInlineRender: true,
  props: {
    open: { type: Boolean, required: false },
    defaultOpen: { type: Boolean, required: false },
    defaultValue: { type: null, required: false },
    modelValue: { type: null, required: false },
    by: { type: [String, Function], required: false },
    dir: { type: String, required: false },
    multiple: { type: Boolean, required: false },
    autocomplete: { type: String, required: false },
    disabled: { type: Boolean, required: false },
    name: { type: String, required: false },
    required: { type: Boolean, required: false }
  },
  emits: ["update:modelValue", "update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const forwarded = useForwardPropsEmits(props, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(SelectRoot), mergeProps({ "data-slot": "select" }, unref(forwarded), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$G = _sfc_main$G.setup;
_sfc_main$G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/select/Select.vue");
  return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
};
const _sfc_main$F = /* @__PURE__ */ Object.assign({
  inheritAttrs: false
}, {
  __name: "SelectContent",
  __ssrInlineRender: true,
  props: {
    forceMount: { type: Boolean, required: false },
    position: { type: String, required: false, default: "popper" },
    bodyLock: { type: Boolean, required: false },
    side: { type: null, required: false },
    sideOffset: { type: Number, required: false },
    align: { type: null, required: false },
    alignOffset: { type: Number, required: false },
    avoidCollisions: { type: Boolean, required: false },
    collisionBoundary: { type: null, required: false },
    collisionPadding: { type: [Number, Object], required: false },
    arrowPadding: { type: Number, required: false },
    sticky: { type: String, required: false },
    hideWhenDetached: { type: Boolean, required: false },
    positionStrategy: { type: String, required: false },
    updatePositionStrategy: { type: String, required: false },
    disableUpdateOnLayoutShift: { type: Boolean, required: false },
    prioritizePosition: { type: Boolean, required: false },
    reference: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  emits: [
    "closeAutoFocus",
    "escapeKeyDown",
    "pointerDownOutside"
  ],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const delegatedProps = reactiveOmit(props, "class");
    const forwarded = useForwardPropsEmits(delegatedProps, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(SelectPortal), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(SelectContent), mergeProps({ "data-slot": "select-content" }, { ...unref(forwarded), ..._ctx.$attrs }, {
              class: unref(cn)(
                "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--reka-select-content-available-height) min-w-[8rem] overflow-x-hidden overflow-y-auto rounded-md border shadow-md",
                __props.position === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
                props.class
              )
            }), {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$C), null, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(SelectViewport), {
                    class: unref(cn)(
                      "p-1",
                      __props.position === "popper" && "h-[var(--reka-select-trigger-height)] w-full min-w-[var(--reka-select-trigger-width)] scroll-my-1"
                    )
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push4, _parent4, _scopeId3);
                      } else {
                        return [
                          renderSlot(_ctx.$slots, "default")
                        ];
                      }
                    }),
                    _: 3
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$D), null, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$C)),
                    createVNode(unref(SelectViewport), {
                      class: unref(cn)(
                        "p-1",
                        __props.position === "popper" && "h-[var(--reka-select-trigger-height)] w-full min-w-[var(--reka-select-trigger-width)] scroll-my-1"
                      )
                    }, {
                      default: withCtx(() => [
                        renderSlot(_ctx.$slots, "default")
                      ]),
                      _: 3
                    }, 8, ["class"]),
                    createVNode(unref(_sfc_main$D))
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(SelectContent), mergeProps({ "data-slot": "select-content" }, { ...unref(forwarded), ..._ctx.$attrs }, {
                class: unref(cn)(
                  "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--reka-select-content-available-height) min-w-[8rem] overflow-x-hidden overflow-y-auto rounded-md border shadow-md",
                  __props.position === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
                  props.class
                )
              }), {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$C)),
                  createVNode(unref(SelectViewport), {
                    class: unref(cn)(
                      "p-1",
                      __props.position === "popper" && "h-[var(--reka-select-trigger-height)] w-full min-w-[var(--reka-select-trigger-width)] scroll-my-1"
                    )
                  }, {
                    default: withCtx(() => [
                      renderSlot(_ctx.$slots, "default")
                    ]),
                    _: 3
                  }, 8, ["class"]),
                  createVNode(unref(_sfc_main$D))
                ]),
                _: 3
              }, 16, ["class"])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
});
const _sfc_setup$F = _sfc_main$F.setup;
_sfc_main$F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/select/SelectContent.vue");
  return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
};
const _sfc_main$E = {
  __name: "SelectItem",
  __ssrInlineRender: true,
  props: {
    value: { type: null, required: true },
    disabled: { type: Boolean, required: false },
    textValue: { type: String, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(SelectItem), mergeProps({ "data-slot": "select-item" }, unref(forwardedProps), {
        class: unref(cn)(
          `focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2`,
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="absolute right-2 flex size-3.5 items-center justify-center"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(SelectItemIndicator), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(Check), { class: "size-4" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(Check), { class: "size-4" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</span>`);
            _push2(ssrRenderComponent(unref(SelectItemText), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                } else {
                  return [
                    renderSlot(_ctx.$slots, "default")
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode("span", { class: "absolute right-2 flex size-3.5 items-center justify-center" }, [
                createVNode(unref(SelectItemIndicator), null, {
                  default: withCtx(() => [
                    createVNode(unref(Check), { class: "size-4" })
                  ]),
                  _: 1
                })
              ]),
              createVNode(unref(SelectItemText), null, {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default")
                ]),
                _: 3
              })
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$E = _sfc_main$E.setup;
_sfc_main$E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/select/SelectItem.vue");
  return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
};
const _sfc_main$D = {
  __name: "SelectScrollDownButton",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(SelectScrollDownButton), mergeProps({ "data-slot": "select-scroll-down-button" }, unref(forwardedProps), {
        class: unref(cn)("flex cursor-default items-center justify-center py-1", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, () => {
              _push2(ssrRenderComponent(unref(ChevronDown), { class: "size-4" }, null, _parent2, _scopeId));
            }, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default", {}, () => [
                createVNode(unref(ChevronDown), { class: "size-4" })
              ])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$D = _sfc_main$D.setup;
_sfc_main$D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/select/SelectScrollDownButton.vue");
  return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
};
const _sfc_main$C = {
  __name: "SelectScrollUpButton",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(SelectScrollUpButton), mergeProps({ "data-slot": "select-scroll-up-button" }, unref(forwardedProps), {
        class: unref(cn)("flex cursor-default items-center justify-center py-1", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, () => {
              _push2(ssrRenderComponent(unref(ChevronUp), { class: "size-4" }, null, _parent2, _scopeId));
            }, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default", {}, () => [
                createVNode(unref(ChevronUp), { class: "size-4" })
              ])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$C = _sfc_main$C.setup;
_sfc_main$C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/select/SelectScrollUpButton.vue");
  return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
};
const _sfc_main$B = {
  __name: "SelectTrigger",
  __ssrInlineRender: true,
  props: {
    disabled: { type: Boolean, required: false },
    reference: { type: null, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false },
    size: { type: String, required: false, default: "default" }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class", "size");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(SelectTrigger), mergeProps({
        "data-slot": "select-trigger",
        "data-size": __props.size
      }, unref(forwardedProps), {
        class: unref(cn)(
          `border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
            _push2(ssrRenderComponent(unref(SelectIcon), { "as-child": "" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(ChevronDown), { class: "size-4 opacity-50" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(ChevronDown), { class: "size-4 opacity-50" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              renderSlot(_ctx.$slots, "default"),
              createVNode(unref(SelectIcon), { "as-child": "" }, {
                default: withCtx(() => [
                  createVNode(unref(ChevronDown), { class: "size-4 opacity-50" })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$B = _sfc_main$B.setup;
_sfc_main$B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/select/SelectTrigger.vue");
  return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
};
const _sfc_main$A = {
  __name: "SelectValue",
  __ssrInlineRender: true,
  props: {
    placeholder: { type: String, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(SelectValue), mergeProps({ "data-slot": "select-value" }, props, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$A = _sfc_main$A.setup;
_sfc_main$A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/select/SelectValue.vue");
  return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
};
const _sfc_main$z = {
  __name: "Tabs",
  __ssrInlineRender: true,
  props: {
    defaultValue: { type: null, required: false },
    orientation: { type: String, required: false },
    dir: { type: String, required: false },
    activationMode: { type: String, required: false },
    modelValue: { type: null, required: false },
    unmountOnHide: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  emits: ["update:modelValue"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const delegatedProps = reactiveOmit(props, "class");
    const forwarded = useForwardPropsEmits(delegatedProps, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TabsRoot), mergeProps({ "data-slot": "tabs" }, unref(forwarded), {
        class: unref(cn)("flex flex-col gap-2", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$z = _sfc_main$z.setup;
_sfc_main$z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/tabs/Tabs.vue");
  return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
};
const _sfc_main$y = {
  __name: "TabsContent",
  __ssrInlineRender: true,
  props: {
    value: { type: [String, Number], required: true },
    forceMount: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TabsContent), mergeProps({
        "data-slot": "tabs-content",
        class: unref(cn)("flex-1 outline-none", props.class)
      }, unref(delegatedProps), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$y = _sfc_main$y.setup;
_sfc_main$y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/tabs/TabsContent.vue");
  return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
};
const _sfc_main$x = {
  __name: "TabsList",
  __ssrInlineRender: true,
  props: {
    loop: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TabsList), mergeProps({ "data-slot": "tabs-list" }, unref(delegatedProps), {
        class: unref(cn)(
          "bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]",
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$x = _sfc_main$x.setup;
_sfc_main$x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/tabs/TabsList.vue");
  return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
};
const _sfc_main$w = {
  __name: "TabsTrigger",
  __ssrInlineRender: true,
  props: {
    value: { type: [String, Number], required: true },
    disabled: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(TabsTrigger), mergeProps({ "data-slot": "tabs-trigger" }, unref(forwardedProps), {
        class: unref(cn)(
          `data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$w = _sfc_main$w.setup;
_sfc_main$w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/tabs/TabsTrigger.vue");
  return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
};
const _sfc_main$v = {
  __name: "Dialog",
  __ssrInlineRender: true,
  props: {
    open: { type: Boolean, required: false },
    defaultOpen: { type: Boolean, required: false },
    modal: { type: Boolean, required: false }
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const forwarded = useForwardPropsEmits(props, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogRoot), mergeProps({ "data-slot": "dialog" }, unref(forwarded), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$v = _sfc_main$v.setup;
_sfc_main$v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dialog/Dialog.vue");
  return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
};
const _sfc_main$u = {
  __name: "DialogOverlay",
  __ssrInlineRender: true,
  props: {
    forceMount: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogOverlay), mergeProps({ "data-slot": "dialog-overlay" }, unref(delegatedProps), {
        class: unref(cn)(
          "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80",
          props.class
        )
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$u = _sfc_main$u.setup;
_sfc_main$u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dialog/DialogOverlay.vue");
  return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
};
const _sfc_main$t = {
  __name: "DialogContent",
  __ssrInlineRender: true,
  props: {
    forceMount: { type: Boolean, required: false },
    disableOutsidePointerEvents: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const delegatedProps = reactiveOmit(props, "class");
    const forwarded = useForwardPropsEmits(delegatedProps, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogPortal), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$u, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(DialogContent), mergeProps({ "data-slot": "dialog-content" }, unref(forwarded), {
              class: unref(cn)(
                "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
                props.class
              )
            }), {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                  _push3(ssrRenderComponent(unref(DialogClose), { class: "ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(X), null, null, _parent4, _scopeId3));
                        _push4(`<span class="sr-only"${_scopeId3}>Close</span>`);
                      } else {
                        return [
                          createVNode(unref(X)),
                          createVNode("span", { class: "sr-only" }, "Close")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    renderSlot(_ctx.$slots, "default"),
                    createVNode(unref(DialogClose), { class: "ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4" }, {
                      default: withCtx(() => [
                        createVNode(unref(X)),
                        createVNode("span", { class: "sr-only" }, "Close")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$u),
              createVNode(unref(DialogContent), mergeProps({ "data-slot": "dialog-content" }, unref(forwarded), {
                class: unref(cn)(
                  "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
                  props.class
                )
              }), {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default"),
                  createVNode(unref(DialogClose), { class: "ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4" }, {
                    default: withCtx(() => [
                      createVNode(unref(X)),
                      createVNode("span", { class: "sr-only" }, "Close")
                    ]),
                    _: 1
                  })
                ]),
                _: 3
              }, 16, ["class"])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$t = _sfc_main$t.setup;
_sfc_main$t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dialog/DialogContent.vue");
  return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
};
const _sfc_main$s = {
  __name: "DialogDescription",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogDescription), mergeProps({ "data-slot": "dialog-description" }, unref(forwardedProps), {
        class: unref(cn)("text-muted-foreground text-sm", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$s = _sfc_main$s.setup;
_sfc_main$s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dialog/DialogDescription.vue");
  return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
};
const _sfc_main$r = {
  __name: "DialogHeader",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "dialog-header",
        class: unref(cn)("flex flex-col gap-2 text-center sm:text-left", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$r = _sfc_main$r.setup;
_sfc_main$r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dialog/DialogHeader.vue");
  return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
};
const _sfc_main$q = {
  __name: "DialogTitle",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    const forwardedProps = useForwardProps(delegatedProps);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(DialogTitle), mergeProps({ "data-slot": "dialog-title" }, unref(forwardedProps), {
        class: unref(cn)("text-lg leading-none font-semibold", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$q = _sfc_main$q.setup;
_sfc_main$q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/dialog/DialogTitle.vue");
  return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
};
const _sfc_main$p = {
  __name: "add-member-dialog",
  __ssrInlineRender: true,
  props: {
    project: Object,
    open: Boolean
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const form = useForm({ email: "" });
    const addMember = () => {
      form.post(`/project/${props.project.id}/members`, {
        preserveScroll: true,
        onSuccess: () => {
          form.reset();
          toast.success("Member Added");
          emit("update:open", false);
        },
        onError: (errors) => toast.error(errors.email || "Failed to add member.")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$v), mergeProps({
        open: __props.open,
        "onUpdate:open": (value) => emit("update:open", value)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$t), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$r), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$q), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Add New Member`);
                            } else {
                              return [
                                createTextVNode("Add New Member")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$s), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(` Add a registered user by their email address. `);
                            } else {
                              return [
                                createTextVNode(" Add a registered user by their email address. ")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$q), null, {
                            default: withCtx(() => [
                              createTextVNode("Add New Member")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$s), null, {
                            default: withCtx(() => [
                              createTextVNode(" Add a registered user by their email address. ")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`<form class="space-y-4 pt-4"${_scopeId2}><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "add-member-email" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`User Email`);
                      } else {
                        return [
                          createTextVNode("User Email")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "add-member-email",
                    modelValue: unref(form).email,
                    "onUpdate:modelValue": ($event) => unref(form).email = $event,
                    type: "email",
                    placeholder: "user@example.com"
                  }, null, _parent3, _scopeId2));
                  if (unref(form).errors.email) {
                    _push3(`<p class="text-sm text-destructive"${_scopeId2}>${ssrInterpolate(unref(form).errors.email)}</p>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    type: "submit",
                    class: "w-full",
                    disabled: unref(form).processing
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Add Member `);
                      } else {
                        return [
                          createTextVNode(" Add Member ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</form>`);
                } else {
                  return [
                    createVNode(unref(_sfc_main$r), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$q), null, {
                          default: withCtx(() => [
                            createTextVNode("Add New Member")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$s), null, {
                          default: withCtx(() => [
                            createTextVNode(" Add a registered user by their email address. ")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode("form", {
                      onSubmit: withModifiers(addMember, ["prevent"]),
                      class: "space-y-4 pt-4"
                    }, [
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "add-member-email" }, {
                          default: withCtx(() => [
                            createTextVNode("User Email")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1B), {
                          id: "add-member-email",
                          modelValue: unref(form).email,
                          "onUpdate:modelValue": ($event) => unref(form).email = $event,
                          type: "email",
                          placeholder: "user@example.com"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                        unref(form).errors.email ? (openBlock(), createBlock("p", {
                          key: 0,
                          class: "text-sm text-destructive"
                        }, toDisplayString(unref(form).errors.email), 1)) : createCommentVNode("", true)
                      ]),
                      createVNode(unref(_sfc_main$1p), {
                        type: "submit",
                        class: "w-full",
                        disabled: unref(form).processing
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Add Member ")
                        ]),
                        _: 1
                      }, 8, ["disabled"])
                    ], 32)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$t), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$r), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$q), null, {
                        default: withCtx(() => [
                          createTextVNode("Add New Member")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$s), null, {
                        default: withCtx(() => [
                          createTextVNode(" Add a registered user by their email address. ")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode("form", {
                    onSubmit: withModifiers(addMember, ["prevent"]),
                    class: "space-y-4 pt-4"
                  }, [
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "add-member-email" }, {
                        default: withCtx(() => [
                          createTextVNode("User Email")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$1B), {
                        id: "add-member-email",
                        modelValue: unref(form).email,
                        "onUpdate:modelValue": ($event) => unref(form).email = $event,
                        type: "email",
                        placeholder: "user@example.com"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      unref(form).errors.email ? (openBlock(), createBlock("p", {
                        key: 0,
                        class: "text-sm text-destructive"
                      }, toDisplayString(unref(form).errors.email), 1)) : createCommentVNode("", true)
                    ]),
                    createVNode(unref(_sfc_main$1p), {
                      type: "submit",
                      class: "w-full",
                      disabled: unref(form).processing
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Add Member ")
                      ]),
                      _: 1
                    }, 8, ["disabled"])
                  ], 32)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$p = _sfc_main$p.setup;
_sfc_main$p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/project/add-member-dialog.vue");
  return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
};
const _sfc_main$o = {
  __name: "member-list-view",
  __ssrInlineRender: true,
  props: {
    members: Array,
    ownerId: Number
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$T), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$O), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$Q), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Name`);
                            } else {
                              return [
                                createTextVNode("Name")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Email`);
                            } else {
                              return [
                                createTextVNode("Email")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Role`);
                            } else {
                              return [
                                createTextVNode("Role")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Name")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Email")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Role")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$Q), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Name")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Email")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Role")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$S), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  ssrRenderList(__props.members, (member) => {
                    _push3(ssrRenderComponent(unref(_sfc_main$Q), {
                      key: member.id
                    }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$R), { class: "font-medium" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`${ssrInterpolate(member.name)}`);
                              } else {
                                return [
                                  createTextVNode(toDisplayString(member.name), 1)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`${ssrInterpolate(member.email)}`);
                              } else {
                                return [
                                  createTextVNode(toDisplayString(member.email), 1)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(unref(_sfc_main$R), null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                if (member.id === __props.ownerId) {
                                  _push5(ssrRenderComponent(unref(_sfc_main$N), null, {
                                    default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                      if (_push6) {
                                        _push6(`Owner`);
                                      } else {
                                        return [
                                          createTextVNode("Owner")
                                        ];
                                      }
                                    }),
                                    _: 2
                                  }, _parent5, _scopeId4));
                                } else {
                                  _push5(ssrRenderComponent(unref(_sfc_main$N), { variant: "outline" }, {
                                    default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                      if (_push6) {
                                        _push6(`Member`);
                                      } else {
                                        return [
                                          createTextVNode("Member")
                                        ];
                                      }
                                    }),
                                    _: 2
                                  }, _parent5, _scopeId4));
                                }
                              } else {
                                return [
                                  member.id === __props.ownerId ? (openBlock(), createBlock(unref(_sfc_main$N), { key: 0 }, {
                                    default: withCtx(() => [
                                      createTextVNode("Owner")
                                    ]),
                                    _: 1
                                  })) : (openBlock(), createBlock(unref(_sfc_main$N), {
                                    key: 1,
                                    variant: "outline"
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode("Member")
                                    ]),
                                    _: 1
                                  }))
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(member.name), 1)
                              ]),
                              _: 2
                            }, 1024),
                            createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(member.email), 1)
                              ]),
                              _: 2
                            }, 1024),
                            createVNode(unref(_sfc_main$R), null, {
                              default: withCtx(() => [
                                member.id === __props.ownerId ? (openBlock(), createBlock(unref(_sfc_main$N), { key: 0 }, {
                                  default: withCtx(() => [
                                    createTextVNode("Owner")
                                  ]),
                                  _: 1
                                })) : (openBlock(), createBlock(unref(_sfc_main$N), {
                                  key: 1,
                                  variant: "outline"
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode("Member")
                                  ]),
                                  _: 1
                                }))
                              ]),
                              _: 2
                            }, 1024)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (openBlock(true), createBlock(Fragment, null, renderList(__props.members, (member) => {
                      return openBlock(), createBlock(unref(_sfc_main$Q), {
                        key: member.id
                      }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(member.name), 1)
                            ]),
                            _: 2
                          }, 1024),
                          createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(member.email), 1)
                            ]),
                            _: 2
                          }, 1024),
                          createVNode(unref(_sfc_main$R), null, {
                            default: withCtx(() => [
                              member.id === __props.ownerId ? (openBlock(), createBlock(unref(_sfc_main$N), { key: 0 }, {
                                default: withCtx(() => [
                                  createTextVNode("Owner")
                                ]),
                                _: 1
                              })) : (openBlock(), createBlock(unref(_sfc_main$N), {
                                key: 1,
                                variant: "outline"
                              }, {
                                default: withCtx(() => [
                                  createTextVNode("Member")
                                ]),
                                _: 1
                              }))
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$O), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$Q), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Name")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Email")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Role")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$S), null, {
                default: withCtx(() => [
                  (openBlock(true), createBlock(Fragment, null, renderList(__props.members, (member) => {
                    return openBlock(), createBlock(unref(_sfc_main$Q), {
                      key: member.id
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(member.name), 1)
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(member.email), 1)
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$R), null, {
                          default: withCtx(() => [
                            member.id === __props.ownerId ? (openBlock(), createBlock(unref(_sfc_main$N), { key: 0 }, {
                              default: withCtx(() => [
                                createTextVNode("Owner")
                              ]),
                              _: 1
                            })) : (openBlock(), createBlock(unref(_sfc_main$N), {
                              key: 1,
                              variant: "outline"
                            }, {
                              default: withCtx(() => [
                                createTextVNode("Member")
                              ]),
                              _: 1
                            }))
                          ]),
                          _: 2
                        }, 1024)
                      ]),
                      _: 2
                    }, 1024);
                  }), 128))
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$o = _sfc_main$o.setup;
_sfc_main$o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/project/member-list-view.vue");
  return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
};
const _sfc_main$n = {
  __name: "activity-feed",
  __ssrInlineRender: true,
  props: {
    activities: Array,
    taskStatuses: Array,
    taskPriorities: Array
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<ul${ssrRenderAttrs(mergeProps({ class: "space-y-4" }, _attrs))}><!--[-->`);
      ssrRenderList(__props.activities, (activity) => {
        var _a, _b, _c, _d, _e, _f, _g;
        _push(`<li class="flex items-start space-x-3">`);
        _push(ssrRenderComponent(unref(_sfc_main$1l), { class: "h-8 w-8" }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            var _a2, _b2;
            if (_push2) {
              _push2(ssrRenderComponent(unref(_sfc_main$1j), {
                src: ((_a2 = activity.causer) == null ? void 0 : _a2.avatar) ?? "https://github.com/unovue.png"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(unref(_sfc_main$1k), null, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  var _a3, _b3;
                  if (_push3) {
                    _push3(`${ssrInterpolate(((_a3 = activity.causer) == null ? void 0 : _a3.name.charAt(0)) ?? "?")}`);
                  } else {
                    return [
                      createTextVNode(toDisplayString(((_b3 = activity.causer) == null ? void 0 : _b3.name.charAt(0)) ?? "?"), 1)
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(unref(_sfc_main$1j), {
                  src: ((_b2 = activity.causer) == null ? void 0 : _b2.avatar) ?? "https://github.com/unovue.png"
                }, null, 8, ["src"]),
                createVNode(unref(_sfc_main$1k), null, {
                  default: withCtx(() => {
                    var _a3;
                    return [
                      createTextVNode(toDisplayString(((_a3 = activity.causer) == null ? void 0 : _a3.name.charAt(0)) ?? "?"), 1)
                    ];
                  }),
                  _: 2
                }, 1024)
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`<div class="flex-grow"><p class="text-sm"><span class="font-semibold">${ssrInterpolate(((_a = activity.causer) == null ? void 0 : _a.name) ?? "A user")}</span> ${ssrInterpolate(activity.description)} `);
        if (activity.subject) {
          _push(`<span class="font-semibold"> &quot;${ssrInterpolate(activity.subject.title)}&quot; </span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</p>`);
        if (activity.properties.old) {
          _push(`<div class="text-xs text-muted-foreground mt-1 pl-4 border-l-2">`);
          if (activity.properties.old.status) {
            _push(`<p> Status changed from <span class="font-medium">${ssrInterpolate(((_b = __props.taskStatuses.find((s) => s.value === activity.properties.old.status)) == null ? void 0 : _b.label) ?? "Unknown")}</span>`);
            if ((_c = activity.properties.attributes) == null ? void 0 : _c.status) {
              _push(`<!--[--> to <span class="font-medium">${ssrInterpolate((_d = __props.taskStatuses.find((s) => s.value === activity.properties.attributes.status)) == null ? void 0 : _d.label)}</span><!--]-->`);
            } else {
              _push(`<!---->`);
            }
            _push(`</p>`);
          } else {
            _push(`<!---->`);
          }
          if (activity.properties.old.priority) {
            _push(`<p> Priority changed from <span class="font-medium">${ssrInterpolate(((_e = __props.taskPriorities.find((p) => p.value === activity.properties.old.priority)) == null ? void 0 : _e.label) ?? "Unknown")}</span>`);
            if ((_f = activity.properties.attributes) == null ? void 0 : _f.priority) {
              _push(`<!--[--> to <span class="font-medium">${ssrInterpolate((_g = __props.taskPriorities.find((p) => p.value === activity.properties.attributes.priority)) == null ? void 0 : _g.label)}</span><!--]-->`);
            } else {
              _push(`<!---->`);
            }
            _push(`</p>`);
          } else {
            _push(`<!---->`);
          }
          _push(`</div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<p class="text-xs text-muted-foreground mt-1">${ssrInterpolate(unref(formatDistanceToNow)(new Date(activity.created_at), { addSuffix: true }))}</p></div></li>`);
      });
      _push(`<!--]-->`);
      if (!__props.activities || __props.activities.length === 0) {
        _push(`<li class="text-center text-muted-foreground py-8"> No activity recorded yet. </li>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</ul>`);
    };
  }
};
const _sfc_setup$n = _sfc_main$n.setup;
_sfc_main$n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/project/activity-feed.vue");
  return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
};
const _sfc_main$m = {
  __name: "AlertDialog",
  __ssrInlineRender: true,
  props: {
    open: { type: Boolean, required: false },
    defaultOpen: { type: Boolean, required: false }
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const forwarded = useForwardPropsEmits(props, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AlertDialogRoot), mergeProps({ "data-slot": "alert-dialog" }, unref(forwarded), _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$m = _sfc_main$m.setup;
_sfc_main$m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialog.vue");
  return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
};
const _sfc_main$l = {
  __name: "AlertDialogAction",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AlertDialogAction), mergeProps(unref(delegatedProps), {
        class: unref(cn)(unref(buttonVariants)(), props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$l = _sfc_main$l.setup;
_sfc_main$l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogAction.vue");
  return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
};
const _sfc_main$k = {
  __name: "AlertDialogCancel",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AlertDialogCancel), mergeProps(unref(delegatedProps), {
        class: unref(cn)(unref(buttonVariants)({ variant: "outline" }), "mt-2 sm:mt-0", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$k = _sfc_main$k.setup;
_sfc_main$k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogCancel.vue");
  return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
};
const _sfc_main$j = {
  __name: "AlertDialogContent",
  __ssrInlineRender: true,
  props: {
    forceMount: { type: Boolean, required: false },
    disableOutsidePointerEvents: { type: Boolean, required: false },
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const delegatedProps = reactiveOmit(props, "class");
    const forwarded = useForwardPropsEmits(delegatedProps, emits);
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AlertDialogPortal), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(AlertDialogOverlay), {
              "data-slot": "alert-dialog-overlay",
              class: "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(AlertDialogContent), mergeProps({ "data-slot": "alert-dialog-content" }, unref(forwarded), {
              class: unref(cn)(
                "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
                props.class
              )
            }), {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
                } else {
                  return [
                    renderSlot(_ctx.$slots, "default")
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(AlertDialogOverlay), {
                "data-slot": "alert-dialog-overlay",
                class: "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80"
              }),
              createVNode(unref(AlertDialogContent), mergeProps({ "data-slot": "alert-dialog-content" }, unref(forwarded), {
                class: unref(cn)(
                  "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
                  props.class
                )
              }), {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default")
                ]),
                _: 3
              }, 16, ["class"])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogContent.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
const _sfc_main$i = {
  __name: "AlertDialogDescription",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AlertDialogDescription), mergeProps({ "data-slot": "alert-dialog-description" }, unref(delegatedProps), {
        class: unref(cn)("text-muted-foreground text-sm", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogDescription.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
const _sfc_main$h = {
  __name: "AlertDialogFooter",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "alert-dialog-footer",
        class: unref(cn)("flex flex-col-reverse gap-2 sm:flex-row sm:justify-end", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogFooter.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const _sfc_main$g = {
  __name: "AlertDialogHeader",
  __ssrInlineRender: true,
  props: {
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-slot": "alert-dialog-header",
        class: unref(cn)("flex flex-col gap-2 text-center sm:text-left", props.class)
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogHeader.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
const _sfc_main$f = {
  __name: "AlertDialogTitle",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false },
    class: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    const delegatedProps = reactiveOmit(props, "class");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AlertDialogTitle), mergeProps({ "data-slot": "alert-dialog-title" }, unref(delegatedProps), {
        class: unref(cn)("text-lg font-semibold", props.class)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogTitle.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
const _sfc_main$e = {
  __name: "AlertDialogTrigger",
  __ssrInlineRender: true,
  props: {
    asChild: { type: Boolean, required: false },
    as: { type: null, required: false }
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(AlertDialogTrigger), mergeProps({ "data-slot": "alert-dialog-trigger" }, props, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/ui/alert-dialog/AlertDialogTrigger.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
const _sfc_main$d = {
  __name: "setting-tab",
  __ssrInlineRender: true,
  props: {
    project: Object
  },
  setup(__props) {
    const props = __props;
    const form = useForm({
      name: props.project.name,
      description: props.project.description
    });
    const updateProject = () => {
      form.put(`/project/${props.project.id}`, {
        preserveScroll: true,
        onSuccess: () => toast.success("Project Updated")
      });
    };
    const deleteProject = () => {
      router.delete(`/project/${props.project.id}`);
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "space-y-6" }, _attrs))}>`);
      _push(ssrRenderComponent(unref(_sfc_main$_), null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$W), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$V), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Project Settings`);
                      } else {
                        return [
                          createTextVNode("Project Settings")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Y), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Update your project&#39;s name and description.`);
                      } else {
                        return [
                          createTextVNode("Update your project's name and description.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$V), null, {
                      default: withCtx(() => [
                        createTextVNode("Project Settings")
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Y), null, {
                      default: withCtx(() => [
                        createTextVNode("Update your project's name and description.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<form${_scopeId}>`);
            _push2(ssrRenderComponent(unref(_sfc_main$Z), { class: "space-y-4 pt-4" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "project-name" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Project Name`);
                      } else {
                        return [
                          createTextVNode("Project Name")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "project-name",
                    modelValue: unref(form).name,
                    "onUpdate:modelValue": ($event) => unref(form).name = $event,
                    type: "text",
                    required: ""
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "project-description" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Description`);
                      } else {
                        return [
                          createTextVNode("Description")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$J), {
                    id: "project-description",
                    modelValue: unref(form).description,
                    "onUpdate:modelValue": ($event) => unref(form).description = $event
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "project-name" }, {
                        default: withCtx(() => [
                          createTextVNode("Project Name")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$1B), {
                        id: "project-name",
                        modelValue: unref(form).name,
                        "onUpdate:modelValue": ($event) => unref(form).name = $event,
                        type: "text",
                        required: ""
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "project-description" }, {
                        default: withCtx(() => [
                          createTextVNode("Description")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$J), {
                        id: "project-description",
                        modelValue: unref(form).description,
                        "onUpdate:modelValue": ($event) => unref(form).description = $event
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$X), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    type: "submit",
                    disabled: unref(form).processing,
                    class: "mt-6"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Save Changes `);
                      } else {
                        return [
                          createTextVNode(" Save Changes ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$1p), {
                      type: "submit",
                      disabled: unref(form).processing,
                      class: "mt-6"
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Save Changes ")
                      ]),
                      _: 1
                    }, 8, ["disabled"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</form>`);
          } else {
            return [
              createVNode(unref(_sfc_main$W), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$V), null, {
                    default: withCtx(() => [
                      createTextVNode("Project Settings")
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$Y), null, {
                    default: withCtx(() => [
                      createTextVNode("Update your project's name and description.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode("form", {
                onSubmit: withModifiers(updateProject, ["prevent"])
              }, [
                createVNode(unref(_sfc_main$Z), { class: "space-y-4 pt-4" }, {
                  default: withCtx(() => [
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "project-name" }, {
                        default: withCtx(() => [
                          createTextVNode("Project Name")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$1B), {
                        id: "project-name",
                        modelValue: unref(form).name,
                        "onUpdate:modelValue": ($event) => unref(form).name = $event,
                        type: "text",
                        required: ""
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "project-description" }, {
                        default: withCtx(() => [
                          createTextVNode("Description")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$J), {
                        id: "project-description",
                        modelValue: unref(form).description,
                        "onUpdate:modelValue": ($event) => unref(form).description = $event
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ])
                  ]),
                  _: 1
                }),
                createVNode(unref(_sfc_main$X), null, {
                  default: withCtx(() => [
                    createVNode(unref(_sfc_main$1p), {
                      type: "submit",
                      disabled: unref(form).processing,
                      class: "mt-6"
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Save Changes ")
                      ]),
                      _: 1
                    }, 8, ["disabled"])
                  ]),
                  _: 1
                })
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(unref(_sfc_main$_), { class: "border-destructive" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$W), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$V), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Danger Zone`);
                      } else {
                        return [
                          createTextVNode("Danger Zone")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Y), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Deleting your project is a permanent action. `);
                      } else {
                        return [
                          createTextVNode(" Deleting your project is a permanent action. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$V), null, {
                      default: withCtx(() => [
                        createTextVNode("Danger Zone")
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Y), null, {
                      default: withCtx(() => [
                        createTextVNode(" Deleting your project is a permanent action. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$Z), { class: "pt-6" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$m), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$e), { "as-child": "" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$1p), { variant: "destructive" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`Delete Project`);
                                  } else {
                                    return [
                                      createTextVNode("Delete Project")
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$1p), { variant: "destructive" }, {
                                  default: withCtx(() => [
                                    createTextVNode("Delete Project")
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$j), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$g), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$f), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`Are you absolutely sure?`);
                                        } else {
                                          return [
                                            createTextVNode("Are you absolutely sure?")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$i), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(` This action cannot be undone. This will permanently delete this project and all of its tasks, members, and activities. `);
                                        } else {
                                          return [
                                            createTextVNode(" This action cannot be undone. This will permanently delete this project and all of its tasks, members, and activities. ")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$f), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Are you absolutely sure?")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$i), null, {
                                        default: withCtx(() => [
                                          createTextVNode(" This action cannot be undone. This will permanently delete this project and all of its tasks, members, and activities. ")
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$h), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$k), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`Cancel`);
                                        } else {
                                          return [
                                            createTextVNode("Cancel")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$l), { onClick: deleteProject }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(` Continue &amp; Delete `);
                                        } else {
                                          return [
                                            createTextVNode(" Continue & Delete ")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$k), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Cancel")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$l), { onClick: deleteProject }, {
                                        default: withCtx(() => [
                                          createTextVNode(" Continue & Delete ")
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$g), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$f), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Are you absolutely sure?")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$i), null, {
                                      default: withCtx(() => [
                                        createTextVNode(" This action cannot be undone. This will permanently delete this project and all of its tasks, members, and activities. ")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$h), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$k), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Cancel")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$l), { onClick: deleteProject }, {
                                      default: withCtx(() => [
                                        createTextVNode(" Continue & Delete ")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), { variant: "destructive" }, {
                                default: withCtx(() => [
                                  createTextVNode("Delete Project")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$j), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$g), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$f), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Are you absolutely sure?")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$i), null, {
                                    default: withCtx(() => [
                                      createTextVNode(" This action cannot be undone. This will permanently delete this project and all of its tasks, members, and activities. ")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$h), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$k), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Cancel")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$l), { onClick: deleteProject }, {
                                    default: withCtx(() => [
                                      createTextVNode(" Continue & Delete ")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$m), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1p), { variant: "destructive" }, {
                              default: withCtx(() => [
                                createTextVNode("Delete Project")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$j), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$g), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$f), null, {
                                  default: withCtx(() => [
                                    createTextVNode("Are you absolutely sure?")
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$i), null, {
                                  default: withCtx(() => [
                                    createTextVNode(" This action cannot be undone. This will permanently delete this project and all of its tasks, members, and activities. ")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$h), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$k), null, {
                                  default: withCtx(() => [
                                    createTextVNode("Cancel")
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$l), { onClick: deleteProject }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Continue & Delete ")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$W), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$V), null, {
                    default: withCtx(() => [
                      createTextVNode("Danger Zone")
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$Y), null, {
                    default: withCtx(() => [
                      createTextVNode(" Deleting your project is a permanent action. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$Z), { class: "pt-6" }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$m), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1p), { variant: "destructive" }, {
                            default: withCtx(() => [
                              createTextVNode("Delete Project")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$j), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$g), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$f), null, {
                                default: withCtx(() => [
                                  createTextVNode("Are you absolutely sure?")
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$i), null, {
                                default: withCtx(() => [
                                  createTextVNode(" This action cannot be undone. This will permanently delete this project and all of its tasks, members, and activities. ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$h), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$k), null, {
                                default: withCtx(() => [
                                  createTextVNode("Cancel")
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$l), { onClick: deleteProject }, {
                                default: withCtx(() => [
                                  createTextVNode(" Continue & Delete ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
};
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/project/setting-tab.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
const _sfc_main$c = {
  __name: "create-task-dialog",
  __ssrInlineRender: true,
  props: {
    project: Object,
    members: Array,
    taskPriorities: Array,
    open: Boolean
  },
  emits: ["update:open"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const form = useForm({
      title: "",
      description: "",
      due_date: "",
      assigned_to_id: null,
      priority: 2
    });
    const addTask = () => {
      form.post(`/task/${props.project.id}`, {
        preserveScroll: true,
        onSuccess: () => {
          form.reset();
          toast.success("Task Created");
          emit("update:open", false);
        },
        onError: () => toast.error("Creation Failed. Please check the form.")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$v), mergeProps({
        open: __props.open,
        "onUpdate:open": (value) => emit("update:open", value)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$t), { class: "sm:max-w-[625px]" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$r), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$q), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Create New Task`);
                            } else {
                              return [
                                createTextVNode("Create New Task")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$q), null, {
                            default: withCtx(() => [
                              createTextVNode("Create New Task")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`<form class="space-y-4 pt-4"${_scopeId2}><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "title" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Task Title`);
                      } else {
                        return [
                          createTextVNode("Task Title")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "title",
                    modelValue: unref(form).title,
                    "onUpdate:modelValue": ($event) => unref(form).title = $event,
                    placeholder: "e.g., Design the homepage"
                  }, null, _parent3, _scopeId2));
                  if (unref(form).errors.title) {
                    _push3(`<p class="text-sm text-destructive"${_scopeId2}>${ssrInterpolate(unref(form).errors.title)}</p>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "description" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Description`);
                      } else {
                        return [
                          createTextVNode("Description")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$J), {
                    id: "description",
                    modelValue: unref(form).description,
                    "onUpdate:modelValue": ($event) => unref(form).description = $event,
                    placeholder: "Add more details about the task..."
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><div class="grid grid-cols-2 gap-4"${_scopeId2}><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "due_date" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Due Date`);
                      } else {
                        return [
                          createTextVNode("Due Date")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "due_date",
                    modelValue: unref(form).due_date,
                    "onUpdate:modelValue": ($event) => unref(form).due_date = $event,
                    type: "date"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "assigned_to_id" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Assign To`);
                      } else {
                        return [
                          createTextVNode("Assign To")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$G), {
                    modelValue: unref(form).assigned_to_id,
                    "onUpdate:modelValue": ($event) => unref(form).assigned_to_id = $event
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$B), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Select a member" }, null, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$F), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`<!--[-->`);
                              ssrRenderList(__props.project.members, (member) => {
                                _push5(ssrRenderComponent(unref(_sfc_main$E), {
                                  key: member.id,
                                  value: member.id
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(`${ssrInterpolate(member.name)}`);
                                    } else {
                                      return [
                                        createTextVNode(toDisplayString(member.name), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              });
                              _push5(`<!--]-->`);
                            } else {
                              return [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.project.members, (member) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: member.id,
                                    value: member.id
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(member.name), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$B), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$F), null, {
                            default: withCtx(() => [
                              (openBlock(true), createBlock(Fragment, null, renderList(__props.project.members, (member) => {
                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                  key: member.id,
                                  value: member.id
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(member.name), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["value"]);
                              }), 128))
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  if (unref(form).errors.assigned_to_id) {
                    _push3(`<p class="text-sm text-destructive"${_scopeId2}>${ssrInterpolate(unref(form).errors.assigned_to_id)}</p>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "priority" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Priority`);
                      } else {
                        return [
                          createTextVNode("Priority")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$G), {
                    modelValue: unref(form).priority,
                    "onUpdate:modelValue": ($event) => unref(form).priority = $event
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$B), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Select priority" }, null, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$F), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`<!--[-->`);
                              ssrRenderList(__props.taskPriorities, (priority) => {
                                _push5(ssrRenderComponent(unref(_sfc_main$E), {
                                  key: priority.value,
                                  value: priority.value
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(`${ssrInterpolate(priority.label)}`);
                                    } else {
                                      return [
                                        createTextVNode(toDisplayString(priority.label), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              });
                              _push5(`<!--]-->`);
                            } else {
                              return [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: priority.value,
                                    value: priority.value
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(priority.label), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$B), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$F), null, {
                            default: withCtx(() => [
                              (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                  key: priority.value,
                                  value: priority.value
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(priority.label), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["value"]);
                              }), 128))
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div></div>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    type: "submit",
                    disabled: unref(form).processing
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Add Task`);
                      } else {
                        return [
                          createTextVNode("Add Task")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</form>`);
                } else {
                  return [
                    createVNode(unref(_sfc_main$r), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$q), null, {
                          default: withCtx(() => [
                            createTextVNode("Create New Task")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode("form", {
                      onSubmit: withModifiers(addTask, ["prevent"]),
                      class: "space-y-4 pt-4"
                    }, [
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "title" }, {
                          default: withCtx(() => [
                            createTextVNode("Task Title")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1B), {
                          id: "title",
                          modelValue: unref(form).title,
                          "onUpdate:modelValue": ($event) => unref(form).title = $event,
                          placeholder: "e.g., Design the homepage"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                        unref(form).errors.title ? (openBlock(), createBlock("p", {
                          key: 0,
                          class: "text-sm text-destructive"
                        }, toDisplayString(unref(form).errors.title), 1)) : createCommentVNode("", true)
                      ]),
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "description" }, {
                          default: withCtx(() => [
                            createTextVNode("Description")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$J), {
                          id: "description",
                          modelValue: unref(form).description,
                          "onUpdate:modelValue": ($event) => unref(form).description = $event,
                          placeholder: "Add more details about the task..."
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      createVNode("div", { class: "grid grid-cols-2 gap-4" }, [
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "due_date" }, {
                            default: withCtx(() => [
                              createTextVNode("Due Date")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "due_date",
                            modelValue: unref(form).due_date,
                            "onUpdate:modelValue": ($event) => unref(form).due_date = $event,
                            type: "date"
                          }, null, 8, ["modelValue", "onUpdate:modelValue"])
                        ]),
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "assigned_to_id" }, {
                            default: withCtx(() => [
                              createTextVNode("Assign To")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$G), {
                            modelValue: unref(form).assigned_to_id,
                            "onUpdate:modelValue": ($event) => unref(form).assigned_to_id = $event
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$B), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$F), null, {
                                default: withCtx(() => [
                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.project.members, (member) => {
                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                      key: member.id,
                                      value: member.id
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(member.name), 1)
                                      ]),
                                      _: 2
                                    }, 1032, ["value"]);
                                  }), 128))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["modelValue", "onUpdate:modelValue"]),
                          unref(form).errors.assigned_to_id ? (openBlock(), createBlock("p", {
                            key: 0,
                            class: "text-sm text-destructive"
                          }, toDisplayString(unref(form).errors.assigned_to_id), 1)) : createCommentVNode("", true)
                        ]),
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "priority" }, {
                            default: withCtx(() => [
                              createTextVNode("Priority")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$G), {
                            modelValue: unref(form).priority,
                            "onUpdate:modelValue": ($event) => unref(form).priority = $event
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$B), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$F), null, {
                                default: withCtx(() => [
                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                      key: priority.value,
                                      value: priority.value
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(priority.label), 1)
                                      ]),
                                      _: 2
                                    }, 1032, ["value"]);
                                  }), 128))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["modelValue", "onUpdate:modelValue"])
                        ])
                      ]),
                      createVNode(unref(_sfc_main$1p), {
                        type: "submit",
                        disabled: unref(form).processing
                      }, {
                        default: withCtx(() => [
                          createTextVNode("Add Task")
                        ]),
                        _: 1
                      }, 8, ["disabled"])
                    ], 32)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$t), { class: "sm:max-w-[625px]" }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$r), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$q), null, {
                        default: withCtx(() => [
                          createTextVNode("Create New Task")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode("form", {
                    onSubmit: withModifiers(addTask, ["prevent"]),
                    class: "space-y-4 pt-4"
                  }, [
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "title" }, {
                        default: withCtx(() => [
                          createTextVNode("Task Title")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$1B), {
                        id: "title",
                        modelValue: unref(form).title,
                        "onUpdate:modelValue": ($event) => unref(form).title = $event,
                        placeholder: "e.g., Design the homepage"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      unref(form).errors.title ? (openBlock(), createBlock("p", {
                        key: 0,
                        class: "text-sm text-destructive"
                      }, toDisplayString(unref(form).errors.title), 1)) : createCommentVNode("", true)
                    ]),
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "description" }, {
                        default: withCtx(() => [
                          createTextVNode("Description")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$J), {
                        id: "description",
                        modelValue: unref(form).description,
                        "onUpdate:modelValue": ($event) => unref(form).description = $event,
                        placeholder: "Add more details about the task..."
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    createVNode("div", { class: "grid grid-cols-2 gap-4" }, [
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "due_date" }, {
                          default: withCtx(() => [
                            createTextVNode("Due Date")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1B), {
                          id: "due_date",
                          modelValue: unref(form).due_date,
                          "onUpdate:modelValue": ($event) => unref(form).due_date = $event,
                          type: "date"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "assigned_to_id" }, {
                          default: withCtx(() => [
                            createTextVNode("Assign To")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$G), {
                          modelValue: unref(form).assigned_to_id,
                          "onUpdate:modelValue": ($event) => unref(form).assigned_to_id = $event
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$B), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$F), null, {
                              default: withCtx(() => [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.project.members, (member) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: member.id,
                                    value: member.id
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(member.name), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["modelValue", "onUpdate:modelValue"]),
                        unref(form).errors.assigned_to_id ? (openBlock(), createBlock("p", {
                          key: 0,
                          class: "text-sm text-destructive"
                        }, toDisplayString(unref(form).errors.assigned_to_id), 1)) : createCommentVNode("", true)
                      ]),
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "priority" }, {
                          default: withCtx(() => [
                            createTextVNode("Priority")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$G), {
                          modelValue: unref(form).priority,
                          "onUpdate:modelValue": ($event) => unref(form).priority = $event
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$B), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$F), null, {
                              default: withCtx(() => [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: priority.value,
                                    value: priority.value
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(priority.label), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["modelValue", "onUpdate:modelValue"])
                      ])
                    ]),
                    createVNode(unref(_sfc_main$1p), {
                      type: "submit",
                      disabled: unref(form).processing
                    }, {
                      default: withCtx(() => [
                        createTextVNode("Add Task")
                      ]),
                      _: 1
                    }, 8, ["disabled"])
                  ], 32)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/task/create-task-dialog.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
const _sfc_main$b = {
  __name: "edit-task-dialog",
  __ssrInlineRender: true,
  props: {
    modelValue: Boolean,
    task: Object,
    members: Array,
    taskPriorities: Array
  },
  emits: ["update:modelValue", "submit"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const form = useForm({
      title: "",
      description: "",
      due_date: "",
      assigned_to_id: null,
      priority: null
    });
    watch(
      () => props.task,
      (newTask) => {
        var _a;
        if (newTask) {
          form.title = newTask.title;
          form.description = newTask.description;
          form.due_date = newTask.due_date;
          form.assigned_to_id = ((_a = newTask.assigned_user) == null ? void 0 : _a.id) || null;
          form.priority = newTask.priority.value;
        }
      },
      { immediate: true }
    );
    const submit = () => {
      emit("submit", form);
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$v), mergeProps({
        open: __props.modelValue,
        "onUpdate:open": (value) => emit("update:modelValue", value)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$t), { class: "sm:max-w-[625px]" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$r), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$q), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Edit Task`);
                            } else {
                              return [
                                createTextVNode("Edit Task")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$q), null, {
                            default: withCtx(() => [
                              createTextVNode("Edit Task")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`<form class="space-y-4 pt-4"${_scopeId2}><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "edit-title" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Task Title`);
                      } else {
                        return [
                          createTextVNode("Task Title")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "edit-title",
                    modelValue: unref(form).title,
                    "onUpdate:modelValue": ($event) => unref(form).title = $event
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "edit-description" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Description`);
                      } else {
                        return [
                          createTextVNode("Description")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$J), {
                    id: "edit-description",
                    modelValue: unref(form).description,
                    "onUpdate:modelValue": ($event) => unref(form).description = $event
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><div class="grid grid-cols-2 gap-4"${_scopeId2}><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "edit-due_date" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Due Date`);
                      } else {
                        return [
                          createTextVNode("Due Date")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "edit-due_date",
                    modelValue: unref(form).due_date,
                    "onUpdate:modelValue": ($event) => unref(form).due_date = $event,
                    type: "date"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "edit-assigned_to_id" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Assign To`);
                      } else {
                        return [
                          createTextVNode("Assign To")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$G), {
                    modelValue: unref(form).assigned_to_id,
                    "onUpdate:modelValue": ($event) => unref(form).assigned_to_id = $event
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$B), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Select a member" }, null, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$F), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`<!--[-->`);
                              ssrRenderList(__props.members, (member) => {
                                _push5(ssrRenderComponent(unref(_sfc_main$E), {
                                  key: member.id,
                                  value: member.id
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(`${ssrInterpolate(member.name)}`);
                                    } else {
                                      return [
                                        createTextVNode(toDisplayString(member.name), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              });
                              _push5(`<!--]-->`);
                            } else {
                              return [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.members, (member) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: member.id,
                                    value: member.id
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(member.name), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$B), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$F), null, {
                            default: withCtx(() => [
                              (openBlock(true), createBlock(Fragment, null, renderList(__props.members, (member) => {
                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                  key: member.id,
                                  value: member.id
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(member.name), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["value"]);
                              }), 128))
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div><div class="space-y-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { for: "edit-priority" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Priority`);
                      } else {
                        return [
                          createTextVNode("Priority")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$G), {
                    modelValue: unref(form).priority,
                    "onUpdate:modelValue": ($event) => unref(form).priority = $event
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$B), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Select priority" }, null, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$F), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`<!--[-->`);
                              ssrRenderList(__props.taskPriorities, (priority) => {
                                _push5(ssrRenderComponent(unref(_sfc_main$E), {
                                  key: priority.value,
                                  value: priority.value
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(`${ssrInterpolate(priority.label)}`);
                                    } else {
                                      return [
                                        createTextVNode(toDisplayString(priority.label), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              });
                              _push5(`<!--]-->`);
                            } else {
                              return [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: priority.value,
                                    value: priority.value
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(priority.label), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$B), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$F), null, {
                            default: withCtx(() => [
                              (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                  key: priority.value,
                                  value: priority.value
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(priority.label), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["value"]);
                              }), 128))
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div></div>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    type: "submit",
                    disabled: unref(form).processing
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Save Changes`);
                      } else {
                        return [
                          createTextVNode("Save Changes")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</form>`);
                } else {
                  return [
                    createVNode(unref(_sfc_main$r), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$q), null, {
                          default: withCtx(() => [
                            createTextVNode("Edit Task")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode("form", {
                      onSubmit: withModifiers(submit, ["prevent"]),
                      class: "space-y-4 pt-4"
                    }, [
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "edit-title" }, {
                          default: withCtx(() => [
                            createTextVNode("Task Title")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1B), {
                          id: "edit-title",
                          modelValue: unref(form).title,
                          "onUpdate:modelValue": ($event) => unref(form).title = $event
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "edit-description" }, {
                          default: withCtx(() => [
                            createTextVNode("Description")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$J), {
                          id: "edit-description",
                          modelValue: unref(form).description,
                          "onUpdate:modelValue": ($event) => unref(form).description = $event
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      createVNode("div", { class: "grid grid-cols-2 gap-4" }, [
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "edit-due_date" }, {
                            default: withCtx(() => [
                              createTextVNode("Due Date")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "edit-due_date",
                            modelValue: unref(form).due_date,
                            "onUpdate:modelValue": ($event) => unref(form).due_date = $event,
                            type: "date"
                          }, null, 8, ["modelValue", "onUpdate:modelValue"])
                        ]),
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "edit-assigned_to_id" }, {
                            default: withCtx(() => [
                              createTextVNode("Assign To")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$G), {
                            modelValue: unref(form).assigned_to_id,
                            "onUpdate:modelValue": ($event) => unref(form).assigned_to_id = $event
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$B), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$F), null, {
                                default: withCtx(() => [
                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.members, (member) => {
                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                      key: member.id,
                                      value: member.id
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(member.name), 1)
                                      ]),
                                      _: 2
                                    }, 1032, ["value"]);
                                  }), 128))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["modelValue", "onUpdate:modelValue"])
                        ]),
                        createVNode("div", { class: "space-y-2" }, [
                          createVNode(unref(_sfc_main$L), { for: "edit-priority" }, {
                            default: withCtx(() => [
                              createTextVNode("Priority")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$G), {
                            modelValue: unref(form).priority,
                            "onUpdate:modelValue": ($event) => unref(form).priority = $event
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$B), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$F), null, {
                                default: withCtx(() => [
                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                      key: priority.value,
                                      value: priority.value
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(priority.label), 1)
                                      ]),
                                      _: 2
                                    }, 1032, ["value"]);
                                  }), 128))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["modelValue", "onUpdate:modelValue"])
                        ])
                      ]),
                      createVNode(unref(_sfc_main$1p), {
                        type: "submit",
                        disabled: unref(form).processing
                      }, {
                        default: withCtx(() => [
                          createTextVNode("Save Changes")
                        ]),
                        _: 1
                      }, 8, ["disabled"])
                    ], 32)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$t), { class: "sm:max-w-[625px]" }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$r), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$q), null, {
                        default: withCtx(() => [
                          createTextVNode("Edit Task")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode("form", {
                    onSubmit: withModifiers(submit, ["prevent"]),
                    class: "space-y-4 pt-4"
                  }, [
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "edit-title" }, {
                        default: withCtx(() => [
                          createTextVNode("Task Title")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$1B), {
                        id: "edit-title",
                        modelValue: unref(form).title,
                        "onUpdate:modelValue": ($event) => unref(form).title = $event
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode(unref(_sfc_main$L), { for: "edit-description" }, {
                        default: withCtx(() => [
                          createTextVNode("Description")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$J), {
                        id: "edit-description",
                        modelValue: unref(form).description,
                        "onUpdate:modelValue": ($event) => unref(form).description = $event
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    createVNode("div", { class: "grid grid-cols-2 gap-4" }, [
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "edit-due_date" }, {
                          default: withCtx(() => [
                            createTextVNode("Due Date")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1B), {
                          id: "edit-due_date",
                          modelValue: unref(form).due_date,
                          "onUpdate:modelValue": ($event) => unref(form).due_date = $event,
                          type: "date"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "edit-assigned_to_id" }, {
                          default: withCtx(() => [
                            createTextVNode("Assign To")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$G), {
                          modelValue: unref(form).assigned_to_id,
                          "onUpdate:modelValue": ($event) => unref(form).assigned_to_id = $event
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$B), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select a member" })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$F), null, {
                              default: withCtx(() => [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.members, (member) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: member.id,
                                    value: member.id
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(member.name), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      createVNode("div", { class: "space-y-2" }, [
                        createVNode(unref(_sfc_main$L), { for: "edit-priority" }, {
                          default: withCtx(() => [
                            createTextVNode("Priority")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$G), {
                          modelValue: unref(form).priority,
                          "onUpdate:modelValue": ($event) => unref(form).priority = $event
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$B), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$A), { placeholder: "Select priority" })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$F), null, {
                              default: withCtx(() => [
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: priority.value,
                                    value: priority.value
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(priority.label), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["modelValue", "onUpdate:modelValue"])
                      ])
                    ]),
                    createVNode(unref(_sfc_main$1p), {
                      type: "submit",
                      disabled: unref(form).processing
                    }, {
                      default: withCtx(() => [
                        createTextVNode("Save Changes")
                      ]),
                      _: 1
                    }, 8, ["disabled"])
                  ], 32)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/task/edit-task-dialog.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
class DateHelper {
  formatDate(dateString) {
    if (!dateString) return "N/A";
    try {
      return format(parseISO(dateString), "MMM d");
    } catch (e) {
      return dateString;
    }
  }
}
const IN_PROGRESS$1 = 2;
const COMPLETED$1 = 3;
const URGENT = 4;
const HIGH = 3;
const MEDIUM = 2;
class TaskHelper {
  getStatusLabel(status) {
    switch (status) {
      case COMPLETED$1:
        return "Completed";
      case IN_PROGRESS$1:
        return "In Progress";
      default:
        return "To-Do";
    }
  }
  getStatusVariant(status) {
    switch (status) {
      case COMPLETED$1:
        return "outline";
      case IN_PROGRESS$1:
        return "primary";
      default:
        return "secondary";
    }
  }
  getPriorityLabel(priority) {
    switch (priority) {
      case URGENT:
        return "Urgent";
      case HIGH:
        return "High";
      case MEDIUM:
        return "Medium";
      default:
        return "Low";
    }
  }
  getPriorityVariant(priority) {
    switch (priority) {
      case URGENT:
        return "destructive";
      case HIGH:
        return "destructive";
      case MEDIUM:
        return "secondary";
      default:
        return "outline";
    }
  }
}
const _sfc_main$a = {
  __name: "task-list-view",
  __ssrInlineRender: true,
  props: {
    tasks: Array,
    taskStatuses: Array,
    taskPriorities: Array
  },
  emits: ["editTask", "deleteTask", "updateTask"],
  setup(__props, { emit: __emit }) {
    const emit = __emit;
    const dateHelper = new DateHelper();
    const taskHelper = new TaskHelper();
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(_sfc_main$T), _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$O), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$Q), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Task`);
                            } else {
                              return [
                                createTextVNode("Task")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Assigned To`);
                            } else {
                              return [
                                createTextVNode("Assigned To")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Due Date`);
                            } else {
                              return [
                                createTextVNode("Due Date")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Status`);
                            } else {
                              return [
                                createTextVNode("Status")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$P), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Priority`);
                            } else {
                              return [
                                createTextVNode("Priority")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$P), { class: "text-right" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Actions`);
                            } else {
                              return [
                                createTextVNode("Actions")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Task")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Assigned To")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Due Date")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Status")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$P), null, {
                            default: withCtx(() => [
                              createTextVNode("Priority")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$P), { class: "text-right" }, {
                            default: withCtx(() => [
                              createTextVNode("Actions")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$Q), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Task")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Assigned To")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Due Date")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Status")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$P), null, {
                          default: withCtx(() => [
                            createTextVNode("Priority")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$P), { class: "text-right" }, {
                          default: withCtx(() => [
                            createTextVNode("Actions")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$S), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  if (__props.tasks.length > 0) {
                    _push3(`<!--[-->`);
                    ssrRenderList(__props.tasks, (task) => {
                      _push3(ssrRenderComponent(unref(_sfc_main$Q), {
                        key: task.id
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(ssrRenderComponent(unref(_sfc_main$R), { class: "font-medium" }, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(`${ssrInterpolate(task.title)}`);
                                } else {
                                  return [
                                    createTextVNode(toDisplayString(task.title), 1)
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                            _push4(ssrRenderComponent(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                var _a, _b;
                                if (_push5) {
                                  _push5(`${ssrInterpolate(((_a = task.assigned_user) == null ? void 0 : _a.name) || "Unassigned")}`);
                                } else {
                                  return [
                                    createTextVNode(toDisplayString(((_b = task.assigned_user) == null ? void 0 : _b.name) || "Unassigned"), 1)
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                            _push4(ssrRenderComponent(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(`${ssrInterpolate(unref(dateHelper).formatDate(task.due_date))}`);
                                } else {
                                  return [
                                    createTextVNode(toDisplayString(unref(dateHelper).formatDate(task.due_date)), 1)
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                            _push4(ssrRenderComponent(unref(_sfc_main$R), null, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(ssrRenderComponent(unref(_sfc_main$G), {
                                    "model-value": task.status.value,
                                    "onUpdate:modelValue": (newStatus) => emit("updateTask", task, { status: newStatus })
                                  }, {
                                    default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                      if (_push6) {
                                        _push6(ssrRenderComponent(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(ssrRenderComponent(unref(_sfc_main$A), {
                                                placeholder: unref(taskHelper).getStatusLabel(task.status)
                                              }, null, _parent7, _scopeId6));
                                            } else {
                                              return [
                                                createVNode(unref(_sfc_main$A), {
                                                  placeholder: unref(taskHelper).getStatusLabel(task.status)
                                                }, null, 8, ["placeholder"])
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                        _push6(ssrRenderComponent(unref(_sfc_main$F), null, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(`<!--[-->`);
                                              ssrRenderList(__props.taskStatuses, (status) => {
                                                _push7(ssrRenderComponent(unref(_sfc_main$E), {
                                                  key: status.value,
                                                  value: status.value
                                                }, {
                                                  default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                    if (_push8) {
                                                      _push8(`${ssrInterpolate(status.label)}`);
                                                    } else {
                                                      return [
                                                        createTextVNode(toDisplayString(status.label), 1)
                                                      ];
                                                    }
                                                  }),
                                                  _: 2
                                                }, _parent7, _scopeId6));
                                              });
                                              _push7(`<!--]-->`);
                                            } else {
                                              return [
                                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                                    key: status.value,
                                                    value: status.value
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString(status.label), 1)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["value"]);
                                                }), 128))
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                      } else {
                                        return [
                                          createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$A), {
                                                placeholder: unref(taskHelper).getStatusLabel(task.status)
                                              }, null, 8, ["placeholder"])
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$F), null, {
                                            default: withCtx(() => [
                                              (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                                  key: status.value,
                                                  value: status.value
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(status.label), 1)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["value"]);
                                              }), 128))
                                            ]),
                                            _: 1
                                          })
                                        ];
                                      }
                                    }),
                                    _: 2
                                  }, _parent5, _scopeId4));
                                } else {
                                  return [
                                    createVNode(unref(_sfc_main$G), {
                                      "model-value": task.status.value,
                                      "onUpdate:modelValue": (newStatus) => emit("updateTask", task, { status: newStatus })
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$A), {
                                              placeholder: unref(taskHelper).getStatusLabel(task.status)
                                            }, null, 8, ["placeholder"])
                                          ]),
                                          _: 2
                                        }, 1024),
                                        createVNode(unref(_sfc_main$F), null, {
                                          default: withCtx(() => [
                                            (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                              return openBlock(), createBlock(unref(_sfc_main$E), {
                                                key: status.value,
                                                value: status.value
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(status.label), 1)
                                                ]),
                                                _: 2
                                              }, 1032, ["value"]);
                                            }), 128))
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 2
                                    }, 1032, ["model-value", "onUpdate:modelValue"])
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                            _push4(ssrRenderComponent(unref(_sfc_main$R), null, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(ssrRenderComponent(unref(_sfc_main$G), {
                                    "model-value": task.priority.value,
                                    "onUpdate:modelValue": (newPriority) => emit("updateTask", task, { priority: newPriority })
                                  }, {
                                    default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                      if (_push6) {
                                        _push6(ssrRenderComponent(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(ssrRenderComponent(unref(_sfc_main$A), {
                                                placeholder: unref(taskHelper).getPriorityLabel(task.priority)
                                              }, null, _parent7, _scopeId6));
                                            } else {
                                              return [
                                                createVNode(unref(_sfc_main$A), {
                                                  placeholder: unref(taskHelper).getPriorityLabel(task.priority)
                                                }, null, 8, ["placeholder"])
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                        _push6(ssrRenderComponent(unref(_sfc_main$F), null, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(`<!--[-->`);
                                              ssrRenderList(__props.taskPriorities, (priority) => {
                                                _push7(ssrRenderComponent(unref(_sfc_main$E), {
                                                  key: priority.value,
                                                  value: priority.value
                                                }, {
                                                  default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                    if (_push8) {
                                                      _push8(`${ssrInterpolate(priority.label)}`);
                                                    } else {
                                                      return [
                                                        createTextVNode(toDisplayString(priority.label), 1)
                                                      ];
                                                    }
                                                  }),
                                                  _: 2
                                                }, _parent7, _scopeId6));
                                              });
                                              _push7(`<!--]-->`);
                                            } else {
                                              return [
                                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                                    key: priority.value,
                                                    value: priority.value
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString(priority.label), 1)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["value"]);
                                                }), 128))
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                      } else {
                                        return [
                                          createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$A), {
                                                placeholder: unref(taskHelper).getPriorityLabel(task.priority)
                                              }, null, 8, ["placeholder"])
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$F), null, {
                                            default: withCtx(() => [
                                              (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                                  key: priority.value,
                                                  value: priority.value
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(priority.label), 1)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["value"]);
                                              }), 128))
                                            ]),
                                            _: 1
                                          })
                                        ];
                                      }
                                    }),
                                    _: 2
                                  }, _parent5, _scopeId4));
                                } else {
                                  return [
                                    createVNode(unref(_sfc_main$G), {
                                      "model-value": task.priority.value,
                                      "onUpdate:modelValue": (newPriority) => emit("updateTask", task, { priority: newPriority })
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$A), {
                                              placeholder: unref(taskHelper).getPriorityLabel(task.priority)
                                            }, null, 8, ["placeholder"])
                                          ]),
                                          _: 2
                                        }, 1024),
                                        createVNode(unref(_sfc_main$F), null, {
                                          default: withCtx(() => [
                                            (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                              return openBlock(), createBlock(unref(_sfc_main$E), {
                                                key: priority.value,
                                                value: priority.value
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(priority.label), 1)
                                                ]),
                                                _: 2
                                              }, 1032, ["value"]);
                                            }), 128))
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 2
                                    }, 1032, ["model-value", "onUpdate:modelValue"])
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                            _push4(ssrRenderComponent(unref(_sfc_main$R), { class: "text-right" }, {
                              default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                                if (_push5) {
                                  _push5(ssrRenderComponent(unref(_sfc_main$1i), null, {
                                    default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                      if (_push6) {
                                        _push6(ssrRenderComponent(unref(_sfc_main$1b), { "as-child": "" }, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(ssrRenderComponent(unref(_sfc_main$1p), {
                                                variant: "ghost",
                                                size: "icon",
                                                class: "h-8 w-8"
                                              }, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(ssrRenderComponent(unref(MoreHorizontal), { class: "h-4 w-4" }, null, _parent8, _scopeId7));
                                                  } else {
                                                    return [
                                                      createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                            } else {
                                              return [
                                                createVNode(unref(_sfc_main$1p), {
                                                  variant: "ghost",
                                                  size: "icon",
                                                  class: "h-8 w-8"
                                                }, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                                  ]),
                                                  _: 1
                                                })
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                        _push6(ssrRenderComponent(unref(_sfc_main$1h), null, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(ssrRenderComponent(unref(_sfc_main$1f), {
                                                onClick: ($event) => emit("editTask", task)
                                              }, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(ssrRenderComponent(unref(Pencil), { class: "mr-2 h-4 w-4" }, null, _parent8, _scopeId7));
                                                    _push8(`Edit `);
                                                  } else {
                                                    return [
                                                      createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                                      createTextVNode("Edit ")
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                              _push7(ssrRenderComponent(unref(_sfc_main$m), null, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(ssrRenderComponent(unref(_sfc_main$e), { "as-child": "" }, {
                                                      default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                        if (_push9) {
                                                          _push9(ssrRenderComponent(unref(_sfc_main$1f), {
                                                            onSelect: () => {
                                                            },
                                                            class: "text-destructive"
                                                          }, {
                                                            default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                              if (_push10) {
                                                                _push10(ssrRenderComponent(unref(Trash2), { class: "mr-2 h-4 w-4" }, null, _parent10, _scopeId9));
                                                                _push10(`Delete `);
                                                              } else {
                                                                return [
                                                                  createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                                  createTextVNode("Delete ")
                                                                ];
                                                              }
                                                            }),
                                                            _: 2
                                                          }, _parent9, _scopeId8));
                                                        } else {
                                                          return [
                                                            createVNode(unref(_sfc_main$1f), {
                                                              onSelect: withModifiers(() => {
                                                              }, ["prevent"]),
                                                              class: "text-destructive"
                                                            }, {
                                                              default: withCtx(() => [
                                                                createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                                createTextVNode("Delete ")
                                                              ]),
                                                              _: 1
                                                            }, 8, ["onSelect"])
                                                          ];
                                                        }
                                                      }),
                                                      _: 2
                                                    }, _parent8, _scopeId7));
                                                    _push8(ssrRenderComponent(unref(_sfc_main$j), null, {
                                                      default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                        if (_push9) {
                                                          _push9(ssrRenderComponent(unref(_sfc_main$g), null, {
                                                            default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                              if (_push10) {
                                                                _push10(ssrRenderComponent(unref(_sfc_main$f), null, {
                                                                  default: withCtx((_10, _push11, _parent11, _scopeId10) => {
                                                                    if (_push11) {
                                                                      _push11(`Delete Task?`);
                                                                    } else {
                                                                      return [
                                                                        createTextVNode("Delete Task?")
                                                                      ];
                                                                    }
                                                                  }),
                                                                  _: 2
                                                                }, _parent10, _scopeId9));
                                                                _push10(ssrRenderComponent(unref(_sfc_main$i), null, {
                                                                  default: withCtx((_10, _push11, _parent11, _scopeId10) => {
                                                                    if (_push11) {
                                                                      _push11(` This action cannot be undone. `);
                                                                    } else {
                                                                      return [
                                                                        createTextVNode(" This action cannot be undone. ")
                                                                      ];
                                                                    }
                                                                  }),
                                                                  _: 2
                                                                }, _parent10, _scopeId9));
                                                              } else {
                                                                return [
                                                                  createVNode(unref(_sfc_main$f), null, {
                                                                    default: withCtx(() => [
                                                                      createTextVNode("Delete Task?")
                                                                    ]),
                                                                    _: 1
                                                                  }),
                                                                  createVNode(unref(_sfc_main$i), null, {
                                                                    default: withCtx(() => [
                                                                      createTextVNode(" This action cannot be undone. ")
                                                                    ]),
                                                                    _: 1
                                                                  })
                                                                ];
                                                              }
                                                            }),
                                                            _: 2
                                                          }, _parent9, _scopeId8));
                                                          _push9(ssrRenderComponent(unref(_sfc_main$h), null, {
                                                            default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                              if (_push10) {
                                                                _push10(ssrRenderComponent(unref(_sfc_main$k), null, {
                                                                  default: withCtx((_10, _push11, _parent11, _scopeId10) => {
                                                                    if (_push11) {
                                                                      _push11(`Cancel`);
                                                                    } else {
                                                                      return [
                                                                        createTextVNode("Cancel")
                                                                      ];
                                                                    }
                                                                  }),
                                                                  _: 2
                                                                }, _parent10, _scopeId9));
                                                                _push10(ssrRenderComponent(unref(_sfc_main$l), {
                                                                  onClick: ($event) => emit("deleteTask", task)
                                                                }, {
                                                                  default: withCtx((_10, _push11, _parent11, _scopeId10) => {
                                                                    if (_push11) {
                                                                      _push11(` Continue `);
                                                                    } else {
                                                                      return [
                                                                        createTextVNode(" Continue ")
                                                                      ];
                                                                    }
                                                                  }),
                                                                  _: 2
                                                                }, _parent10, _scopeId9));
                                                              } else {
                                                                return [
                                                                  createVNode(unref(_sfc_main$k), null, {
                                                                    default: withCtx(() => [
                                                                      createTextVNode("Cancel")
                                                                    ]),
                                                                    _: 1
                                                                  }),
                                                                  createVNode(unref(_sfc_main$l), {
                                                                    onClick: ($event) => emit("deleteTask", task)
                                                                  }, {
                                                                    default: withCtx(() => [
                                                                      createTextVNode(" Continue ")
                                                                    ]),
                                                                    _: 2
                                                                  }, 1032, ["onClick"])
                                                                ];
                                                              }
                                                            }),
                                                            _: 2
                                                          }, _parent9, _scopeId8));
                                                        } else {
                                                          return [
                                                            createVNode(unref(_sfc_main$g), null, {
                                                              default: withCtx(() => [
                                                                createVNode(unref(_sfc_main$f), null, {
                                                                  default: withCtx(() => [
                                                                    createTextVNode("Delete Task?")
                                                                  ]),
                                                                  _: 1
                                                                }),
                                                                createVNode(unref(_sfc_main$i), null, {
                                                                  default: withCtx(() => [
                                                                    createTextVNode(" This action cannot be undone. ")
                                                                  ]),
                                                                  _: 1
                                                                })
                                                              ]),
                                                              _: 1
                                                            }),
                                                            createVNode(unref(_sfc_main$h), null, {
                                                              default: withCtx(() => [
                                                                createVNode(unref(_sfc_main$k), null, {
                                                                  default: withCtx(() => [
                                                                    createTextVNode("Cancel")
                                                                  ]),
                                                                  _: 1
                                                                }),
                                                                createVNode(unref(_sfc_main$l), {
                                                                  onClick: ($event) => emit("deleteTask", task)
                                                                }, {
                                                                  default: withCtx(() => [
                                                                    createTextVNode(" Continue ")
                                                                  ]),
                                                                  _: 2
                                                                }, 1032, ["onClick"])
                                                              ]),
                                                              _: 2
                                                            }, 1024)
                                                          ];
                                                        }
                                                      }),
                                                      _: 2
                                                    }, _parent8, _scopeId7));
                                                  } else {
                                                    return [
                                                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                        default: withCtx(() => [
                                                          createVNode(unref(_sfc_main$1f), {
                                                            onSelect: withModifiers(() => {
                                                            }, ["prevent"]),
                                                            class: "text-destructive"
                                                          }, {
                                                            default: withCtx(() => [
                                                              createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                              createTextVNode("Delete ")
                                                            ]),
                                                            _: 1
                                                          }, 8, ["onSelect"])
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$j), null, {
                                                        default: withCtx(() => [
                                                          createVNode(unref(_sfc_main$g), null, {
                                                            default: withCtx(() => [
                                                              createVNode(unref(_sfc_main$f), null, {
                                                                default: withCtx(() => [
                                                                  createTextVNode("Delete Task?")
                                                                ]),
                                                                _: 1
                                                              }),
                                                              createVNode(unref(_sfc_main$i), null, {
                                                                default: withCtx(() => [
                                                                  createTextVNode(" This action cannot be undone. ")
                                                                ]),
                                                                _: 1
                                                              })
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$h), null, {
                                                            default: withCtx(() => [
                                                              createVNode(unref(_sfc_main$k), null, {
                                                                default: withCtx(() => [
                                                                  createTextVNode("Cancel")
                                                                ]),
                                                                _: 1
                                                              }),
                                                              createVNode(unref(_sfc_main$l), {
                                                                onClick: ($event) => emit("deleteTask", task)
                                                              }, {
                                                                default: withCtx(() => [
                                                                  createTextVNode(" Continue ")
                                                                ]),
                                                                _: 2
                                                              }, 1032, ["onClick"])
                                                            ]),
                                                            _: 2
                                                          }, 1024)
                                                        ]),
                                                        _: 2
                                                      }, 1024)
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                            } else {
                                              return [
                                                createVNode(unref(_sfc_main$1f), {
                                                  onClick: ($event) => emit("editTask", task)
                                                }, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                                    createTextVNode("Edit ")
                                                  ]),
                                                  _: 2
                                                }, 1032, ["onClick"]),
                                                createVNode(unref(_sfc_main$m), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$1f), {
                                                          onSelect: withModifiers(() => {
                                                          }, ["prevent"]),
                                                          class: "text-destructive"
                                                        }, {
                                                          default: withCtx(() => [
                                                            createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                            createTextVNode("Delete ")
                                                          ]),
                                                          _: 1
                                                        }, 8, ["onSelect"])
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$j), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$g), null, {
                                                          default: withCtx(() => [
                                                            createVNode(unref(_sfc_main$f), null, {
                                                              default: withCtx(() => [
                                                                createTextVNode("Delete Task?")
                                                              ]),
                                                              _: 1
                                                            }),
                                                            createVNode(unref(_sfc_main$i), null, {
                                                              default: withCtx(() => [
                                                                createTextVNode(" This action cannot be undone. ")
                                                              ]),
                                                              _: 1
                                                            })
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$h), null, {
                                                          default: withCtx(() => [
                                                            createVNode(unref(_sfc_main$k), null, {
                                                              default: withCtx(() => [
                                                                createTextVNode("Cancel")
                                                              ]),
                                                              _: 1
                                                            }),
                                                            createVNode(unref(_sfc_main$l), {
                                                              onClick: ($event) => emit("deleteTask", task)
                                                            }, {
                                                              default: withCtx(() => [
                                                                createTextVNode(" Continue ")
                                                              ]),
                                                              _: 2
                                                            }, 1032, ["onClick"])
                                                          ]),
                                                          _: 2
                                                        }, 1024)
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                      } else {
                                        return [
                                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$1p), {
                                                variant: "ghost",
                                                size: "icon",
                                                class: "h-8 w-8"
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$1h), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$1f), {
                                                onClick: ($event) => emit("editTask", task)
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                                  createTextVNode("Edit ")
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick"]),
                                              createVNode(unref(_sfc_main$m), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$1f), {
                                                        onSelect: withModifiers(() => {
                                                        }, ["prevent"]),
                                                        class: "text-destructive"
                                                      }, {
                                                        default: withCtx(() => [
                                                          createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                          createTextVNode("Delete ")
                                                        ]),
                                                        _: 1
                                                      }, 8, ["onSelect"])
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$j), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$g), null, {
                                                        default: withCtx(() => [
                                                          createVNode(unref(_sfc_main$f), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Delete Task?")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$i), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" This action cannot be undone. ")
                                                            ]),
                                                            _: 1
                                                          })
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$h), null, {
                                                        default: withCtx(() => [
                                                          createVNode(unref(_sfc_main$k), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Cancel")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$l), {
                                                            onClick: ($event) => emit("deleteTask", task)
                                                          }, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" Continue ")
                                                            ]),
                                                            _: 2
                                                          }, 1032, ["onClick"])
                                                        ]),
                                                        _: 2
                                                      }, 1024)
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ];
                                      }
                                    }),
                                    _: 2
                                  }, _parent5, _scopeId4));
                                } else {
                                  return [
                                    createVNode(unref(_sfc_main$1i), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$1p), {
                                              variant: "ghost",
                                              size: "icon",
                                              class: "h-8 w-8"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                              ]),
                                              _: 1
                                            })
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$1h), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$1f), {
                                              onClick: ($event) => emit("editTask", task)
                                            }, {
                                              default: withCtx(() => [
                                                createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                                createTextVNode("Edit ")
                                              ]),
                                              _: 2
                                            }, 1032, ["onClick"]),
                                            createVNode(unref(_sfc_main$m), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$1f), {
                                                      onSelect: withModifiers(() => {
                                                      }, ["prevent"]),
                                                      class: "text-destructive"
                                                    }, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                        createTextVNode("Delete ")
                                                      ]),
                                                      _: 1
                                                    }, 8, ["onSelect"])
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$j), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$g), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$f), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Delete Task?")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$i), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" This action cannot be undone. ")
                                                          ]),
                                                          _: 1
                                                        })
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$h), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$k), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Cancel")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$l), {
                                                          onClick: ($event) => emit("deleteTask", task)
                                                        }, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" Continue ")
                                                          ]),
                                                          _: 2
                                                        }, 1032, ["onClick"])
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ];
                                }
                              }),
                              _: 2
                            }, _parent4, _scopeId3));
                          } else {
                            return [
                              createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(task.title), 1)
                                ]),
                                _: 2
                              }, 1024),
                              createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                default: withCtx(() => {
                                  var _a;
                                  return [
                                    createTextVNode(toDisplayString(((_a = task.assigned_user) == null ? void 0 : _a.name) || "Unassigned"), 1)
                                  ];
                                }),
                                _: 2
                              }, 1024),
                              createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(unref(dateHelper).formatDate(task.due_date)), 1)
                                ]),
                                _: 2
                              }, 1024),
                              createVNode(unref(_sfc_main$R), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$G), {
                                    "model-value": task.status.value,
                                    "onUpdate:modelValue": (newStatus) => emit("updateTask", task, { status: newStatus })
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$A), {
                                            placeholder: unref(taskHelper).getStatusLabel(task.status)
                                          }, null, 8, ["placeholder"])
                                        ]),
                                        _: 2
                                      }, 1024),
                                      createVNode(unref(_sfc_main$F), null, {
                                        default: withCtx(() => [
                                          (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                            return openBlock(), createBlock(unref(_sfc_main$E), {
                                              key: status.value,
                                              value: status.value
                                            }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(status.label), 1)
                                              ]),
                                              _: 2
                                            }, 1032, ["value"]);
                                          }), 128))
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 2
                                  }, 1032, ["model-value", "onUpdate:modelValue"])
                                ]),
                                _: 2
                              }, 1024),
                              createVNode(unref(_sfc_main$R), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$G), {
                                    "model-value": task.priority.value,
                                    "onUpdate:modelValue": (newPriority) => emit("updateTask", task, { priority: newPriority })
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$A), {
                                            placeholder: unref(taskHelper).getPriorityLabel(task.priority)
                                          }, null, 8, ["placeholder"])
                                        ]),
                                        _: 2
                                      }, 1024),
                                      createVNode(unref(_sfc_main$F), null, {
                                        default: withCtx(() => [
                                          (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                            return openBlock(), createBlock(unref(_sfc_main$E), {
                                              key: priority.value,
                                              value: priority.value
                                            }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(priority.label), 1)
                                              ]),
                                              _: 2
                                            }, 1032, ["value"]);
                                          }), 128))
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 2
                                  }, 1032, ["model-value", "onUpdate:modelValue"])
                                ]),
                                _: 2
                              }, 1024),
                              createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1i), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1p), {
                                            variant: "ghost",
                                            size: "icon",
                                            class: "h-8 w-8"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$1h), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1f), {
                                            onClick: ($event) => emit("editTask", task)
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Edit ")
                                            ]),
                                            _: 2
                                          }, 1032, ["onClick"]),
                                          createVNode(unref(_sfc_main$m), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$1f), {
                                                    onSelect: withModifiers(() => {
                                                    }, ["prevent"]),
                                                    class: "text-destructive"
                                                  }, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                      createTextVNode("Delete ")
                                                    ]),
                                                    _: 1
                                                  }, 8, ["onSelect"])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$j), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$g), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$f), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Delete Task?")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$i), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" This action cannot be undone. ")
                                                        ]),
                                                        _: 1
                                                      })
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$h), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$k), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Cancel")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$l), {
                                                        onClick: ($event) => emit("deleteTask", task)
                                                      }, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" Continue ")
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["onClick"])
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent3, _scopeId2));
                    });
                    _push3(`<!--]-->`);
                  } else {
                    _push3(ssrRenderComponent(unref(_sfc_main$Q), null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$R), {
                            colspan: "6",
                            class: "text-center py-12"
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(` No tasks found for the current filters. `);
                              } else {
                                return [
                                  createTextVNode(" No tasks found for the current filters. ")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$R), {
                              colspan: "6",
                              class: "text-center py-12"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" No tasks found for the current filters. ")
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  }
                } else {
                  return [
                    __props.tasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.tasks, (task) => {
                      return openBlock(), createBlock(unref(_sfc_main$Q), {
                        key: task.id
                      }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(task.title), 1)
                            ]),
                            _: 2
                          }, 1024),
                          createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                            default: withCtx(() => {
                              var _a;
                              return [
                                createTextVNode(toDisplayString(((_a = task.assigned_user) == null ? void 0 : _a.name) || "Unassigned"), 1)
                              ];
                            }),
                            _: 2
                          }, 1024),
                          createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(unref(dateHelper).formatDate(task.due_date)), 1)
                            ]),
                            _: 2
                          }, 1024),
                          createVNode(unref(_sfc_main$R), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$G), {
                                "model-value": task.status.value,
                                "onUpdate:modelValue": (newStatus) => emit("updateTask", task, { status: newStatus })
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$A), {
                                        placeholder: unref(taskHelper).getStatusLabel(task.status)
                                      }, null, 8, ["placeholder"])
                                    ]),
                                    _: 2
                                  }, 1024),
                                  createVNode(unref(_sfc_main$F), null, {
                                    default: withCtx(() => [
                                      (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                        return openBlock(), createBlock(unref(_sfc_main$E), {
                                          key: status.value,
                                          value: status.value
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(status.label), 1)
                                          ]),
                                          _: 2
                                        }, 1032, ["value"]);
                                      }), 128))
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 2
                              }, 1032, ["model-value", "onUpdate:modelValue"])
                            ]),
                            _: 2
                          }, 1024),
                          createVNode(unref(_sfc_main$R), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$G), {
                                "model-value": task.priority.value,
                                "onUpdate:modelValue": (newPriority) => emit("updateTask", task, { priority: newPriority })
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$A), {
                                        placeholder: unref(taskHelper).getPriorityLabel(task.priority)
                                      }, null, 8, ["placeholder"])
                                    ]),
                                    _: 2
                                  }, 1024),
                                  createVNode(unref(_sfc_main$F), null, {
                                    default: withCtx(() => [
                                      (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                        return openBlock(), createBlock(unref(_sfc_main$E), {
                                          key: priority.value,
                                          value: priority.value
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(priority.label), 1)
                                          ]),
                                          _: 2
                                        }, 1032, ["value"]);
                                      }), 128))
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 2
                              }, 1032, ["model-value", "onUpdate:modelValue"])
                            ]),
                            _: 2
                          }, 1024),
                          createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1i), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1p), {
                                        variant: "ghost",
                                        size: "icon",
                                        class: "h-8 w-8"
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$1h), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1f), {
                                        onClick: ($event) => emit("editTask", task)
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                          createTextVNode("Edit ")
                                        ]),
                                        _: 2
                                      }, 1032, ["onClick"]),
                                      createVNode(unref(_sfc_main$m), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$1f), {
                                                onSelect: withModifiers(() => {
                                                }, ["prevent"]),
                                                class: "text-destructive"
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                  createTextVNode("Delete ")
                                                ]),
                                                _: 1
                                              }, 8, ["onSelect"])
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$j), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$g), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$f), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Delete Task?")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$i), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" This action cannot be undone. ")
                                                    ]),
                                                    _: 1
                                                  })
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$h), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$k), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Cancel")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$l), {
                                                    onClick: ($event) => emit("deleteTask", task)
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" Continue ")
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["onClick"])
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024);
                    }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$R), {
                          colspan: "6",
                          class: "text-center py-12"
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" No tasks found for the current filters. ")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$O), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$Q), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Task")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Assigned To")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Due Date")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Status")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$P), null, {
                        default: withCtx(() => [
                          createTextVNode("Priority")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$P), { class: "text-right" }, {
                        default: withCtx(() => [
                          createTextVNode("Actions")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$S), null, {
                default: withCtx(() => [
                  __props.tasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.tasks, (task) => {
                    return openBlock(), createBlock(unref(_sfc_main$Q), {
                      key: task.id
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(task.title), 1)
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                          default: withCtx(() => {
                            var _a;
                            return [
                              createTextVNode(toDisplayString(((_a = task.assigned_user) == null ? void 0 : _a.name) || "Unassigned"), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(unref(dateHelper).formatDate(task.due_date)), 1)
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$R), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$G), {
                              "model-value": task.status.value,
                              "onUpdate:modelValue": (newStatus) => emit("updateTask", task, { status: newStatus })
                            }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$A), {
                                      placeholder: unref(taskHelper).getStatusLabel(task.status)
                                    }, null, 8, ["placeholder"])
                                  ]),
                                  _: 2
                                }, 1024),
                                createVNode(unref(_sfc_main$F), null, {
                                  default: withCtx(() => [
                                    (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                      return openBlock(), createBlock(unref(_sfc_main$E), {
                                        key: status.value,
                                        value: status.value
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(status.label), 1)
                                        ]),
                                        _: 2
                                      }, 1032, ["value"]);
                                    }), 128))
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 2
                            }, 1032, ["model-value", "onUpdate:modelValue"])
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$R), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$G), {
                              "model-value": task.priority.value,
                              "onUpdate:modelValue": (newPriority) => emit("updateTask", task, { priority: newPriority })
                            }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$B), { class: "w-[140px]" }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$A), {
                                      placeholder: unref(taskHelper).getPriorityLabel(task.priority)
                                    }, null, 8, ["placeholder"])
                                  ]),
                                  _: 2
                                }, 1024),
                                createVNode(unref(_sfc_main$F), null, {
                                  default: withCtx(() => [
                                    (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                      return openBlock(), createBlock(unref(_sfc_main$E), {
                                        key: priority.value,
                                        value: priority.value
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(priority.label), 1)
                                        ]),
                                        _: 2
                                      }, 1032, ["value"]);
                                    }), 128))
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 2
                            }, 1032, ["model-value", "onUpdate:modelValue"])
                          ]),
                          _: 2
                        }, 1024),
                        createVNode(unref(_sfc_main$R), { class: "text-right" }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$1i), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1p), {
                                      variant: "ghost",
                                      size: "icon",
                                      class: "h-8 w-8"
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$1h), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1f), {
                                      onClick: ($event) => emit("editTask", task)
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                        createTextVNode("Edit ")
                                      ]),
                                      _: 2
                                    }, 1032, ["onClick"]),
                                    createVNode(unref(_sfc_main$m), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$1f), {
                                              onSelect: withModifiers(() => {
                                              }, ["prevent"]),
                                              class: "text-destructive"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                createTextVNode("Delete ")
                                              ]),
                                              _: 1
                                            }, 8, ["onSelect"])
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$j), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$g), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$f), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Delete Task?")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$i), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" This action cannot be undone. ")
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$h), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$k), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Cancel")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$l), {
                                                  onClick: ($event) => emit("deleteTask", task)
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" Continue ")
                                                  ]),
                                                  _: 2
                                                }, 1032, ["onClick"])
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024)
                      ]),
                      _: 2
                    }, 1024);
                  }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$R), {
                        colspan: "6",
                        class: "text-center py-12"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" No tasks found for the current filters. ")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }))
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/task/task-list-view.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
const TODO = 1;
const IN_PROGRESS = 2;
const COMPLETED = 3;
const _sfc_main$9 = {
  __name: "task-board-view",
  __ssrInlineRender: true,
  props: {
    tasks: Array
  },
  emits: ["taskMoved", "editTask", "deleteTask"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const todoTasks = ref([]);
    const inProgressTasks = ref([]);
    const completedTasks = ref([]);
    watch(
      () => props.tasks,
      (newTasks) => {
        todoTasks.value = newTasks.filter((t) => t.status === TODO);
        inProgressTasks.value = newTasks.filter((t) => t.status === IN_PROGRESS);
        completedTasks.value = newTasks.filter((t) => t.status === COMPLETED);
      },
      { immediate: true, deep: true }
    );
    const handleTaskMoved = (event) => {
      const taskId = event.item.dataset.taskId;
      const newStatus = event.to.dataset.statusId;
      emit("taskMoved", { taskId, newStatus });
    };
    const dateHelper = new DateHelper();
    const taskHelper = new TaskHelper();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "grid grid-cols-1 md:grid-cols-3 gap-6" }, _attrs))}><div class="bg-muted/50 p-4 rounded-lg"><h3 class="font-semibold mb-4 text-sm">To-Do · ${ssrInterpolate(todoTasks.value.length)}</h3>`);
      _push(ssrRenderComponent(unref(VueDraggable), {
        modelValue: todoTasks.value,
        "onUpdate:modelValue": ($event) => todoTasks.value = $event,
        group: "tasks",
        class: "space-y-3 min-h-[100px]",
        onEnd: handleTaskMoved,
        "data-status-id": 1
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<!--[-->`);
            ssrRenderList(todoTasks.value, (element) => {
              _push2(`<div${ssrRenderAttr("data-task-id", element.id)} class="cursor-grab group relative"${_scopeId}>`);
              _push2(ssrRenderComponent(unref(_sfc_main$_), { class: "bg-background shadow-sm hover:shadow-md transition-shadow" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(unref(_sfc_main$1i), null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "icon",
                                  class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(ssrRenderComponent(unref(MoreHorizontal), { class: "h-4 w-4" }, null, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1p), {
                                    variant: "ghost",
                                    size: "icon",
                                    class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(unref(DropdownMenuPortal), null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1h), null, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(ssrRenderComponent(unref(_sfc_main$1f), {
                                        onClick: ($event) => emit("editTask", element)
                                      }, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(Pencil), { class: "mr-2 h-4 w-4" }, null, _parent7, _scopeId6));
                                            _push7(`Edit `);
                                          } else {
                                            return [
                                              createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Edit ")
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                      _push6(ssrRenderComponent(unref(_sfc_main$m), null, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(_sfc_main$e), { "as-child": "" }, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$1f), {
                                                    onSelect: () => {
                                                    },
                                                    class: "text-destructive"
                                                  }, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(Trash2), { class: "mr-2 h-4 w-4" }, null, _parent9, _scopeId8));
                                                        _push9(`Delete `);
                                                      } else {
                                                        return [
                                                          createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                          createTextVNode("Delete ")
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                } else {
                                                  return [
                                                    createVNode(unref(_sfc_main$1f), {
                                                      onSelect: withModifiers(() => {
                                                      }, ["prevent"]),
                                                      class: "text-destructive"
                                                    }, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                        createTextVNode("Delete ")
                                                      ]),
                                                      _: 1
                                                    }, 8, ["onSelect"])
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent7, _scopeId6));
                                            _push7(ssrRenderComponent(unref(_sfc_main$j), null, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$g), null, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(_sfc_main$f), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(`Delete Task?`);
                                                            } else {
                                                              return [
                                                                createTextVNode("Delete Task?")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                        _push9(ssrRenderComponent(unref(_sfc_main$i), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(` This action cannot be undone. `);
                                                            } else {
                                                              return [
                                                                createTextVNode(" This action cannot be undone. ")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                      } else {
                                                        return [
                                                          createVNode(unref(_sfc_main$f), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Delete Task?")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$i), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" This action cannot be undone. ")
                                                            ]),
                                                            _: 1
                                                          })
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                  _push8(ssrRenderComponent(unref(_sfc_main$h), null, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(_sfc_main$k), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(`Cancel`);
                                                            } else {
                                                              return [
                                                                createTextVNode("Cancel")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                        _push9(ssrRenderComponent(unref(_sfc_main$l), {
                                                          onClick: ($event) => emit("deleteTask", element)
                                                        }, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(` Continue `);
                                                            } else {
                                                              return [
                                                                createTextVNode(" Continue ")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                      } else {
                                                        return [
                                                          createVNode(unref(_sfc_main$k), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Cancel")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$l), {
                                                            onClick: ($event) => emit("deleteTask", element)
                                                          }, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" Continue ")
                                                            ]),
                                                            _: 2
                                                          }, 1032, ["onClick"])
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                } else {
                                                  return [
                                                    createVNode(unref(_sfc_main$g), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$f), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Delete Task?")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$i), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" This action cannot be undone. ")
                                                          ]),
                                                          _: 1
                                                        })
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$h), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$k), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Cancel")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$l), {
                                                          onClick: ($event) => emit("deleteTask", element)
                                                        }, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" Continue ")
                                                          ]),
                                                          _: 2
                                                        }, 1032, ["onClick"])
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent7, _scopeId6));
                                          } else {
                                            return [
                                              createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$1f), {
                                                    onSelect: withModifiers(() => {
                                                    }, ["prevent"]),
                                                    class: "text-destructive"
                                                  }, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                      createTextVNode("Delete ")
                                                    ]),
                                                    _: 1
                                                  }, 8, ["onSelect"])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$j), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$g), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$f), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Delete Task?")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$i), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" This action cannot be undone. ")
                                                        ]),
                                                        _: 1
                                                      })
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$h), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$k), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Cancel")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$l), {
                                                        onClick: ($event) => emit("deleteTask", element)
                                                      }, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" Continue ")
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["onClick"])
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode(unref(_sfc_main$1f), {
                                          onClick: ($event) => emit("editTask", element)
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                            createTextVNode("Edit ")
                                          ]),
                                          _: 2
                                        }, 1032, ["onClick"]),
                                        createVNode(unref(_sfc_main$m), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$1f), {
                                                  onSelect: withModifiers(() => {
                                                  }, ["prevent"]),
                                                  class: "text-destructive"
                                                }, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                    createTextVNode("Delete ")
                                                  ]),
                                                  _: 1
                                                }, 8, ["onSelect"])
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$j), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$g), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$f), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode("Delete Task?")
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$i), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode(" This action cannot be undone. ")
                                                      ]),
                                                      _: 1
                                                    })
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$h), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$k), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode("Cancel")
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$l), {
                                                      onClick: ($event) => emit("deleteTask", element)
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(" Continue ")
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["onClick"])
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1h), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1f), {
                                        onClick: ($event) => emit("editTask", element)
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                          createTextVNode("Edit ")
                                        ]),
                                        _: 2
                                      }, 1032, ["onClick"]),
                                      createVNode(unref(_sfc_main$m), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$1f), {
                                                onSelect: withModifiers(() => {
                                                }, ["prevent"]),
                                                class: "text-destructive"
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                  createTextVNode("Delete ")
                                                ]),
                                                _: 1
                                              }, 8, ["onSelect"])
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$j), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$g), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$f), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Delete Task?")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$i), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" This action cannot be undone. ")
                                                    ]),
                                                    _: 1
                                                  })
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$h), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$k), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Cancel")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$l), {
                                                    onClick: ($event) => emit("deleteTask", element)
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" Continue ")
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["onClick"])
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "icon",
                                  class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(DropdownMenuPortal), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1h), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1f), {
                                      onClick: ($event) => emit("editTask", element)
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                        createTextVNode("Edit ")
                                      ]),
                                      _: 2
                                    }, 1032, ["onClick"]),
                                    createVNode(unref(_sfc_main$m), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$1f), {
                                              onSelect: withModifiers(() => {
                                              }, ["prevent"]),
                                              class: "text-destructive"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                createTextVNode("Delete ")
                                              ]),
                                              _: 1
                                            }, 8, ["onSelect"])
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$j), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$g), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$f), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Delete Task?")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$i), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" This action cannot be undone. ")
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$h), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$k), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Cancel")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$l), {
                                                  onClick: ($event) => emit("deleteTask", element)
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" Continue ")
                                                  ]),
                                                  _: 2
                                                }, 1032, ["onClick"])
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1024)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "p-3" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<p class="font-semibold text-sm leading-snug"${_scopeId3}>${ssrInterpolate(element.title)}</p><div class="flex items-center justify-between mt-3"${_scopeId3}>`);
                          _push4(ssrRenderComponent(unref(_sfc_main$N), {
                            variant: unref(taskHelper).getPriorityVariant(element.priority)
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`${ssrInterpolate(unref(taskHelper).getPriorityLabel(element.priority))}`);
                              } else {
                                return [
                                  createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(`<div class="flex items-center gap-2"${_scopeId3}><span class="text-xs text-muted-foreground"${_scopeId3}>${ssrInterpolate(unref(dateHelper).formatDate(element.due_date))}</span>`);
                          _push4(ssrRenderComponent(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              var _a, _b;
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1j), {
                                  src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                }, null, _parent5, _scopeId4));
                                _push5(ssrRenderComponent(unref(_sfc_main$1k), null, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    var _a2, _b2;
                                    if (_push6) {
                                      _push6(`${ssrInterpolate(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U")}`);
                                    } else {
                                      return [
                                        createTextVNode(toDisplayString(((_b2 = element.assigned_user) == null ? void 0 : _b2.name.charAt(0)) ?? "U"), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1j), {
                                    src: ((_b = element.assigned_user) == null ? void 0 : _b.avatar) ?? "https://github.com/unovue.png"
                                  }, null, 8, ["src"]),
                                  createVNode(unref(_sfc_main$1k), null, {
                                    default: withCtx(() => {
                                      var _a2;
                                      return [
                                        createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                      ];
                                    }),
                                    _: 2
                                  }, 1024)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(`</div></div>`);
                        } else {
                          return [
                            createVNode("p", { class: "font-semibold text-sm leading-snug" }, toDisplayString(element.title), 1),
                            createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                              createVNode(unref(_sfc_main$N), {
                                variant: unref(taskHelper).getPriorityVariant(element.priority)
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                                ]),
                                _: 2
                              }, 1032, ["variant"]),
                              createVNode("div", { class: "flex items-center gap-2" }, [
                                createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                                createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                  default: withCtx(() => {
                                    var _a;
                                    return [
                                      createVNode(unref(_sfc_main$1j), {
                                        src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                      }, null, 8, ["src"]),
                                      createVNode(unref(_sfc_main$1k), null, {
                                        default: withCtx(() => {
                                          var _a2;
                                          return [
                                            createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                          ];
                                        }),
                                        _: 2
                                      }, 1024)
                                    ];
                                  }),
                                  _: 2
                                }, 1024)
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(unref(_sfc_main$1i), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), {
                                variant: "ghost",
                                size: "icon",
                                class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(DropdownMenuPortal), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1h), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), {
                                    onClick: ($event) => emit("editTask", element)
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                      createTextVNode("Edit ")
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]),
                                  createVNode(unref(_sfc_main$m), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1f), {
                                            onSelect: withModifiers(() => {
                                            }, ["prevent"]),
                                            class: "text-destructive"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Delete ")
                                            ]),
                                            _: 1
                                          }, 8, ["onSelect"])
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$j), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$g), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$f), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Delete Task?")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$i), null, {
                                                default: withCtx(() => [
                                                  createTextVNode(" This action cannot be undone. ")
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$h), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$k), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Cancel")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$l), {
                                                onClick: ($event) => emit("deleteTask", element)
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" Continue ")
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick"])
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$Z), { class: "p-3" }, {
                        default: withCtx(() => [
                          createVNode("p", { class: "font-semibold text-sm leading-snug" }, toDisplayString(element.title), 1),
                          createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                            createVNode(unref(_sfc_main$N), {
                              variant: unref(taskHelper).getPriorityVariant(element.priority)
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                              ]),
                              _: 2
                            }, 1032, ["variant"]),
                            createVNode("div", { class: "flex items-center gap-2" }, [
                              createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                              createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                default: withCtx(() => {
                                  var _a;
                                  return [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                    }, null, 8, ["src"]),
                                    createVNode(unref(_sfc_main$1k), null, {
                                      default: withCtx(() => {
                                        var _a2;
                                        return [
                                          createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 2
                                    }, 1024)
                                  ];
                                }),
                                _: 2
                              }, 1024)
                            ])
                          ])
                        ]),
                        _: 2
                      }, 1024)
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            });
            _push2(`<!--]-->`);
          } else {
            return [
              (openBlock(true), createBlock(Fragment, null, renderList(todoTasks.value, (element) => {
                return openBlock(), createBlock("div", {
                  key: element.id,
                  "data-task-id": element.id,
                  class: "cursor-grab group relative"
                }, [
                  createVNode(unref(_sfc_main$_), { class: "bg-background shadow-sm hover:shadow-md transition-shadow" }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$1i), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), {
                                variant: "ghost",
                                size: "icon",
                                class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(DropdownMenuPortal), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1h), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), {
                                    onClick: ($event) => emit("editTask", element)
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                      createTextVNode("Edit ")
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]),
                                  createVNode(unref(_sfc_main$m), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1f), {
                                            onSelect: withModifiers(() => {
                                            }, ["prevent"]),
                                            class: "text-destructive"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Delete ")
                                            ]),
                                            _: 1
                                          }, 8, ["onSelect"])
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$j), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$g), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$f), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Delete Task?")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$i), null, {
                                                default: withCtx(() => [
                                                  createTextVNode(" This action cannot be undone. ")
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$h), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$k), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Cancel")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$l), {
                                                onClick: ($event) => emit("deleteTask", element)
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" Continue ")
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick"])
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$Z), { class: "p-3" }, {
                        default: withCtx(() => [
                          createVNode("p", { class: "font-semibold text-sm leading-snug" }, toDisplayString(element.title), 1),
                          createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                            createVNode(unref(_sfc_main$N), {
                              variant: unref(taskHelper).getPriorityVariant(element.priority)
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                              ]),
                              _: 2
                            }, 1032, ["variant"]),
                            createVNode("div", { class: "flex items-center gap-2" }, [
                              createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                              createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                default: withCtx(() => {
                                  var _a;
                                  return [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                    }, null, 8, ["src"]),
                                    createVNode(unref(_sfc_main$1k), null, {
                                      default: withCtx(() => {
                                        var _a2;
                                        return [
                                          createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 2
                                    }, 1024)
                                  ];
                                }),
                                _: 2
                              }, 1024)
                            ])
                          ])
                        ]),
                        _: 2
                      }, 1024)
                    ]),
                    _: 2
                  }, 1024)
                ], 8, ["data-task-id"]);
              }), 128))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="bg-muted/50 p-4 rounded-lg"><h3 class="font-semibold mb-4 text-sm">In Progress · ${ssrInterpolate(inProgressTasks.value.length)}</h3>`);
      _push(ssrRenderComponent(unref(VueDraggable), {
        modelValue: inProgressTasks.value,
        "onUpdate:modelValue": ($event) => inProgressTasks.value = $event,
        group: "tasks",
        class: "space-y-3 min-h-[100px]",
        onEnd: handleTaskMoved,
        "data-status-id": 2
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<!--[-->`);
            ssrRenderList(inProgressTasks.value, (element) => {
              _push2(`<div${ssrRenderAttr("data-task-id", element.id)} class="cursor-grab group relative"${_scopeId}>`);
              _push2(ssrRenderComponent(unref(_sfc_main$_), { class: "bg-background shadow-sm hover:shadow-md transition-shadow" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(unref(_sfc_main$1i), null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "icon",
                                  class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(ssrRenderComponent(unref(MoreHorizontal), { class: "h-4 w-4" }, null, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1p), {
                                    variant: "ghost",
                                    size: "icon",
                                    class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(unref(DropdownMenuPortal), null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1h), null, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(ssrRenderComponent(unref(_sfc_main$1f), {
                                        onClick: ($event) => emit("editTask", element)
                                      }, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(Pencil), { class: "mr-2 h-4 w-4" }, null, _parent7, _scopeId6));
                                            _push7(`Edit `);
                                          } else {
                                            return [
                                              createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Edit ")
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                      _push6(ssrRenderComponent(unref(_sfc_main$m), null, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(_sfc_main$e), { "as-child": "" }, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$1f), {
                                                    onSelect: () => {
                                                    },
                                                    class: "text-destructive"
                                                  }, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(Trash2), { class: "mr-2 h-4 w-4" }, null, _parent9, _scopeId8));
                                                        _push9(`Delete `);
                                                      } else {
                                                        return [
                                                          createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                          createTextVNode("Delete ")
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                } else {
                                                  return [
                                                    createVNode(unref(_sfc_main$1f), {
                                                      onSelect: withModifiers(() => {
                                                      }, ["prevent"]),
                                                      class: "text-destructive"
                                                    }, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                        createTextVNode("Delete ")
                                                      ]),
                                                      _: 1
                                                    }, 8, ["onSelect"])
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent7, _scopeId6));
                                            _push7(ssrRenderComponent(unref(_sfc_main$j), null, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$g), null, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(_sfc_main$f), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(`Delete Task?`);
                                                            } else {
                                                              return [
                                                                createTextVNode("Delete Task?")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                        _push9(ssrRenderComponent(unref(_sfc_main$i), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(` This action cannot be undone. `);
                                                            } else {
                                                              return [
                                                                createTextVNode(" This action cannot be undone. ")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                      } else {
                                                        return [
                                                          createVNode(unref(_sfc_main$f), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Delete Task?")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$i), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" This action cannot be undone. ")
                                                            ]),
                                                            _: 1
                                                          })
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                  _push8(ssrRenderComponent(unref(_sfc_main$h), null, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(_sfc_main$k), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(`Cancel`);
                                                            } else {
                                                              return [
                                                                createTextVNode("Cancel")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                        _push9(ssrRenderComponent(unref(_sfc_main$l), {
                                                          onClick: ($event) => emit("deleteTask", element)
                                                        }, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(` Continue `);
                                                            } else {
                                                              return [
                                                                createTextVNode(" Continue ")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                      } else {
                                                        return [
                                                          createVNode(unref(_sfc_main$k), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Cancel")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$l), {
                                                            onClick: ($event) => emit("deleteTask", element)
                                                          }, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" Continue ")
                                                            ]),
                                                            _: 2
                                                          }, 1032, ["onClick"])
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                } else {
                                                  return [
                                                    createVNode(unref(_sfc_main$g), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$f), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Delete Task?")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$i), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" This action cannot be undone. ")
                                                          ]),
                                                          _: 1
                                                        })
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$h), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$k), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Cancel")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$l), {
                                                          onClick: ($event) => emit("deleteTask", element)
                                                        }, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" Continue ")
                                                          ]),
                                                          _: 2
                                                        }, 1032, ["onClick"])
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent7, _scopeId6));
                                          } else {
                                            return [
                                              createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$1f), {
                                                    onSelect: withModifiers(() => {
                                                    }, ["prevent"]),
                                                    class: "text-destructive"
                                                  }, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                      createTextVNode("Delete ")
                                                    ]),
                                                    _: 1
                                                  }, 8, ["onSelect"])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$j), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$g), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$f), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Delete Task?")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$i), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" This action cannot be undone. ")
                                                        ]),
                                                        _: 1
                                                      })
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$h), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$k), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Cancel")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$l), {
                                                        onClick: ($event) => emit("deleteTask", element)
                                                      }, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" Continue ")
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["onClick"])
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode(unref(_sfc_main$1f), {
                                          onClick: ($event) => emit("editTask", element)
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                            createTextVNode("Edit ")
                                          ]),
                                          _: 2
                                        }, 1032, ["onClick"]),
                                        createVNode(unref(_sfc_main$m), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$1f), {
                                                  onSelect: withModifiers(() => {
                                                  }, ["prevent"]),
                                                  class: "text-destructive"
                                                }, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                    createTextVNode("Delete ")
                                                  ]),
                                                  _: 1
                                                }, 8, ["onSelect"])
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$j), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$g), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$f), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode("Delete Task?")
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$i), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode(" This action cannot be undone. ")
                                                      ]),
                                                      _: 1
                                                    })
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$h), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$k), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode("Cancel")
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$l), {
                                                      onClick: ($event) => emit("deleteTask", element)
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(" Continue ")
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["onClick"])
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1h), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1f), {
                                        onClick: ($event) => emit("editTask", element)
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                          createTextVNode("Edit ")
                                        ]),
                                        _: 2
                                      }, 1032, ["onClick"]),
                                      createVNode(unref(_sfc_main$m), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$1f), {
                                                onSelect: withModifiers(() => {
                                                }, ["prevent"]),
                                                class: "text-destructive"
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                  createTextVNode("Delete ")
                                                ]),
                                                _: 1
                                              }, 8, ["onSelect"])
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$j), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$g), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$f), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Delete Task?")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$i), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" This action cannot be undone. ")
                                                    ]),
                                                    _: 1
                                                  })
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$h), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$k), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Cancel")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$l), {
                                                    onClick: ($event) => emit("deleteTask", element)
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" Continue ")
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["onClick"])
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "icon",
                                  class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(DropdownMenuPortal), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1h), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1f), {
                                      onClick: ($event) => emit("editTask", element)
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                        createTextVNode("Edit ")
                                      ]),
                                      _: 2
                                    }, 1032, ["onClick"]),
                                    createVNode(unref(_sfc_main$m), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$1f), {
                                              onSelect: withModifiers(() => {
                                              }, ["prevent"]),
                                              class: "text-destructive"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                createTextVNode("Delete ")
                                              ]),
                                              _: 1
                                            }, 8, ["onSelect"])
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$j), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$g), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$f), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Delete Task?")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$i), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" This action cannot be undone. ")
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$h), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$k), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Cancel")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$l), {
                                                  onClick: ($event) => emit("deleteTask", element)
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" Continue ")
                                                  ]),
                                                  _: 2
                                                }, 1032, ["onClick"])
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1024)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "p-3" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<p class="font-semibold text-sm leading-snug"${_scopeId3}>${ssrInterpolate(element.title)}</p><div class="flex items-center justify-between mt-3"${_scopeId3}>`);
                          _push4(ssrRenderComponent(unref(_sfc_main$N), {
                            variant: unref(taskHelper).getPriorityVariant(element.priority)
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`${ssrInterpolate(unref(taskHelper).getPriorityLabel(element.priority))}`);
                              } else {
                                return [
                                  createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(`<div class="flex items-center gap-2"${_scopeId3}><span class="text-xs text-muted-foreground"${_scopeId3}>${ssrInterpolate(unref(dateHelper).formatDate(element.due_date))}</span>`);
                          _push4(ssrRenderComponent(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              var _a, _b;
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1j), {
                                  src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                }, null, _parent5, _scopeId4));
                                _push5(ssrRenderComponent(unref(_sfc_main$1k), null, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    var _a2, _b2;
                                    if (_push6) {
                                      _push6(`${ssrInterpolate(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U")}`);
                                    } else {
                                      return [
                                        createTextVNode(toDisplayString(((_b2 = element.assigned_user) == null ? void 0 : _b2.name.charAt(0)) ?? "U"), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1j), {
                                    src: ((_b = element.assigned_user) == null ? void 0 : _b.avatar) ?? "https://github.com/unovue.png"
                                  }, null, 8, ["src"]),
                                  createVNode(unref(_sfc_main$1k), null, {
                                    default: withCtx(() => {
                                      var _a2;
                                      return [
                                        createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                      ];
                                    }),
                                    _: 2
                                  }, 1024)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(`</div></div>`);
                        } else {
                          return [
                            createVNode("p", { class: "font-semibold text-sm leading-snug" }, toDisplayString(element.title), 1),
                            createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                              createVNode(unref(_sfc_main$N), {
                                variant: unref(taskHelper).getPriorityVariant(element.priority)
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                                ]),
                                _: 2
                              }, 1032, ["variant"]),
                              createVNode("div", { class: "flex items-center gap-2" }, [
                                createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                                createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                  default: withCtx(() => {
                                    var _a;
                                    return [
                                      createVNode(unref(_sfc_main$1j), {
                                        src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                      }, null, 8, ["src"]),
                                      createVNode(unref(_sfc_main$1k), null, {
                                        default: withCtx(() => {
                                          var _a2;
                                          return [
                                            createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                          ];
                                        }),
                                        _: 2
                                      }, 1024)
                                    ];
                                  }),
                                  _: 2
                                }, 1024)
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(unref(_sfc_main$1i), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), {
                                variant: "ghost",
                                size: "icon",
                                class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(DropdownMenuPortal), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1h), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), {
                                    onClick: ($event) => emit("editTask", element)
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                      createTextVNode("Edit ")
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]),
                                  createVNode(unref(_sfc_main$m), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1f), {
                                            onSelect: withModifiers(() => {
                                            }, ["prevent"]),
                                            class: "text-destructive"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Delete ")
                                            ]),
                                            _: 1
                                          }, 8, ["onSelect"])
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$j), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$g), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$f), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Delete Task?")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$i), null, {
                                                default: withCtx(() => [
                                                  createTextVNode(" This action cannot be undone. ")
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$h), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$k), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Cancel")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$l), {
                                                onClick: ($event) => emit("deleteTask", element)
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" Continue ")
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick"])
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$Z), { class: "p-3" }, {
                        default: withCtx(() => [
                          createVNode("p", { class: "font-semibold text-sm leading-snug" }, toDisplayString(element.title), 1),
                          createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                            createVNode(unref(_sfc_main$N), {
                              variant: unref(taskHelper).getPriorityVariant(element.priority)
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                              ]),
                              _: 2
                            }, 1032, ["variant"]),
                            createVNode("div", { class: "flex items-center gap-2" }, [
                              createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                              createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                default: withCtx(() => {
                                  var _a;
                                  return [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                    }, null, 8, ["src"]),
                                    createVNode(unref(_sfc_main$1k), null, {
                                      default: withCtx(() => {
                                        var _a2;
                                        return [
                                          createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 2
                                    }, 1024)
                                  ];
                                }),
                                _: 2
                              }, 1024)
                            ])
                          ])
                        ]),
                        _: 2
                      }, 1024)
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            });
            _push2(`<!--]-->`);
          } else {
            return [
              (openBlock(true), createBlock(Fragment, null, renderList(inProgressTasks.value, (element) => {
                return openBlock(), createBlock("div", {
                  key: element.id,
                  "data-task-id": element.id,
                  class: "cursor-grab group relative"
                }, [
                  createVNode(unref(_sfc_main$_), { class: "bg-background shadow-sm hover:shadow-md transition-shadow" }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$1i), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), {
                                variant: "ghost",
                                size: "icon",
                                class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(DropdownMenuPortal), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1h), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), {
                                    onClick: ($event) => emit("editTask", element)
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                      createTextVNode("Edit ")
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]),
                                  createVNode(unref(_sfc_main$m), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1f), {
                                            onSelect: withModifiers(() => {
                                            }, ["prevent"]),
                                            class: "text-destructive"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Delete ")
                                            ]),
                                            _: 1
                                          }, 8, ["onSelect"])
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$j), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$g), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$f), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Delete Task?")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$i), null, {
                                                default: withCtx(() => [
                                                  createTextVNode(" This action cannot be undone. ")
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$h), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$k), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Cancel")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$l), {
                                                onClick: ($event) => emit("deleteTask", element)
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" Continue ")
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick"])
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$Z), { class: "p-3" }, {
                        default: withCtx(() => [
                          createVNode("p", { class: "font-semibold text-sm leading-snug" }, toDisplayString(element.title), 1),
                          createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                            createVNode(unref(_sfc_main$N), {
                              variant: unref(taskHelper).getPriorityVariant(element.priority)
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                              ]),
                              _: 2
                            }, 1032, ["variant"]),
                            createVNode("div", { class: "flex items-center gap-2" }, [
                              createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                              createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                default: withCtx(() => {
                                  var _a;
                                  return [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                    }, null, 8, ["src"]),
                                    createVNode(unref(_sfc_main$1k), null, {
                                      default: withCtx(() => {
                                        var _a2;
                                        return [
                                          createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 2
                                    }, 1024)
                                  ];
                                }),
                                _: 2
                              }, 1024)
                            ])
                          ])
                        ]),
                        _: 2
                      }, 1024)
                    ]),
                    _: 2
                  }, 1024)
                ], 8, ["data-task-id"]);
              }), 128))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="bg-muted/50 p-4 rounded-lg"><h3 class="font-semibold mb-4 text-sm">Done · ${ssrInterpolate(completedTasks.value.length)}</h3>`);
      _push(ssrRenderComponent(unref(VueDraggable), {
        modelValue: completedTasks.value,
        "onUpdate:modelValue": ($event) => completedTasks.value = $event,
        group: "tasks",
        class: "space-y-3 min-h-[100px]",
        onEnd: handleTaskMoved,
        "data-status-id": 3
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<!--[-->`);
            ssrRenderList(completedTasks.value, (element) => {
              _push2(`<div${ssrRenderAttr("data-task-id", element.id)} class="cursor-grab group relative"${_scopeId}>`);
              _push2(ssrRenderComponent(unref(_sfc_main$_), { class: "bg-background shadow-sm opacity-70 hover:shadow-md transition-shadow" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(unref(_sfc_main$1i), null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "icon",
                                  class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(ssrRenderComponent(unref(MoreHorizontal), { class: "h-4 w-4" }, null, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1p), {
                                    variant: "ghost",
                                    size: "icon",
                                    class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(unref(DropdownMenuPortal), null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1h), null, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(ssrRenderComponent(unref(_sfc_main$1f), {
                                        onClick: ($event) => emit("editTask", element)
                                      }, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(Pencil), { class: "mr-2 h-4 w-4" }, null, _parent7, _scopeId6));
                                            _push7(`Edit `);
                                          } else {
                                            return [
                                              createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Edit ")
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                      _push6(ssrRenderComponent(unref(_sfc_main$m), null, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(_sfc_main$e), { "as-child": "" }, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$1f), {
                                                    onSelect: () => {
                                                    },
                                                    class: "text-destructive"
                                                  }, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(Trash2), { class: "mr-2 h-4 w-4" }, null, _parent9, _scopeId8));
                                                        _push9(`Delete `);
                                                      } else {
                                                        return [
                                                          createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                          createTextVNode("Delete ")
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                } else {
                                                  return [
                                                    createVNode(unref(_sfc_main$1f), {
                                                      onSelect: withModifiers(() => {
                                                      }, ["prevent"]),
                                                      class: "text-destructive"
                                                    }, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                        createTextVNode("Delete ")
                                                      ]),
                                                      _: 1
                                                    }, 8, ["onSelect"])
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent7, _scopeId6));
                                            _push7(ssrRenderComponent(unref(_sfc_main$j), null, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$g), null, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(_sfc_main$f), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(`Delete Task?`);
                                                            } else {
                                                              return [
                                                                createTextVNode("Delete Task?")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                        _push9(ssrRenderComponent(unref(_sfc_main$i), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(` This action cannot be undone. `);
                                                            } else {
                                                              return [
                                                                createTextVNode(" This action cannot be undone. ")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                      } else {
                                                        return [
                                                          createVNode(unref(_sfc_main$f), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Delete Task?")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$i), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" This action cannot be undone. ")
                                                            ]),
                                                            _: 1
                                                          })
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                  _push8(ssrRenderComponent(unref(_sfc_main$h), null, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(ssrRenderComponent(unref(_sfc_main$k), null, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(`Cancel`);
                                                            } else {
                                                              return [
                                                                createTextVNode("Cancel")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                        _push9(ssrRenderComponent(unref(_sfc_main$l), {
                                                          onClick: ($event) => emit("deleteTask", element)
                                                        }, {
                                                          default: withCtx((_9, _push10, _parent10, _scopeId9) => {
                                                            if (_push10) {
                                                              _push10(` Continue `);
                                                            } else {
                                                              return [
                                                                createTextVNode(" Continue ")
                                                              ];
                                                            }
                                                          }),
                                                          _: 2
                                                        }, _parent9, _scopeId8));
                                                      } else {
                                                        return [
                                                          createVNode(unref(_sfc_main$k), null, {
                                                            default: withCtx(() => [
                                                              createTextVNode("Cancel")
                                                            ]),
                                                            _: 1
                                                          }),
                                                          createVNode(unref(_sfc_main$l), {
                                                            onClick: ($event) => emit("deleteTask", element)
                                                          }, {
                                                            default: withCtx(() => [
                                                              createTextVNode(" Continue ")
                                                            ]),
                                                            _: 2
                                                          }, 1032, ["onClick"])
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                } else {
                                                  return [
                                                    createVNode(unref(_sfc_main$g), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$f), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Delete Task?")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$i), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" This action cannot be undone. ")
                                                          ]),
                                                          _: 1
                                                        })
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$h), null, {
                                                      default: withCtx(() => [
                                                        createVNode(unref(_sfc_main$k), null, {
                                                          default: withCtx(() => [
                                                            createTextVNode("Cancel")
                                                          ]),
                                                          _: 1
                                                        }),
                                                        createVNode(unref(_sfc_main$l), {
                                                          onClick: ($event) => emit("deleteTask", element)
                                                        }, {
                                                          default: withCtx(() => [
                                                            createTextVNode(" Continue ")
                                                          ]),
                                                          _: 2
                                                        }, 1032, ["onClick"])
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent7, _scopeId6));
                                          } else {
                                            return [
                                              createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$1f), {
                                                    onSelect: withModifiers(() => {
                                                    }, ["prevent"]),
                                                    class: "text-destructive"
                                                  }, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                      createTextVNode("Delete ")
                                                    ]),
                                                    _: 1
                                                  }, 8, ["onSelect"])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$j), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$g), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$f), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Delete Task?")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$i), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" This action cannot be undone. ")
                                                        ]),
                                                        _: 1
                                                      })
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$h), null, {
                                                    default: withCtx(() => [
                                                      createVNode(unref(_sfc_main$k), null, {
                                                        default: withCtx(() => [
                                                          createTextVNode("Cancel")
                                                        ]),
                                                        _: 1
                                                      }),
                                                      createVNode(unref(_sfc_main$l), {
                                                        onClick: ($event) => emit("deleteTask", element)
                                                      }, {
                                                        default: withCtx(() => [
                                                          createTextVNode(" Continue ")
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["onClick"])
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode(unref(_sfc_main$1f), {
                                          onClick: ($event) => emit("editTask", element)
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                            createTextVNode("Edit ")
                                          ]),
                                          _: 2
                                        }, 1032, ["onClick"]),
                                        createVNode(unref(_sfc_main$m), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$1f), {
                                                  onSelect: withModifiers(() => {
                                                  }, ["prevent"]),
                                                  class: "text-destructive"
                                                }, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                    createTextVNode("Delete ")
                                                  ]),
                                                  _: 1
                                                }, 8, ["onSelect"])
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$j), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$g), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$f), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode("Delete Task?")
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$i), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode(" This action cannot be undone. ")
                                                      ]),
                                                      _: 1
                                                    })
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$h), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$k), null, {
                                                      default: withCtx(() => [
                                                        createTextVNode("Cancel")
                                                      ]),
                                                      _: 1
                                                    }),
                                                    createVNode(unref(_sfc_main$l), {
                                                      onClick: ($event) => emit("deleteTask", element)
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(" Continue ")
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["onClick"])
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1h), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$1f), {
                                        onClick: ($event) => emit("editTask", element)
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                          createTextVNode("Edit ")
                                        ]),
                                        _: 2
                                      }, 1032, ["onClick"]),
                                      createVNode(unref(_sfc_main$m), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$1f), {
                                                onSelect: withModifiers(() => {
                                                }, ["prevent"]),
                                                class: "text-destructive"
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                  createTextVNode("Delete ")
                                                ]),
                                                _: 1
                                              }, 8, ["onSelect"])
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$j), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$g), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$f), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Delete Task?")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$i), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" This action cannot be undone. ")
                                                    ]),
                                                    _: 1
                                                  })
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$h), null, {
                                                default: withCtx(() => [
                                                  createVNode(unref(_sfc_main$k), null, {
                                                    default: withCtx(() => [
                                                      createTextVNode("Cancel")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  createVNode(unref(_sfc_main$l), {
                                                    onClick: ($event) => emit("deleteTask", element)
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(" Continue ")
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["onClick"])
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "icon",
                                  class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(DropdownMenuPortal), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$1h), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$1f), {
                                      onClick: ($event) => emit("editTask", element)
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                        createTextVNode("Edit ")
                                      ]),
                                      _: 2
                                    }, 1032, ["onClick"]),
                                    createVNode(unref(_sfc_main$m), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$1f), {
                                              onSelect: withModifiers(() => {
                                              }, ["prevent"]),
                                              class: "text-destructive"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                                createTextVNode("Delete ")
                                              ]),
                                              _: 1
                                            }, 8, ["onSelect"])
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$j), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$g), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$f), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Delete Task?")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$i), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" This action cannot be undone. ")
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$h), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$k), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode("Cancel")
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(unref(_sfc_main$l), {
                                                  onClick: ($event) => emit("deleteTask", element)
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(" Continue ")
                                                  ]),
                                                  _: 2
                                                }, 1032, ["onClick"])
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1024)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "p-3" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<p class="font-semibold text-sm leading-snug line-through"${_scopeId3}>${ssrInterpolate(element.title)}</p><div class="flex items-center justify-between mt-3"${_scopeId3}>`);
                          _push4(ssrRenderComponent(unref(_sfc_main$N), {
                            variant: unref(taskHelper).getPriorityVariant(element.priority)
                          }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`${ssrInterpolate(unref(taskHelper).getPriorityLabel(element.priority))}`);
                              } else {
                                return [
                                  createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(`<div class="flex items-center gap-2"${_scopeId3}><span class="text-xs text-muted-foreground"${_scopeId3}>${ssrInterpolate(unref(dateHelper).formatDate(element.due_date))}</span>`);
                          _push4(ssrRenderComponent(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              var _a, _b;
                              if (_push5) {
                                _push5(ssrRenderComponent(unref(_sfc_main$1j), {
                                  src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                }, null, _parent5, _scopeId4));
                                _push5(ssrRenderComponent(unref(_sfc_main$1k), null, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    var _a2, _b2;
                                    if (_push6) {
                                      _push6(`${ssrInterpolate(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U")}`);
                                    } else {
                                      return [
                                        createTextVNode(toDisplayString(((_b2 = element.assigned_user) == null ? void 0 : _b2.name.charAt(0)) ?? "U"), 1)
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(unref(_sfc_main$1j), {
                                    src: ((_b = element.assigned_user) == null ? void 0 : _b.avatar) ?? "https://github.com/unovue.png"
                                  }, null, 8, ["src"]),
                                  createVNode(unref(_sfc_main$1k), null, {
                                    default: withCtx(() => {
                                      var _a2;
                                      return [
                                        createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                      ];
                                    }),
                                    _: 2
                                  }, 1024)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(`</div></div>`);
                        } else {
                          return [
                            createVNode("p", { class: "font-semibold text-sm leading-snug line-through" }, toDisplayString(element.title), 1),
                            createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                              createVNode(unref(_sfc_main$N), {
                                variant: unref(taskHelper).getPriorityVariant(element.priority)
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                                ]),
                                _: 2
                              }, 1032, ["variant"]),
                              createVNode("div", { class: "flex items-center gap-2" }, [
                                createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                                createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                  default: withCtx(() => {
                                    var _a;
                                    return [
                                      createVNode(unref(_sfc_main$1j), {
                                        src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                      }, null, 8, ["src"]),
                                      createVNode(unref(_sfc_main$1k), null, {
                                        default: withCtx(() => {
                                          var _a2;
                                          return [
                                            createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                          ];
                                        }),
                                        _: 2
                                      }, 1024)
                                    ];
                                  }),
                                  _: 2
                                }, 1024)
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(unref(_sfc_main$1i), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), {
                                variant: "ghost",
                                size: "icon",
                                class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(DropdownMenuPortal), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1h), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), {
                                    onClick: ($event) => emit("editTask", element)
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                      createTextVNode("Edit ")
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]),
                                  createVNode(unref(_sfc_main$m), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1f), {
                                            onSelect: withModifiers(() => {
                                            }, ["prevent"]),
                                            class: "text-destructive"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Delete ")
                                            ]),
                                            _: 1
                                          }, 8, ["onSelect"])
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$j), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$g), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$f), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Delete Task?")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$i), null, {
                                                default: withCtx(() => [
                                                  createTextVNode(" This action cannot be undone. ")
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$h), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$k), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Cancel")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$l), {
                                                onClick: ($event) => emit("deleteTask", element)
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" Continue ")
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick"])
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$Z), { class: "p-3" }, {
                        default: withCtx(() => [
                          createVNode("p", { class: "font-semibold text-sm leading-snug line-through" }, toDisplayString(element.title), 1),
                          createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                            createVNode(unref(_sfc_main$N), {
                              variant: unref(taskHelper).getPriorityVariant(element.priority)
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                              ]),
                              _: 2
                            }, 1032, ["variant"]),
                            createVNode("div", { class: "flex items-center gap-2" }, [
                              createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                              createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                default: withCtx(() => {
                                  var _a;
                                  return [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                    }, null, 8, ["src"]),
                                    createVNode(unref(_sfc_main$1k), null, {
                                      default: withCtx(() => {
                                        var _a2;
                                        return [
                                          createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 2
                                    }, 1024)
                                  ];
                                }),
                                _: 2
                              }, 1024)
                            ])
                          ])
                        ]),
                        _: 2
                      }, 1024)
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div>`);
            });
            _push2(`<!--]-->`);
          } else {
            return [
              (openBlock(true), createBlock(Fragment, null, renderList(completedTasks.value, (element) => {
                return openBlock(), createBlock("div", {
                  key: element.id,
                  "data-task-id": element.id,
                  class: "cursor-grab group relative"
                }, [
                  createVNode(unref(_sfc_main$_), { class: "bg-background shadow-sm opacity-70 hover:shadow-md transition-shadow" }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$1i), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$1b), { "as-child": "" }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1p), {
                                variant: "ghost",
                                size: "icon",
                                class: "h-6 w-6 absolute top-1 right-1 hidden group-hover:inline-flex"
                              }, {
                                default: withCtx(() => [
                                  createVNode(unref(MoreHorizontal), { class: "h-4 w-4" })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(DropdownMenuPortal), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$1h), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$1f), {
                                    onClick: ($event) => emit("editTask", element)
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(Pencil), { class: "mr-2 h-4 w-4" }),
                                      createTextVNode("Edit ")
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]),
                                  createVNode(unref(_sfc_main$m), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$e), { "as-child": "" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$1f), {
                                            onSelect: withModifiers(() => {
                                            }, ["prevent"]),
                                            class: "text-destructive"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode(unref(Trash2), { class: "mr-2 h-4 w-4" }),
                                              createTextVNode("Delete ")
                                            ]),
                                            _: 1
                                          }, 8, ["onSelect"])
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$j), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$g), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$f), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Delete Task?")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$i), null, {
                                                default: withCtx(() => [
                                                  createTextVNode(" This action cannot be undone. ")
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$h), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$k), null, {
                                                default: withCtx(() => [
                                                  createTextVNode("Cancel")
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(unref(_sfc_main$l), {
                                                onClick: ($event) => emit("deleteTask", element)
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" Continue ")
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick"])
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024),
                      createVNode(unref(_sfc_main$Z), { class: "p-3" }, {
                        default: withCtx(() => [
                          createVNode("p", { class: "font-semibold text-sm leading-snug line-through" }, toDisplayString(element.title), 1),
                          createVNode("div", { class: "flex items-center justify-between mt-3" }, [
                            createVNode(unref(_sfc_main$N), {
                              variant: unref(taskHelper).getPriorityVariant(element.priority)
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(element.priority)), 1)
                              ]),
                              _: 2
                            }, 1032, ["variant"]),
                            createVNode("div", { class: "flex items-center gap-2" }, [
                              createVNode("span", { class: "text-xs text-muted-foreground" }, toDisplayString(unref(dateHelper).formatDate(element.due_date)), 1),
                              createVNode(unref(_sfc_main$1l), { class: "h-6 w-6" }, {
                                default: withCtx(() => {
                                  var _a;
                                  return [
                                    createVNode(unref(_sfc_main$1j), {
                                      src: ((_a = element.assigned_user) == null ? void 0 : _a.avatar) ?? "https://github.com/unovue.png"
                                    }, null, 8, ["src"]),
                                    createVNode(unref(_sfc_main$1k), null, {
                                      default: withCtx(() => {
                                        var _a2;
                                        return [
                                          createTextVNode(toDisplayString(((_a2 = element.assigned_user) == null ? void 0 : _a2.name.charAt(0)) ?? "U"), 1)
                                        ];
                                      }),
                                      _: 2
                                    }, 1024)
                                  ];
                                }),
                                _: 2
                              }, 1024)
                            ])
                          ])
                        ]),
                        _: 2
                      }, 1024)
                    ]),
                    _: 2
                  }, 1024)
                ], 8, ["data-task-id"]);
              }), 128))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/shared/task/task-board-view.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
const _sfc_main$8 = {
  __name: "show",
  __ssrInlineRender: true,
  props: {
    project: Object,
    activities: Array,
    taskStatuses: Array,
    taskPriorities: Array,
    filters: Object
  },
  setup(__props) {
    const props = __props;
    const page = usePage();
    const authUser = computed(() => page.props.auth.user);
    const canManageProject = computed(() => authUser.value.id === props.project.owner_id);
    const isAddTaskDialogOpen = ref(false);
    const isAddMemberDialogOpen = ref(false);
    const isEditTaskDialogOpen = ref(false);
    const editingTask = ref(null);
    const viewMode = ref("list");
    const updateTask = (task, data) => {
      router.patch(`/task/${task.id}`, data, {
        preserveScroll: true,
        onSuccess: () => {
          toast.success("Task Updated");
          if (isEditTaskDialogOpen.value) {
            isEditTaskDialogOpen.value = false;
          }
        },
        onError: () => toast.error("Failed to update task.")
      });
    };
    const handleTaskMoved = ({ taskId, newStatus }) => {
      updateTask({ id: taskId }, { status: newStatus });
    };
    const openEditTaskDialog = (task) => {
      editingTask.value = task;
      isEditTaskDialogOpen.value = true;
    };
    const deleteTask = (task) => {
      router.delete(`/tasks/${task.id}`, {
        preserveScroll: true,
        onSuccess: () => toast.success("Task Deleted")
      });
    };
    const filters = reactive({
      search: props.filters.search || "",
      status: props.filters.status || "",
      priority: props.filters.priority || ""
    });
    watch(
      filters,
      debounce((newFilters) => {
        router.get(`/project/${props.project.id}`, newFilters, {
          preserveState: true,
          replace: true,
          preserveScroll: true
        });
      }, 500)
    );
    const breadcrumbs = [{ label: "Project", url: "/project", subs: [{ label: "Project Details" }] }];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), {
        title: __props.project.name
      }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, { breadcrumbs }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(Toaster), {
              position: "top-right",
              richColors: ""
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$c, {
              open: isAddTaskDialogOpen.value,
              "onUpdate:open": ($event) => isAddTaskDialogOpen.value = $event,
              project: __props.project,
              members: __props.project.members,
              "task-priorities": __props.taskPriorities
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$b, {
              modelValue: isEditTaskDialogOpen.value,
              "onUpdate:modelValue": ($event) => isEditTaskDialogOpen.value = $event,
              task: editingTask.value,
              members: __props.project.members,
              "task-priorities": __props.taskPriorities,
              onSubmit: (form) => updateTask(editingTask.value, form.data())
            }, null, _parent2, _scopeId));
            if (canManageProject.value) {
              _push2(ssrRenderComponent(_sfc_main$p, {
                open: isAddMemberDialogOpen.value,
                "onUpdate:open": ($event) => isAddMemberDialogOpen.value = $event,
                project: __props.project
              }, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex flex-col sm:flex-row justify-between sm:items-center gap-4 mb-6"${_scopeId}><div${_scopeId}><h2 class="font-semibold text-2xl"${_scopeId}>${ssrInterpolate(__props.project.name)}</h2><p class="text-muted-foreground mt-1"${_scopeId}>${ssrInterpolate(__props.project.description || "No description provided.")}</p></div><div class="flex items-center space-x-2 self-start sm:self-center"${_scopeId}>`);
            if (canManageProject.value) {
              _push2(ssrRenderComponent(unref(_sfc_main$1p), {
                variant: "outline",
                onClick: ($event) => isAddMemberDialogOpen.value = true
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Add Member `);
                  } else {
                    return [
                      createTextVNode(" Add Member ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(ssrRenderComponent(unref(_sfc_main$1p), {
              onClick: ($event) => isAddTaskDialogOpen.value = true
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Create Task`);
                } else {
                  return [
                    createTextVNode("Create Task")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div>`);
            _push2(ssrRenderComponent(unref(_sfc_main$z), {
              "default-value": "tasks",
              class: "w-full"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$x), {
                    class: ["grid w-full", canManageProject.value ? "grid-cols-4" : "grid-cols-3"]
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$w), { value: "tasks" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Tasks`);
                            } else {
                              return [
                                createTextVNode("Tasks")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$w), { value: "members" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Members`);
                            } else {
                              return [
                                createTextVNode("Members")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$w), { value: "activity" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Activity`);
                            } else {
                              return [
                                createTextVNode("Activity")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        if (canManageProject.value) {
                          _push4(ssrRenderComponent(unref(_sfc_main$w), { value: "settings" }, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`Settings`);
                              } else {
                                return [
                                  createTextVNode("Settings")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          _push4(`<!---->`);
                        }
                      } else {
                        return [
                          createVNode(unref(_sfc_main$w), { value: "tasks" }, {
                            default: withCtx(() => [
                              createTextVNode("Tasks")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$w), { value: "members" }, {
                            default: withCtx(() => [
                              createTextVNode("Members")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$w), { value: "activity" }, {
                            default: withCtx(() => [
                              createTextVNode("Activity")
                            ]),
                            _: 1
                          }),
                          canManageProject.value ? (openBlock(), createBlock(unref(_sfc_main$w), {
                            key: 0,
                            value: "settings"
                          }, {
                            default: withCtx(() => [
                              createTextVNode("Settings")
                            ]),
                            _: 1
                          })) : createCommentVNode("", true)
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$y), {
                    value: "tasks",
                    class: "mt-4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$_), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$W), { class: "flex flex-row items-center justify-between" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<div${_scopeId5}>`);
                                    _push6(ssrRenderComponent(unref(_sfc_main$V), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`Project Tasks`);
                                        } else {
                                          return [
                                            createTextVNode("Project Tasks")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$Y), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`View tasks as a list or a Kanban board.`);
                                        } else {
                                          return [
                                            createTextVNode("View tasks as a list or a Kanban board.")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(`</div><div class="flex items-center rounded-md bg-secondary text-secondary-foreground p-1"${_scopeId5}>`);
                                    _push6(ssrRenderComponent(unref(_sfc_main$1p), {
                                      variant: "ghost",
                                      size: "sm",
                                      onClick: ($event) => viewMode.value = "list",
                                      class: [{ "bg-background text-primary": viewMode.value === "list" }, "h-8 px-3"]
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(List), { class: "h-4 w-4" }, null, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(unref(List), { class: "h-4 w-4" })
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$1p), {
                                      variant: "ghost",
                                      size: "sm",
                                      onClick: ($event) => viewMode.value = "board",
                                      class: [{ "bg-background text-primary": viewMode.value === "board" }, "h-8 px-3"]
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(Kanban), { class: "h-4 w-4" }, null, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(unref(Kanban), { class: "h-4 w-4" })
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(`</div>`);
                                  } else {
                                    return [
                                      createVNode("div", null, [
                                        createVNode(unref(_sfc_main$V), null, {
                                          default: withCtx(() => [
                                            createTextVNode("Project Tasks")
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$Y), null, {
                                          default: withCtx(() => [
                                            createTextVNode("View tasks as a list or a Kanban board.")
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      createVNode("div", { class: "flex items-center rounded-md bg-secondary text-secondary-foreground p-1" }, [
                                        createVNode(unref(_sfc_main$1p), {
                                          variant: "ghost",
                                          size: "sm",
                                          onClick: ($event) => viewMode.value = "list",
                                          class: [{ "bg-background text-primary": viewMode.value === "list" }, "h-8 px-3"]
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(List), { class: "h-4 w-4" })
                                          ]),
                                          _: 1
                                        }, 8, ["onClick", "class"]),
                                        createVNode(unref(_sfc_main$1p), {
                                          variant: "ghost",
                                          size: "sm",
                                          onClick: ($event) => viewMode.value = "board",
                                          class: [{ "bg-background text-primary": viewMode.value === "board" }, "h-8 px-3"]
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(Kanban), { class: "h-4 w-4" })
                                          ]),
                                          _: 1
                                        }, 8, ["onClick", "class"])
                                      ])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$Z), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 border-b pb-6"${_scopeId5}>`);
                                    _push6(ssrRenderComponent(unref(_sfc_main$1B), {
                                      modelValue: filters.search,
                                      "onUpdate:modelValue": ($event) => filters.search = $event,
                                      placeholder: "Search task titles..."
                                    }, null, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$G), {
                                      modelValue: filters.status,
                                      "onUpdate:modelValue": ($event) => filters.status = $event
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(_sfc_main$B), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Filter by status" }, null, _parent8, _scopeId7));
                                              } else {
                                                return [
                                                  createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$F), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(ssrRenderComponent(unref(_sfc_main$E), { value: "all" }, {
                                                  default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                    if (_push9) {
                                                      _push9(`All Statuses`);
                                                    } else {
                                                      return [
                                                        createTextVNode("All Statuses")
                                                      ];
                                                    }
                                                  }),
                                                  _: 1
                                                }, _parent8, _scopeId7));
                                                _push8(`<!--[-->`);
                                                ssrRenderList(__props.taskStatuses, (status) => {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$E), {
                                                    key: status.value,
                                                    value: status.value
                                                  }, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(`${ssrInterpolate(status.label)}`);
                                                      } else {
                                                        return [
                                                          createTextVNode(toDisplayString(status.label), 1)
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                });
                                                _push8(`<!--]-->`);
                                              } else {
                                                return [
                                                  createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                    default: withCtx(() => [
                                                      createTextVNode("All Statuses")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                                      key: status.value,
                                                      value: status.value
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(toDisplayString(status.label), 1)
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["value"]);
                                                  }), 128))
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(unref(_sfc_main$B), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$F), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode("All Statuses")
                                                  ]),
                                                  _: 1
                                                }),
                                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                                    key: status.value,
                                                    value: status.value
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString(status.label), 1)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["value"]);
                                                }), 128))
                                              ]),
                                              _: 1
                                            })
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$G), {
                                      modelValue: filters.priority,
                                      "onUpdate:modelValue": ($event) => filters.priority = $event
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(_sfc_main$B), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Filter by priority" }, null, _parent8, _scopeId7));
                                              } else {
                                                return [
                                                  createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$F), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(ssrRenderComponent(unref(_sfc_main$E), { value: "all" }, {
                                                  default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                    if (_push9) {
                                                      _push9(`All Priorities`);
                                                    } else {
                                                      return [
                                                        createTextVNode("All Priorities")
                                                      ];
                                                    }
                                                  }),
                                                  _: 1
                                                }, _parent8, _scopeId7));
                                                _push8(`<!--[-->`);
                                                ssrRenderList(__props.taskPriorities, (priority) => {
                                                  _push8(ssrRenderComponent(unref(_sfc_main$E), {
                                                    key: priority.value,
                                                    value: priority.value
                                                  }, {
                                                    default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(`${ssrInterpolate(priority.label)}`);
                                                      } else {
                                                        return [
                                                          createTextVNode(toDisplayString(priority.label), 1)
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                });
                                                _push8(`<!--]-->`);
                                              } else {
                                                return [
                                                  createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                    default: withCtx(() => [
                                                      createTextVNode("All Priorities")
                                                    ]),
                                                    _: 1
                                                  }),
                                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                                      key: priority.value,
                                                      value: priority.value
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(toDisplayString(priority.label), 1)
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["value"]);
                                                  }), 128))
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(unref(_sfc_main$B), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$F), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode("All Priorities")
                                                  ]),
                                                  _: 1
                                                }),
                                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                                    key: priority.value,
                                                    value: priority.value
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString(priority.label), 1)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["value"]);
                                                }), 128))
                                              ]),
                                              _: 1
                                            })
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(`</div>`);
                                    if (viewMode.value === "list") {
                                      _push6(ssrRenderComponent(_sfc_main$a, {
                                        tasks: __props.project.tasks,
                                        "task-statuses": __props.taskStatuses,
                                        "task-priorities": __props.taskPriorities,
                                        onEditTask: openEditTaskDialog,
                                        onDeleteTask: deleteTask,
                                        onUpdateTask: updateTask
                                      }, null, _parent6, _scopeId5));
                                    } else if (viewMode.value === "board") {
                                      _push6(ssrRenderComponent(_sfc_main$9, {
                                        tasks: __props.project.tasks,
                                        "task-priorities": __props.taskPriorities,
                                        onEditTask: openEditTaskDialog,
                                        onDeleteTask: deleteTask,
                                        onTaskMoved: handleTaskMoved
                                      }, null, _parent6, _scopeId5));
                                    } else {
                                      _push6(`<!---->`);
                                    }
                                  } else {
                                    return [
                                      createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 border-b pb-6" }, [
                                        createVNode(unref(_sfc_main$1B), {
                                          modelValue: filters.search,
                                          "onUpdate:modelValue": ($event) => filters.search = $event,
                                          placeholder: "Search task titles..."
                                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                        createVNode(unref(_sfc_main$G), {
                                          modelValue: filters.status,
                                          "onUpdate:modelValue": ($event) => filters.status = $event
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$B), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$F), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode("All Statuses")
                                                  ]),
                                                  _: 1
                                                }),
                                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                                    key: status.value,
                                                    value: status.value
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString(status.label), 1)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["value"]);
                                                }), 128))
                                              ]),
                                              _: 1
                                            })
                                          ]),
                                          _: 1
                                        }, 8, ["modelValue", "onUpdate:modelValue"]),
                                        createVNode(unref(_sfc_main$G), {
                                          modelValue: filters.priority,
                                          "onUpdate:modelValue": ($event) => filters.priority = $event
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$B), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$F), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode("All Priorities")
                                                  ]),
                                                  _: 1
                                                }),
                                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                                    key: priority.value,
                                                    value: priority.value
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString(priority.label), 1)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["value"]);
                                                }), 128))
                                              ]),
                                              _: 1
                                            })
                                          ]),
                                          _: 1
                                        }, 8, ["modelValue", "onUpdate:modelValue"])
                                      ]),
                                      viewMode.value === "list" ? (openBlock(), createBlock(_sfc_main$a, {
                                        key: 0,
                                        tasks: __props.project.tasks,
                                        "task-statuses": __props.taskStatuses,
                                        "task-priorities": __props.taskPriorities,
                                        onEditTask: openEditTaskDialog,
                                        onDeleteTask: deleteTask,
                                        onUpdateTask: updateTask
                                      }, null, 8, ["tasks", "task-statuses", "task-priorities"])) : viewMode.value === "board" ? (openBlock(), createBlock(_sfc_main$9, {
                                        key: 1,
                                        tasks: __props.project.tasks,
                                        "task-priorities": __props.taskPriorities,
                                        onEditTask: openEditTaskDialog,
                                        onDeleteTask: deleteTask,
                                        onTaskMoved: handleTaskMoved
                                      }, null, 8, ["tasks", "task-priorities"])) : createCommentVNode("", true)
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$W), { class: "flex flex-row items-center justify-between" }, {
                                  default: withCtx(() => [
                                    createVNode("div", null, [
                                      createVNode(unref(_sfc_main$V), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Project Tasks")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$Y), null, {
                                        default: withCtx(() => [
                                          createTextVNode("View tasks as a list or a Kanban board.")
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    createVNode("div", { class: "flex items-center rounded-md bg-secondary text-secondary-foreground p-1" }, [
                                      createVNode(unref(_sfc_main$1p), {
                                        variant: "ghost",
                                        size: "sm",
                                        onClick: ($event) => viewMode.value = "list",
                                        class: [{ "bg-background text-primary": viewMode.value === "list" }, "h-8 px-3"]
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(List), { class: "h-4 w-4" })
                                        ]),
                                        _: 1
                                      }, 8, ["onClick", "class"]),
                                      createVNode(unref(_sfc_main$1p), {
                                        variant: "ghost",
                                        size: "sm",
                                        onClick: ($event) => viewMode.value = "board",
                                        class: [{ "bg-background text-primary": viewMode.value === "board" }, "h-8 px-3"]
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(Kanban), { class: "h-4 w-4" })
                                        ]),
                                        _: 1
                                      }, 8, ["onClick", "class"])
                                    ])
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$Z), null, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 border-b pb-6" }, [
                                      createVNode(unref(_sfc_main$1B), {
                                        modelValue: filters.search,
                                        "onUpdate:modelValue": ($event) => filters.search = $event,
                                        placeholder: "Search task titles..."
                                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                      createVNode(unref(_sfc_main$G), {
                                        modelValue: filters.status,
                                        "onUpdate:modelValue": ($event) => filters.status = $event
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$B), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$F), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                default: withCtx(() => [
                                                  createTextVNode("All Statuses")
                                                ]),
                                                _: 1
                                              }),
                                              (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                                  key: status.value,
                                                  value: status.value
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(status.label), 1)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["value"]);
                                              }), 128))
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }, 8, ["modelValue", "onUpdate:modelValue"]),
                                      createVNode(unref(_sfc_main$G), {
                                        modelValue: filters.priority,
                                        "onUpdate:modelValue": ($event) => filters.priority = $event
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$B), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$F), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$E), { value: "all" }, {
                                                default: withCtx(() => [
                                                  createTextVNode("All Priorities")
                                                ]),
                                                _: 1
                                              }),
                                              (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                                return openBlock(), createBlock(unref(_sfc_main$E), {
                                                  key: priority.value,
                                                  value: priority.value
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(priority.label), 1)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["value"]);
                                              }), 128))
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }, 8, ["modelValue", "onUpdate:modelValue"])
                                    ]),
                                    viewMode.value === "list" ? (openBlock(), createBlock(_sfc_main$a, {
                                      key: 0,
                                      tasks: __props.project.tasks,
                                      "task-statuses": __props.taskStatuses,
                                      "task-priorities": __props.taskPriorities,
                                      onEditTask: openEditTaskDialog,
                                      onDeleteTask: deleteTask,
                                      onUpdateTask: updateTask
                                    }, null, 8, ["tasks", "task-statuses", "task-priorities"])) : viewMode.value === "board" ? (openBlock(), createBlock(_sfc_main$9, {
                                      key: 1,
                                      tasks: __props.project.tasks,
                                      "task-priorities": __props.taskPriorities,
                                      onEditTask: openEditTaskDialog,
                                      onDeleteTask: deleteTask,
                                      onTaskMoved: handleTaskMoved
                                    }, null, 8, ["tasks", "task-priorities"])) : createCommentVNode("", true)
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$_), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$W), { class: "flex flex-row items-center justify-between" }, {
                                default: withCtx(() => [
                                  createVNode("div", null, [
                                    createVNode(unref(_sfc_main$V), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Project Tasks")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$Y), null, {
                                      default: withCtx(() => [
                                        createTextVNode("View tasks as a list or a Kanban board.")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  createVNode("div", { class: "flex items-center rounded-md bg-secondary text-secondary-foreground p-1" }, [
                                    createVNode(unref(_sfc_main$1p), {
                                      variant: "ghost",
                                      size: "sm",
                                      onClick: ($event) => viewMode.value = "list",
                                      class: [{ "bg-background text-primary": viewMode.value === "list" }, "h-8 px-3"]
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(List), { class: "h-4 w-4" })
                                      ]),
                                      _: 1
                                    }, 8, ["onClick", "class"]),
                                    createVNode(unref(_sfc_main$1p), {
                                      variant: "ghost",
                                      size: "sm",
                                      onClick: ($event) => viewMode.value = "board",
                                      class: [{ "bg-background text-primary": viewMode.value === "board" }, "h-8 px-3"]
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(Kanban), { class: "h-4 w-4" })
                                      ]),
                                      _: 1
                                    }, 8, ["onClick", "class"])
                                  ])
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$Z), null, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 border-b pb-6" }, [
                                    createVNode(unref(_sfc_main$1B), {
                                      modelValue: filters.search,
                                      "onUpdate:modelValue": ($event) => filters.search = $event,
                                      placeholder: "Search task titles..."
                                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                    createVNode(unref(_sfc_main$G), {
                                      modelValue: filters.status,
                                      "onUpdate:modelValue": ($event) => filters.status = $event
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$B), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$F), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$E), { value: "all" }, {
                                              default: withCtx(() => [
                                                createTextVNode("All Statuses")
                                              ]),
                                              _: 1
                                            }),
                                            (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                              return openBlock(), createBlock(unref(_sfc_main$E), {
                                                key: status.value,
                                                value: status.value
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(status.label), 1)
                                                ]),
                                                _: 2
                                              }, 1032, ["value"]);
                                            }), 128))
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    }, 8, ["modelValue", "onUpdate:modelValue"]),
                                    createVNode(unref(_sfc_main$G), {
                                      modelValue: filters.priority,
                                      "onUpdate:modelValue": ($event) => filters.priority = $event
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$B), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$F), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$E), { value: "all" }, {
                                              default: withCtx(() => [
                                                createTextVNode("All Priorities")
                                              ]),
                                              _: 1
                                            }),
                                            (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                              return openBlock(), createBlock(unref(_sfc_main$E), {
                                                key: priority.value,
                                                value: priority.value
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(priority.label), 1)
                                                ]),
                                                _: 2
                                              }, 1032, ["value"]);
                                            }), 128))
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    }, 8, ["modelValue", "onUpdate:modelValue"])
                                  ]),
                                  viewMode.value === "list" ? (openBlock(), createBlock(_sfc_main$a, {
                                    key: 0,
                                    tasks: __props.project.tasks,
                                    "task-statuses": __props.taskStatuses,
                                    "task-priorities": __props.taskPriorities,
                                    onEditTask: openEditTaskDialog,
                                    onDeleteTask: deleteTask,
                                    onUpdateTask: updateTask
                                  }, null, 8, ["tasks", "task-statuses", "task-priorities"])) : viewMode.value === "board" ? (openBlock(), createBlock(_sfc_main$9, {
                                    key: 1,
                                    tasks: __props.project.tasks,
                                    "task-priorities": __props.taskPriorities,
                                    onEditTask: openEditTaskDialog,
                                    onDeleteTask: deleteTask,
                                    onTaskMoved: handleTaskMoved
                                  }, null, 8, ["tasks", "task-priorities"])) : createCommentVNode("", true)
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$y), {
                    value: "members",
                    class: "mt-4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$_), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$W), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$V), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`Project Members`);
                                        } else {
                                          return [
                                            createTextVNode("Project Members")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(unref(_sfc_main$Y), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`Users who have access to this project.`);
                                        } else {
                                          return [
                                            createTextVNode("Users who have access to this project.")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$V), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Project Members")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$Y), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Users who have access to this project.")
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$Z), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(_sfc_main$o, {
                                      members: __props.project.members,
                                      "owner-id": __props.project.owner_id
                                    }, null, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(_sfc_main$o, {
                                        members: __props.project.members,
                                        "owner-id": __props.project.owner_id
                                      }, null, 8, ["members", "owner-id"])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$W), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$V), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Project Members")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$Y), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Users who have access to this project.")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$Z), null, {
                                  default: withCtx(() => [
                                    createVNode(_sfc_main$o, {
                                      members: __props.project.members,
                                      "owner-id": __props.project.owner_id
                                    }, null, 8, ["members", "owner-id"])
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$_), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$W), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$V), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Project Members")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$Y), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Users who have access to this project.")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$Z), null, {
                                default: withCtx(() => [
                                  createVNode(_sfc_main$o, {
                                    members: __props.project.members,
                                    "owner-id": __props.project.owner_id
                                  }, null, 8, ["members", "owner-id"])
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$y), {
                    value: "activity",
                    class: "mt-4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$_), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$W), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$V), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`Recent Activity`);
                                        } else {
                                          return [
                                            createTextVNode("Recent Activity")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$V), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Recent Activity")
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$Z), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(_sfc_main$n, {
                                      activities: __props.activities,
                                      "task-statuses": __props.taskStatuses,
                                      "task-priorities": __props.taskPriorities
                                    }, null, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(_sfc_main$n, {
                                        activities: __props.activities,
                                        "task-statuses": __props.taskStatuses,
                                        "task-priorities": __props.taskPriorities
                                      }, null, 8, ["activities", "task-statuses", "task-priorities"])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$W), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$V), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Recent Activity")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$Z), null, {
                                  default: withCtx(() => [
                                    createVNode(_sfc_main$n, {
                                      activities: __props.activities,
                                      "task-statuses": __props.taskStatuses,
                                      "task-priorities": __props.taskPriorities
                                    }, null, 8, ["activities", "task-statuses", "task-priorities"])
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$_), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$W), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$V), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Recent Activity")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$Z), null, {
                                default: withCtx(() => [
                                  createVNode(_sfc_main$n, {
                                    activities: __props.activities,
                                    "task-statuses": __props.taskStatuses,
                                    "task-priorities": __props.taskPriorities
                                  }, null, 8, ["activities", "task-statuses", "task-priorities"])
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  if (canManageProject.value) {
                    _push3(ssrRenderComponent(unref(_sfc_main$y), {
                      value: "settings",
                      class: "mt-4"
                    }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_sfc_main$d, { project: __props.project }, null, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_sfc_main$d, { project: __props.project }, null, 8, ["project"])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    _push3(`<!---->`);
                  }
                } else {
                  return [
                    createVNode(unref(_sfc_main$x), {
                      class: ["grid w-full", canManageProject.value ? "grid-cols-4" : "grid-cols-3"]
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$w), { value: "tasks" }, {
                          default: withCtx(() => [
                            createTextVNode("Tasks")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$w), { value: "members" }, {
                          default: withCtx(() => [
                            createTextVNode("Members")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$w), { value: "activity" }, {
                          default: withCtx(() => [
                            createTextVNode("Activity")
                          ]),
                          _: 1
                        }),
                        canManageProject.value ? (openBlock(), createBlock(unref(_sfc_main$w), {
                          key: 0,
                          value: "settings"
                        }, {
                          default: withCtx(() => [
                            createTextVNode("Settings")
                          ]),
                          _: 1
                        })) : createCommentVNode("", true)
                      ]),
                      _: 1
                    }, 8, ["class"]),
                    createVNode(unref(_sfc_main$y), {
                      value: "tasks",
                      class: "mt-4"
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$_), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$W), { class: "flex flex-row items-center justify-between" }, {
                              default: withCtx(() => [
                                createVNode("div", null, [
                                  createVNode(unref(_sfc_main$V), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Project Tasks")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$Y), null, {
                                    default: withCtx(() => [
                                      createTextVNode("View tasks as a list or a Kanban board.")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                createVNode("div", { class: "flex items-center rounded-md bg-secondary text-secondary-foreground p-1" }, [
                                  createVNode(unref(_sfc_main$1p), {
                                    variant: "ghost",
                                    size: "sm",
                                    onClick: ($event) => viewMode.value = "list",
                                    class: [{ "bg-background text-primary": viewMode.value === "list" }, "h-8 px-3"]
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(List), { class: "h-4 w-4" })
                                    ]),
                                    _: 1
                                  }, 8, ["onClick", "class"]),
                                  createVNode(unref(_sfc_main$1p), {
                                    variant: "ghost",
                                    size: "sm",
                                    onClick: ($event) => viewMode.value = "board",
                                    class: [{ "bg-background text-primary": viewMode.value === "board" }, "h-8 px-3"]
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(Kanban), { class: "h-4 w-4" })
                                    ]),
                                    _: 1
                                  }, 8, ["onClick", "class"])
                                ])
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$Z), null, {
                              default: withCtx(() => [
                                createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 border-b pb-6" }, [
                                  createVNode(unref(_sfc_main$1B), {
                                    modelValue: filters.search,
                                    "onUpdate:modelValue": ($event) => filters.search = $event,
                                    placeholder: "Search task titles..."
                                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                  createVNode(unref(_sfc_main$G), {
                                    modelValue: filters.status,
                                    "onUpdate:modelValue": ($event) => filters.status = $event
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$B), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$F), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$E), { value: "all" }, {
                                            default: withCtx(() => [
                                              createTextVNode("All Statuses")
                                            ]),
                                            _: 1
                                          }),
                                          (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                            return openBlock(), createBlock(unref(_sfc_main$E), {
                                              key: status.value,
                                              value: status.value
                                            }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(status.label), 1)
                                              ]),
                                              _: 2
                                            }, 1032, ["value"]);
                                          }), 128))
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  }, 8, ["modelValue", "onUpdate:modelValue"]),
                                  createVNode(unref(_sfc_main$G), {
                                    modelValue: filters.priority,
                                    "onUpdate:modelValue": ($event) => filters.priority = $event
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$B), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$F), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$E), { value: "all" }, {
                                            default: withCtx(() => [
                                              createTextVNode("All Priorities")
                                            ]),
                                            _: 1
                                          }),
                                          (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                            return openBlock(), createBlock(unref(_sfc_main$E), {
                                              key: priority.value,
                                              value: priority.value
                                            }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(priority.label), 1)
                                              ]),
                                              _: 2
                                            }, 1032, ["value"]);
                                          }), 128))
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  }, 8, ["modelValue", "onUpdate:modelValue"])
                                ]),
                                viewMode.value === "list" ? (openBlock(), createBlock(_sfc_main$a, {
                                  key: 0,
                                  tasks: __props.project.tasks,
                                  "task-statuses": __props.taskStatuses,
                                  "task-priorities": __props.taskPriorities,
                                  onEditTask: openEditTaskDialog,
                                  onDeleteTask: deleteTask,
                                  onUpdateTask: updateTask
                                }, null, 8, ["tasks", "task-statuses", "task-priorities"])) : viewMode.value === "board" ? (openBlock(), createBlock(_sfc_main$9, {
                                  key: 1,
                                  tasks: __props.project.tasks,
                                  "task-priorities": __props.taskPriorities,
                                  onEditTask: openEditTaskDialog,
                                  onDeleteTask: deleteTask,
                                  onTaskMoved: handleTaskMoved
                                }, null, 8, ["tasks", "task-priorities"])) : createCommentVNode("", true)
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$y), {
                      value: "members",
                      class: "mt-4"
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$_), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$W), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$V), null, {
                                  default: withCtx(() => [
                                    createTextVNode("Project Members")
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$Y), null, {
                                  default: withCtx(() => [
                                    createTextVNode("Users who have access to this project.")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$Z), null, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$o, {
                                  members: __props.project.members,
                                  "owner-id": __props.project.owner_id
                                }, null, 8, ["members", "owner-id"])
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$y), {
                      value: "activity",
                      class: "mt-4"
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$_), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$W), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$V), null, {
                                  default: withCtx(() => [
                                    createTextVNode("Recent Activity")
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$Z), null, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$n, {
                                  activities: __props.activities,
                                  "task-statuses": __props.taskStatuses,
                                  "task-priorities": __props.taskPriorities
                                }, null, 8, ["activities", "task-statuses", "task-priorities"])
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    canManageProject.value ? (openBlock(), createBlock(unref(_sfc_main$y), {
                      key: 0,
                      value: "settings",
                      class: "mt-4"
                    }, {
                      default: withCtx(() => [
                        createVNode(_sfc_main$d, { project: __props.project }, null, 8, ["project"])
                      ]),
                      _: 1
                    })) : createCommentVNode("", true)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(Toaster), {
                position: "top-right",
                richColors: ""
              }),
              createVNode(_sfc_main$c, {
                open: isAddTaskDialogOpen.value,
                "onUpdate:open": ($event) => isAddTaskDialogOpen.value = $event,
                project: __props.project,
                members: __props.project.members,
                "task-priorities": __props.taskPriorities
              }, null, 8, ["open", "onUpdate:open", "project", "members", "task-priorities"]),
              createVNode(_sfc_main$b, {
                modelValue: isEditTaskDialogOpen.value,
                "onUpdate:modelValue": ($event) => isEditTaskDialogOpen.value = $event,
                task: editingTask.value,
                members: __props.project.members,
                "task-priorities": __props.taskPriorities,
                onSubmit: (form) => updateTask(editingTask.value, form.data())
              }, null, 8, ["modelValue", "onUpdate:modelValue", "task", "members", "task-priorities", "onSubmit"]),
              canManageProject.value ? (openBlock(), createBlock(_sfc_main$p, {
                key: 0,
                open: isAddMemberDialogOpen.value,
                "onUpdate:open": ($event) => isAddMemberDialogOpen.value = $event,
                project: __props.project
              }, null, 8, ["open", "onUpdate:open", "project"])) : createCommentVNode("", true),
              createVNode("div", { class: "flex flex-col sm:flex-row justify-between sm:items-center gap-4 mb-6" }, [
                createVNode("div", null, [
                  createVNode("h2", { class: "font-semibold text-2xl" }, toDisplayString(__props.project.name), 1),
                  createVNode("p", { class: "text-muted-foreground mt-1" }, toDisplayString(__props.project.description || "No description provided."), 1)
                ]),
                createVNode("div", { class: "flex items-center space-x-2 self-start sm:self-center" }, [
                  canManageProject.value ? (openBlock(), createBlock(unref(_sfc_main$1p), {
                    key: 0,
                    variant: "outline",
                    onClick: ($event) => isAddMemberDialogOpen.value = true
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Add Member ")
                    ]),
                    _: 1
                  }, 8, ["onClick"])) : createCommentVNode("", true),
                  createVNode(unref(_sfc_main$1p), {
                    onClick: ($event) => isAddTaskDialogOpen.value = true
                  }, {
                    default: withCtx(() => [
                      createTextVNode("Create Task")
                    ]),
                    _: 1
                  }, 8, ["onClick"])
                ])
              ]),
              createVNode(unref(_sfc_main$z), {
                "default-value": "tasks",
                class: "w-full"
              }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$x), {
                    class: ["grid w-full", canManageProject.value ? "grid-cols-4" : "grid-cols-3"]
                  }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$w), { value: "tasks" }, {
                        default: withCtx(() => [
                          createTextVNode("Tasks")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$w), { value: "members" }, {
                        default: withCtx(() => [
                          createTextVNode("Members")
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$w), { value: "activity" }, {
                        default: withCtx(() => [
                          createTextVNode("Activity")
                        ]),
                        _: 1
                      }),
                      canManageProject.value ? (openBlock(), createBlock(unref(_sfc_main$w), {
                        key: 0,
                        value: "settings"
                      }, {
                        default: withCtx(() => [
                          createTextVNode("Settings")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }, 8, ["class"]),
                  createVNode(unref(_sfc_main$y), {
                    value: "tasks",
                    class: "mt-4"
                  }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$_), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$W), { class: "flex flex-row items-center justify-between" }, {
                            default: withCtx(() => [
                              createVNode("div", null, [
                                createVNode(unref(_sfc_main$V), null, {
                                  default: withCtx(() => [
                                    createTextVNode("Project Tasks")
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$Y), null, {
                                  default: withCtx(() => [
                                    createTextVNode("View tasks as a list or a Kanban board.")
                                  ]),
                                  _: 1
                                })
                              ]),
                              createVNode("div", { class: "flex items-center rounded-md bg-secondary text-secondary-foreground p-1" }, [
                                createVNode(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "sm",
                                  onClick: ($event) => viewMode.value = "list",
                                  class: [{ "bg-background text-primary": viewMode.value === "list" }, "h-8 px-3"]
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(List), { class: "h-4 w-4" })
                                  ]),
                                  _: 1
                                }, 8, ["onClick", "class"]),
                                createVNode(unref(_sfc_main$1p), {
                                  variant: "ghost",
                                  size: "sm",
                                  onClick: ($event) => viewMode.value = "board",
                                  class: [{ "bg-background text-primary": viewMode.value === "board" }, "h-8 px-3"]
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(Kanban), { class: "h-4 w-4" })
                                  ]),
                                  _: 1
                                }, 8, ["onClick", "class"])
                              ])
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Z), null, {
                            default: withCtx(() => [
                              createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 border-b pb-6" }, [
                                createVNode(unref(_sfc_main$1B), {
                                  modelValue: filters.search,
                                  "onUpdate:modelValue": ($event) => filters.search = $event,
                                  placeholder: "Search task titles..."
                                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                createVNode(unref(_sfc_main$G), {
                                  modelValue: filters.status,
                                  "onUpdate:modelValue": ($event) => filters.status = $event
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$B), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$F), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$E), { value: "all" }, {
                                          default: withCtx(() => [
                                            createTextVNode("All Statuses")
                                          ]),
                                          _: 1
                                        }),
                                        (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                          return openBlock(), createBlock(unref(_sfc_main$E), {
                                            key: status.value,
                                            value: status.value
                                          }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(status.label), 1)
                                            ]),
                                            _: 2
                                          }, 1032, ["value"]);
                                        }), 128))
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }, 8, ["modelValue", "onUpdate:modelValue"]),
                                createVNode(unref(_sfc_main$G), {
                                  modelValue: filters.priority,
                                  "onUpdate:modelValue": ($event) => filters.priority = $event
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$B), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$F), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$E), { value: "all" }, {
                                          default: withCtx(() => [
                                            createTextVNode("All Priorities")
                                          ]),
                                          _: 1
                                        }),
                                        (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                          return openBlock(), createBlock(unref(_sfc_main$E), {
                                            key: priority.value,
                                            value: priority.value
                                          }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(priority.label), 1)
                                            ]),
                                            _: 2
                                          }, 1032, ["value"]);
                                        }), 128))
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }, 8, ["modelValue", "onUpdate:modelValue"])
                              ]),
                              viewMode.value === "list" ? (openBlock(), createBlock(_sfc_main$a, {
                                key: 0,
                                tasks: __props.project.tasks,
                                "task-statuses": __props.taskStatuses,
                                "task-priorities": __props.taskPriorities,
                                onEditTask: openEditTaskDialog,
                                onDeleteTask: deleteTask,
                                onUpdateTask: updateTask
                              }, null, 8, ["tasks", "task-statuses", "task-priorities"])) : viewMode.value === "board" ? (openBlock(), createBlock(_sfc_main$9, {
                                key: 1,
                                tasks: __props.project.tasks,
                                "task-priorities": __props.taskPriorities,
                                onEditTask: openEditTaskDialog,
                                onDeleteTask: deleteTask,
                                onTaskMoved: handleTaskMoved
                              }, null, 8, ["tasks", "task-priorities"])) : createCommentVNode("", true)
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$y), {
                    value: "members",
                    class: "mt-4"
                  }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$_), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$W), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$V), null, {
                                default: withCtx(() => [
                                  createTextVNode("Project Members")
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$Y), null, {
                                default: withCtx(() => [
                                  createTextVNode("Users who have access to this project.")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Z), null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$o, {
                                members: __props.project.members,
                                "owner-id": __props.project.owner_id
                              }, null, 8, ["members", "owner-id"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$y), {
                    value: "activity",
                    class: "mt-4"
                  }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$_), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$W), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$V), null, {
                                default: withCtx(() => [
                                  createTextVNode("Recent Activity")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Z), null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$n, {
                                activities: __props.activities,
                                "task-statuses": __props.taskStatuses,
                                "task-priorities": __props.taskPriorities
                              }, null, 8, ["activities", "task-statuses", "task-priorities"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  canManageProject.value ? (openBlock(), createBlock(unref(_sfc_main$y), {
                    key: 0,
                    value: "settings",
                    class: "mt-4"
                  }, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$d, { project: __props.project }, null, 8, ["project"])
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/app/project/show.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const __vite_glob_0_4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$8
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$7 = {
  __name: "index",
  __ssrInlineRender: true,
  props: {
    tasks: Array,
    filters: Object,
    taskStatuses: Array,
    taskPriorities: Array
  },
  setup(__props) {
    const breadcrumbs = [{ label: "My Tasks", url: "/task" }];
    const props = __props;
    const filters = reactive({
      search: props.filters.search || "",
      status: props.filters.status || "",
      priority: props.filters.priority || ""
    });
    watch(
      filters,
      debounce((newFilters) => {
        router.get(
          "/task",
          {
            search: newFilters.search,
            status: newFilters.status,
            priority: newFilters.priority
          },
          {
            preserveState: true,
            replace: true
          }
        );
      }, 500),
      { deep: true }
    );
    const formatDate = (dateString) => {
      if (!dateString) return "N/A";
      try {
        return format(parseISO(dateString), "MMM d, yyyy");
      } catch (e) {
        return dateString;
      }
    };
    const taskHelper = new TaskHelper();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "My Tasks" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, { breadcrumbs }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex justify-between items-center mb-6"${_scopeId}><h2 class="font-semibold text-xl"${_scopeId}>My Tasks</h2></div>`);
            _push2(ssrRenderComponent(unref(_sfc_main$_), { class: "mb-6" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), { class: "pt-6" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<div class="grid grid-cols-1 md:grid-cols-3 gap-4"${_scopeId3}>`);
                        _push4(ssrRenderComponent(unref(_sfc_main$1B), {
                          modelValue: filters.search,
                          "onUpdate:modelValue": ($event) => filters.search = $event,
                          placeholder: "Search by task title..."
                        }, null, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$G), {
                          modelValue: filters.status,
                          "onUpdate:modelValue": ($event) => filters.status = $event
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$B), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Filter by status" }, null, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$F), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$E), { value: "all" }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`All Statuses`);
                                        } else {
                                          return [
                                            createTextVNode("All Statuses")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(`<!--[-->`);
                                    ssrRenderList(__props.taskStatuses, (status) => {
                                      _push6(ssrRenderComponent(unref(_sfc_main$E), {
                                        key: status.label,
                                        value: status.value
                                      }, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(`${ssrInterpolate(status.label)}`);
                                          } else {
                                            return [
                                              createTextVNode(toDisplayString(status.label), 1)
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                    });
                                    _push6(`<!--]-->`);
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$E), { value: "all" }, {
                                        default: withCtx(() => [
                                          createTextVNode("All Statuses")
                                        ]),
                                        _: 1
                                      }),
                                      (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                        return openBlock(), createBlock(unref(_sfc_main$E), {
                                          key: status.label,
                                          value: status.value
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(status.label), 1)
                                          ]),
                                          _: 2
                                        }, 1032, ["value"]);
                                      }), 128))
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$B), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$F), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$E), { value: "all" }, {
                                      default: withCtx(() => [
                                        createTextVNode("All Statuses")
                                      ]),
                                      _: 1
                                    }),
                                    (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                      return openBlock(), createBlock(unref(_sfc_main$E), {
                                        key: status.label,
                                        value: status.value
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(status.label), 1)
                                        ]),
                                        _: 2
                                      }, 1032, ["value"]);
                                    }), 128))
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$G), {
                          modelValue: filters.priority,
                          "onUpdate:modelValue": ($event) => filters.priority = $event
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$B), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$A), { placeholder: "Filter by priority" }, null, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$F), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$E), { value: "all" }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`All Priorities`);
                                        } else {
                                          return [
                                            createTextVNode("All Priorities")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                    _push6(`<!--[-->`);
                                    ssrRenderList(__props.taskPriorities, (priority) => {
                                      _push6(ssrRenderComponent(unref(_sfc_main$E), {
                                        key: priority.label,
                                        value: priority.value
                                      }, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(`${ssrInterpolate(priority.label)}`);
                                          } else {
                                            return [
                                              createTextVNode(toDisplayString(priority.label), 1)
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                    });
                                    _push6(`<!--]-->`);
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$E), { value: "all" }, {
                                        default: withCtx(() => [
                                          createTextVNode("All Priorities")
                                        ]),
                                        _: 1
                                      }),
                                      (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                        return openBlock(), createBlock(unref(_sfc_main$E), {
                                          key: priority.label,
                                          value: priority.value
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(priority.label), 1)
                                          ]),
                                          _: 2
                                        }, 1032, ["value"]);
                                      }), 128))
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$B), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$F), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$E), { value: "all" }, {
                                      default: withCtx(() => [
                                        createTextVNode("All Priorities")
                                      ]),
                                      _: 1
                                    }),
                                    (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                      return openBlock(), createBlock(unref(_sfc_main$E), {
                                        key: priority.label,
                                        value: priority.value
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(priority.label), 1)
                                        ]),
                                        _: 2
                                      }, 1032, ["value"]);
                                    }), 128))
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(`</div>`);
                      } else {
                        return [
                          createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4" }, [
                            createVNode(unref(_sfc_main$1B), {
                              modelValue: filters.search,
                              "onUpdate:modelValue": ($event) => filters.search = $event,
                              placeholder: "Search by task title..."
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                            createVNode(unref(_sfc_main$G), {
                              modelValue: filters.status,
                              "onUpdate:modelValue": ($event) => filters.status = $event
                            }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$B), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$F), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$E), { value: "all" }, {
                                      default: withCtx(() => [
                                        createTextVNode("All Statuses")
                                      ]),
                                      _: 1
                                    }),
                                    (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                      return openBlock(), createBlock(unref(_sfc_main$E), {
                                        key: status.label,
                                        value: status.value
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(status.label), 1)
                                        ]),
                                        _: 2
                                      }, 1032, ["value"]);
                                    }), 128))
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }, 8, ["modelValue", "onUpdate:modelValue"]),
                            createVNode(unref(_sfc_main$G), {
                              modelValue: filters.priority,
                              "onUpdate:modelValue": ($event) => filters.priority = $event
                            }, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$B), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$F), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$E), { value: "all" }, {
                                      default: withCtx(() => [
                                        createTextVNode("All Priorities")
                                      ]),
                                      _: 1
                                    }),
                                    (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                      return openBlock(), createBlock(unref(_sfc_main$E), {
                                        key: priority.label,
                                        value: priority.value
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(priority.label), 1)
                                        ]),
                                        _: 2
                                      }, 1032, ["value"]);
                                    }), 128))
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }, 8, ["modelValue", "onUpdate:modelValue"])
                          ])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$Z), { class: "pt-6" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4" }, [
                          createVNode(unref(_sfc_main$1B), {
                            modelValue: filters.search,
                            "onUpdate:modelValue": ($event) => filters.search = $event,
                            placeholder: "Search by task title..."
                          }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                          createVNode(unref(_sfc_main$G), {
                            modelValue: filters.status,
                            "onUpdate:modelValue": ($event) => filters.status = $event
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$B), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$F), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$E), { value: "all" }, {
                                    default: withCtx(() => [
                                      createTextVNode("All Statuses")
                                    ]),
                                    _: 1
                                  }),
                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                      key: status.label,
                                      value: status.value
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(status.label), 1)
                                      ]),
                                      _: 2
                                    }, 1032, ["value"]);
                                  }), 128))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["modelValue", "onUpdate:modelValue"]),
                          createVNode(unref(_sfc_main$G), {
                            modelValue: filters.priority,
                            "onUpdate:modelValue": ($event) => filters.priority = $event
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$B), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$F), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$E), { value: "all" }, {
                                    default: withCtx(() => [
                                      createTextVNode("All Priorities")
                                    ]),
                                    _: 1
                                  }),
                                  (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                    return openBlock(), createBlock(unref(_sfc_main$E), {
                                      key: priority.label,
                                      value: priority.value
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(priority.label), 1)
                                      ]),
                                      _: 2
                                    }, 1032, ["value"]);
                                  }), 128))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["modelValue", "onUpdate:modelValue"])
                        ])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$_), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`All Assigned Tasks`);
                            } else {
                              return [
                                createTextVNode("All Assigned Tasks")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("All Assigned Tasks")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$T), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(unref(_sfc_main$O), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(unref(_sfc_main$Q), null, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(unref(_sfc_main$P), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(`Status`);
                                              } else {
                                                return [
                                                  createTextVNode("Status")
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$P), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(`Task`);
                                              } else {
                                                return [
                                                  createTextVNode("Task")
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$P), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(`Project`);
                                              } else {
                                                return [
                                                  createTextVNode("Project")
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$P), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(`Due Date`);
                                              } else {
                                                return [
                                                  createTextVNode("Due Date")
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                          _push7(ssrRenderComponent(unref(_sfc_main$P), null, {
                                            default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                              if (_push8) {
                                                _push8(`Priority`);
                                              } else {
                                                return [
                                                  createTextVNode("Priority")
                                                ];
                                              }
                                            }),
                                            _: 1
                                          }, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(unref(_sfc_main$P), null, {
                                              default: withCtx(() => [
                                                createTextVNode("Status")
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$P), null, {
                                              default: withCtx(() => [
                                                createTextVNode("Task")
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$P), null, {
                                              default: withCtx(() => [
                                                createTextVNode("Project")
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$P), null, {
                                              default: withCtx(() => [
                                                createTextVNode("Due Date")
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(unref(_sfc_main$P), null, {
                                              default: withCtx(() => [
                                                createTextVNode("Priority")
                                              ]),
                                              _: 1
                                            })
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(unref(_sfc_main$Q), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$P), null, {
                                            default: withCtx(() => [
                                              createTextVNode("Status")
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$P), null, {
                                            default: withCtx(() => [
                                              createTextVNode("Task")
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$P), null, {
                                            default: withCtx(() => [
                                              createTextVNode("Project")
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$P), null, {
                                            default: withCtx(() => [
                                              createTextVNode("Due Date")
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(unref(_sfc_main$P), null, {
                                            default: withCtx(() => [
                                              createTextVNode("Priority")
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(unref(_sfc_main$S), null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    if (__props.tasks.length > 0) {
                                      _push6(`<!--[-->`);
                                      ssrRenderList(__props.tasks, (task) => {
                                        _push6(ssrRenderComponent(unref(_sfc_main$Q), {
                                          key: task.id,
                                          class: "hover:bg-muted/90 cursor-pointer",
                                          onClick: ($event) => unref(router).get(`/project/${task.project.id}`)
                                        }, {
                                          default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                            if (_push7) {
                                              _push7(ssrRenderComponent(unref(_sfc_main$R), null, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(ssrRenderComponent(unref(_sfc_main$N), {
                                                      variant: unref(taskHelper).getStatusVariant(task.status),
                                                      class: "berai-font-mono"
                                                    }, {
                                                      default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                        if (_push9) {
                                                          _push9(`${ssrInterpolate(unref(taskHelper).getStatusLabel(task.status))}`);
                                                        } else {
                                                          return [
                                                            createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                                          ];
                                                        }
                                                      }),
                                                      _: 2
                                                    }, _parent8, _scopeId7));
                                                  } else {
                                                    return [
                                                      createVNode(unref(_sfc_main$N), {
                                                        variant: unref(taskHelper).getStatusVariant(task.status),
                                                        class: "berai-font-mono"
                                                      }, {
                                                        default: withCtx(() => [
                                                          createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["variant"])
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                              _push7(ssrRenderComponent(unref(_sfc_main$R), { class: "font-medium" }, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(`${ssrInterpolate(task.title)}`);
                                                  } else {
                                                    return [
                                                      createTextVNode(toDisplayString(task.title), 1)
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                              _push7(ssrRenderComponent(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(`${ssrInterpolate(task.project.name)}`);
                                                  } else {
                                                    return [
                                                      createTextVNode(toDisplayString(task.project.name), 1)
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                              _push7(ssrRenderComponent(unref(_sfc_main$R), null, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(`${ssrInterpolate(formatDate(task.due_date))}`);
                                                  } else {
                                                    return [
                                                      createTextVNode(toDisplayString(formatDate(task.due_date)), 1)
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                              _push7(ssrRenderComponent(unref(_sfc_main$R), null, {
                                                default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                  if (_push8) {
                                                    _push8(ssrRenderComponent(unref(_sfc_main$N), {
                                                      variant: unref(taskHelper).getPriorityVariant(task.priority),
                                                      class: "berai-font-mono"
                                                    }, {
                                                      default: withCtx((_8, _push9, _parent9, _scopeId8) => {
                                                        if (_push9) {
                                                          _push9(`${ssrInterpolate(unref(taskHelper).getPriorityLabel(task.priority))}`);
                                                        } else {
                                                          return [
                                                            createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                                          ];
                                                        }
                                                      }),
                                                      _: 2
                                                    }, _parent8, _scopeId7));
                                                  } else {
                                                    return [
                                                      createVNode(unref(_sfc_main$N), {
                                                        variant: unref(taskHelper).getPriorityVariant(task.priority),
                                                        class: "berai-font-mono"
                                                      }, {
                                                        default: withCtx(() => [
                                                          createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["variant"])
                                                    ];
                                                  }
                                                }),
                                                _: 2
                                              }, _parent7, _scopeId6));
                                            } else {
                                              return [
                                                createVNode(unref(_sfc_main$R), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$N), {
                                                      variant: unref(taskHelper).getStatusVariant(task.status),
                                                      class: "berai-font-mono"
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["variant"])
                                                  ]),
                                                  _: 2
                                                }, 1024),
                                                createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(task.title), 1)
                                                  ]),
                                                  _: 2
                                                }, 1024),
                                                createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(task.project.name), 1)
                                                  ]),
                                                  _: 2
                                                }, 1024),
                                                createVNode(unref(_sfc_main$R), null, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(formatDate(task.due_date)), 1)
                                                  ]),
                                                  _: 2
                                                }, 1024),
                                                createVNode(unref(_sfc_main$R), null, {
                                                  default: withCtx(() => [
                                                    createVNode(unref(_sfc_main$N), {
                                                      variant: unref(taskHelper).getPriorityVariant(task.priority),
                                                      class: "berai-font-mono"
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["variant"])
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ];
                                            }
                                          }),
                                          _: 2
                                        }, _parent6, _scopeId5));
                                      });
                                      _push6(`<!--]-->`);
                                    } else {
                                      _push6(ssrRenderComponent(unref(_sfc_main$Q), null, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(unref(_sfc_main$R), {
                                              colspan: "4",
                                              class: "text-center text-muted-foreground py-12"
                                            }, {
                                              default: withCtx((_7, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(` No tasks match your current filters. `);
                                                } else {
                                                  return [
                                                    createTextVNode(" No tasks match your current filters. ")
                                                  ];
                                                }
                                              }),
                                              _: 1
                                            }, _parent7, _scopeId6));
                                          } else {
                                            return [
                                              createVNode(unref(_sfc_main$R), {
                                                colspan: "4",
                                                class: "text-center text-muted-foreground py-12"
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(" No tasks match your current filters. ")
                                                ]),
                                                _: 1
                                              })
                                            ];
                                          }
                                        }),
                                        _: 1
                                      }, _parent6, _scopeId5));
                                    }
                                  } else {
                                    return [
                                      __props.tasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.tasks, (task) => {
                                        return openBlock(), createBlock(unref(_sfc_main$Q), {
                                          key: task.id,
                                          class: "hover:bg-muted/90 cursor-pointer",
                                          onClick: ($event) => unref(router).get(`/project/${task.project.id}`)
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$R), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$N), {
                                                  variant: unref(taskHelper).getStatusVariant(task.status),
                                                  class: "berai-font-mono"
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["variant"])
                                              ]),
                                              _: 2
                                            }, 1024),
                                            createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(task.title), 1)
                                              ]),
                                              _: 2
                                            }, 1024),
                                            createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(task.project.name), 1)
                                              ]),
                                              _: 2
                                            }, 1024),
                                            createVNode(unref(_sfc_main$R), null, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(formatDate(task.due_date)), 1)
                                              ]),
                                              _: 2
                                            }, 1024),
                                            createVNode(unref(_sfc_main$R), null, {
                                              default: withCtx(() => [
                                                createVNode(unref(_sfc_main$N), {
                                                  variant: unref(taskHelper).getPriorityVariant(task.priority),
                                                  class: "berai-font-mono"
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["variant"])
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1032, ["onClick"]);
                                      }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$R), {
                                            colspan: "4",
                                            class: "text-center text-muted-foreground py-12"
                                          }, {
                                            default: withCtx(() => [
                                              createTextVNode(" No tasks match your current filters. ")
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }))
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(unref(_sfc_main$O), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$Q), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$P), null, {
                                          default: withCtx(() => [
                                            createTextVNode("Status")
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$P), null, {
                                          default: withCtx(() => [
                                            createTextVNode("Task")
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$P), null, {
                                          default: withCtx(() => [
                                            createTextVNode("Project")
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$P), null, {
                                          default: withCtx(() => [
                                            createTextVNode("Due Date")
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(unref(_sfc_main$P), null, {
                                          default: withCtx(() => [
                                            createTextVNode("Priority")
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(unref(_sfc_main$S), null, {
                                  default: withCtx(() => [
                                    __props.tasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.tasks, (task) => {
                                      return openBlock(), createBlock(unref(_sfc_main$Q), {
                                        key: task.id,
                                        class: "hover:bg-muted/90 cursor-pointer",
                                        onClick: ($event) => unref(router).get(`/project/${task.project.id}`)
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$R), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$N), {
                                                variant: unref(taskHelper).getStatusVariant(task.status),
                                                class: "berai-font-mono"
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                                ]),
                                                _: 2
                                              }, 1032, ["variant"])
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(task.title), 1)
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(task.project.name), 1)
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$R), null, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(formatDate(task.due_date)), 1)
                                            ]),
                                            _: 2
                                          }, 1024),
                                          createVNode(unref(_sfc_main$R), null, {
                                            default: withCtx(() => [
                                              createVNode(unref(_sfc_main$N), {
                                                variant: unref(taskHelper).getPriorityVariant(task.priority),
                                                class: "berai-font-mono"
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                                ]),
                                                _: 2
                                              }, 1032, ["variant"])
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1032, ["onClick"]);
                                    }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$R), {
                                          colspan: "4",
                                          class: "text-center text-muted-foreground py-12"
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(" No tasks match your current filters. ")
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 1
                                    }))
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$T), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$O), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$Q), null, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$P), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Status")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$P), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Task")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$P), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Project")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$P), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Due Date")
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(unref(_sfc_main$P), null, {
                                        default: withCtx(() => [
                                          createTextVNode("Priority")
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode(unref(_sfc_main$S), null, {
                                default: withCtx(() => [
                                  __props.tasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.tasks, (task) => {
                                    return openBlock(), createBlock(unref(_sfc_main$Q), {
                                      key: task.id,
                                      class: "hover:bg-muted/90 cursor-pointer",
                                      onClick: ($event) => unref(router).get(`/project/${task.project.id}`)
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$R), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$N), {
                                              variant: unref(taskHelper).getStatusVariant(task.status),
                                              class: "berai-font-mono"
                                            }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                              ]),
                                              _: 2
                                            }, 1032, ["variant"])
                                          ]),
                                          _: 2
                                        }, 1024),
                                        createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(task.title), 1)
                                          ]),
                                          _: 2
                                        }, 1024),
                                        createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(task.project.name), 1)
                                          ]),
                                          _: 2
                                        }, 1024),
                                        createVNode(unref(_sfc_main$R), null, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(formatDate(task.due_date)), 1)
                                          ]),
                                          _: 2
                                        }, 1024),
                                        createVNode(unref(_sfc_main$R), null, {
                                          default: withCtx(() => [
                                            createVNode(unref(_sfc_main$N), {
                                              variant: unref(taskHelper).getPriorityVariant(task.priority),
                                              class: "berai-font-mono"
                                            }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                              ]),
                                              _: 2
                                            }, 1032, ["variant"])
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1032, ["onClick"]);
                                  }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$R), {
                                        colspan: "4",
                                        class: "text-center text-muted-foreground py-12"
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(" No tasks match your current filters. ")
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    _: 1
                                  }))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("All Assigned Tasks")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$T), null, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$O), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$Q), null, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$P), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Status")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$P), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Task")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$P), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Project")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$P), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Due Date")
                                      ]),
                                      _: 1
                                    }),
                                    createVNode(unref(_sfc_main$P), null, {
                                      default: withCtx(() => [
                                        createTextVNode("Priority")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$S), null, {
                              default: withCtx(() => [
                                __props.tasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.tasks, (task) => {
                                  return openBlock(), createBlock(unref(_sfc_main$Q), {
                                    key: task.id,
                                    class: "hover:bg-muted/90 cursor-pointer",
                                    onClick: ($event) => unref(router).get(`/project/${task.project.id}`)
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$R), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$N), {
                                            variant: unref(taskHelper).getStatusVariant(task.status),
                                            class: "berai-font-mono"
                                          }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                            ]),
                                            _: 2
                                          }, 1032, ["variant"])
                                        ]),
                                        _: 2
                                      }, 1024),
                                      createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(task.title), 1)
                                        ]),
                                        _: 2
                                      }, 1024),
                                      createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(task.project.name), 1)
                                        ]),
                                        _: 2
                                      }, 1024),
                                      createVNode(unref(_sfc_main$R), null, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(formatDate(task.due_date)), 1)
                                        ]),
                                        _: 2
                                      }, 1024),
                                      createVNode(unref(_sfc_main$R), null, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$N), {
                                            variant: unref(taskHelper).getPriorityVariant(task.priority),
                                            class: "berai-font-mono"
                                          }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                            ]),
                                            _: 2
                                          }, 1032, ["variant"])
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"]);
                                }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$R), {
                                      colspan: "4",
                                      class: "text-center text-muted-foreground py-12"
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(" No tasks match your current filters. ")
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode("div", { class: "flex justify-between items-center mb-6" }, [
                createVNode("h2", { class: "font-semibold text-xl" }, "My Tasks")
              ]),
              createVNode(unref(_sfc_main$_), { class: "mb-6" }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$Z), { class: "pt-6" }, {
                    default: withCtx(() => [
                      createVNode("div", { class: "grid grid-cols-1 md:grid-cols-3 gap-4" }, [
                        createVNode(unref(_sfc_main$1B), {
                          modelValue: filters.search,
                          "onUpdate:modelValue": ($event) => filters.search = $event,
                          placeholder: "Search by task title..."
                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                        createVNode(unref(_sfc_main$G), {
                          modelValue: filters.status,
                          "onUpdate:modelValue": ($event) => filters.status = $event
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$B), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$A), { placeholder: "Filter by status" })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$F), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$E), { value: "all" }, {
                                  default: withCtx(() => [
                                    createTextVNode("All Statuses")
                                  ]),
                                  _: 1
                                }),
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskStatuses, (status) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: status.label,
                                    value: status.value
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(status.label), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["modelValue", "onUpdate:modelValue"]),
                        createVNode(unref(_sfc_main$G), {
                          modelValue: filters.priority,
                          "onUpdate:modelValue": ($event) => filters.priority = $event
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$B), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$A), { placeholder: "Filter by priority" })
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$F), null, {
                              default: withCtx(() => [
                                createVNode(unref(_sfc_main$E), { value: "all" }, {
                                  default: withCtx(() => [
                                    createTextVNode("All Priorities")
                                  ]),
                                  _: 1
                                }),
                                (openBlock(true), createBlock(Fragment, null, renderList(__props.taskPriorities, (priority) => {
                                  return openBlock(), createBlock(unref(_sfc_main$E), {
                                    key: priority.label,
                                    value: priority.value
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(priority.label), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["value"]);
                                }), 128))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["modelValue", "onUpdate:modelValue"])
                      ])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$_), null, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$W), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$V), null, {
                        default: withCtx(() => [
                          createTextVNode("All Assigned Tasks")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$Z), null, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$T), null, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$O), null, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$Q), null, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$P), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Status")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$P), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Task")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$P), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Project")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$P), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Due Date")
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(unref(_sfc_main$P), null, {
                                    default: withCtx(() => [
                                      createTextVNode("Priority")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$S), null, {
                            default: withCtx(() => [
                              __props.tasks.length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(__props.tasks, (task) => {
                                return openBlock(), createBlock(unref(_sfc_main$Q), {
                                  key: task.id,
                                  class: "hover:bg-muted/90 cursor-pointer",
                                  onClick: ($event) => unref(router).get(`/project/${task.project.id}`)
                                }, {
                                  default: withCtx(() => [
                                    createVNode(unref(_sfc_main$R), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$N), {
                                          variant: unref(taskHelper).getStatusVariant(task.status),
                                          class: "berai-font-mono"
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(unref(taskHelper).getStatusLabel(task.status)), 1)
                                          ]),
                                          _: 2
                                        }, 1032, ["variant"])
                                      ]),
                                      _: 2
                                    }, 1024),
                                    createVNode(unref(_sfc_main$R), { class: "font-medium" }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(task.title), 1)
                                      ]),
                                      _: 2
                                    }, 1024),
                                    createVNode(unref(_sfc_main$R), { class: "text-muted-foreground" }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(task.project.name), 1)
                                      ]),
                                      _: 2
                                    }, 1024),
                                    createVNode(unref(_sfc_main$R), null, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(formatDate(task.due_date)), 1)
                                      ]),
                                      _: 2
                                    }, 1024),
                                    createVNode(unref(_sfc_main$R), null, {
                                      default: withCtx(() => [
                                        createVNode(unref(_sfc_main$N), {
                                          variant: unref(taskHelper).getPriorityVariant(task.priority),
                                          class: "berai-font-mono"
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(unref(taskHelper).getPriorityLabel(task.priority)), 1)
                                          ]),
                                          _: 2
                                        }, 1032, ["variant"])
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ]),
                                  _: 2
                                }, 1032, ["onClick"]);
                              }), 128)) : (openBlock(), createBlock(unref(_sfc_main$Q), { key: 1 }, {
                                default: withCtx(() => [
                                  createVNode(unref(_sfc_main$R), {
                                    colspan: "4",
                                    class: "text-center text-muted-foreground py-12"
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(" No tasks match your current filters. ")
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }))
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/app/task/index.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
const __vite_glob_0_5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$7
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$6 = {
  __name: "welcome",
  __ssrInlineRender: true,
  setup(__props) {
    const breadcrumbs = [{ label: "Welcome" }];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Welcome!" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, { breadcrumbs }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="max-w-3xl mx-auto sm:px-6 lg:px-8 py-12"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(_sfc_main$_), { class: "text-center" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$W), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$V), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Welcome to Berai!`);
                            } else {
                              return [
                                createTextVNode("Welcome to Berai!")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(unref(_sfc_main$Y), null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(` We&#39;re excited to have you on board. The first step to getting organized is to create your first project. `);
                            } else {
                              return [
                                createTextVNode(" We're excited to have you on board. The first step to getting organized is to create your first project. ")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(unref(_sfc_main$V), null, {
                            default: withCtx(() => [
                              createTextVNode("Welcome to Berai!")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$Y), null, {
                            default: withCtx(() => [
                              createTextVNode(" We're excited to have you on board. The first step to getting organized is to create your first project. ")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Z), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(unref(_sfc_main$1p), {
                          size: "lg",
                          "as-child": "",
                          class: "mt-1"
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(_sfc_main$1n, { href: "/project/create" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(` Create Your First Project `);
                                  } else {
                                    return [
                                      createTextVNode(" Create Your First Project ")
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(_sfc_main$1n, { href: "/project/create" }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Create Your First Project ")
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(`<div class="mt-2"${_scopeId3}>`);
                        _push4(ssrRenderComponent(_sfc_main$1n, {
                          href: "/dashboard",
                          class: "text-sm text-muted-foreground hover:text-primary transition-colors"
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(` I&#39;ll do this later, take me to my dashboard `);
                            } else {
                              return [
                                createTextVNode(" I'll do this later, take me to my dashboard ")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(`</div>`);
                      } else {
                        return [
                          createVNode(unref(_sfc_main$1p), {
                            size: "lg",
                            "as-child": "",
                            class: "mt-1"
                          }, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1n, { href: "/project/create" }, {
                                default: withCtx(() => [
                                  createTextVNode(" Create Your First Project ")
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode("div", { class: "mt-2" }, [
                            createVNode(_sfc_main$1n, {
                              href: "/dashboard",
                              class: "text-sm text-muted-foreground hover:text-primary transition-colors"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" I'll do this later, take me to my dashboard ")
                              ]),
                              _: 1
                            })
                          ])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Welcome to Berai!")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Y), null, {
                          default: withCtx(() => [
                            createTextVNode(" We're excited to have you on board. The first step to getting organized is to create your first project. ")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$1p), {
                          size: "lg",
                          "as-child": "",
                          class: "mt-1"
                        }, {
                          default: withCtx(() => [
                            createVNode(_sfc_main$1n, { href: "/project/create" }, {
                              default: withCtx(() => [
                                createTextVNode(" Create Your First Project ")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "mt-2" }, [
                          createVNode(_sfc_main$1n, {
                            href: "/dashboard",
                            class: "text-sm text-muted-foreground hover:text-primary transition-colors"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" I'll do this later, take me to my dashboard ")
                            ]),
                            _: 1
                          })
                        ])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "max-w-3xl mx-auto sm:px-6 lg:px-8 py-12" }, [
                createVNode(unref(_sfc_main$_), { class: "text-center" }, {
                  default: withCtx(() => [
                    createVNode(unref(_sfc_main$W), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$V), null, {
                          default: withCtx(() => [
                            createTextVNode("Welcome to Berai!")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$Y), null, {
                          default: withCtx(() => [
                            createTextVNode(" We're excited to have you on board. The first step to getting organized is to create your first project. ")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Z), null, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$1p), {
                          size: "lg",
                          "as-child": "",
                          class: "mt-1"
                        }, {
                          default: withCtx(() => [
                            createVNode(_sfc_main$1n, { href: "/project/create" }, {
                              default: withCtx(() => [
                                createTextVNode(" Create Your First Project ")
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "mt-2" }, [
                          createVNode(_sfc_main$1n, {
                            href: "/dashboard",
                            class: "text-sm text-muted-foreground hover:text-primary transition-colors"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" I'll do this later, take me to my dashboard ")
                            ]),
                            _: 1
                          })
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/app/welcome.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const __vite_glob_0_6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$6
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$5 = {
  __name: "login-form",
  __ssrInlineRender: true,
  setup(__props) {
    const form = useForm({
      email: "",
      password: ""
    });
    const loading = ref(false);
    const handleLogin = () => {
      loading.value = true;
      form.post("/login", {
        onSuccess: () => {
          loading.value = false;
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col gap-6" }, _attrs))}>`);
      _push(ssrRenderComponent(unref(_sfc_main$_), null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$W), { class: "text-center" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$V), { class: "text-xl" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Welcome back `);
                      } else {
                        return [
                          createTextVNode(" Welcome back ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Y), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Login with your Apple or Google account `);
                      } else {
                        return [
                          createTextVNode(" Login with your Apple or Google account ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$V), { class: "text-xl" }, {
                      default: withCtx(() => [
                        createTextVNode(" Welcome back ")
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Y), null, {
                      default: withCtx(() => [
                        createTextVNode(" Login with your Apple or Google account ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$Z), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<form${_scopeId2}><div class="grid gap-6"${_scopeId2}><div class="flex flex-col gap-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    variant: "outline",
                    class: "w-full"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"${_scopeId3}><path d="M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701" fill="currentColor"${_scopeId3}></path></svg> Login with Apple `);
                      } else {
                        return [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              d: "M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701",
                              fill: "currentColor"
                            })
                          ])),
                          createTextVNode(" Login with Apple ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    variant: "outline",
                    class: "w-full"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"${_scopeId3}><path d="M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z" fill="currentColor"${_scopeId3}></path></svg> Login with Google `);
                      } else {
                        return [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              d: "M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z",
                              fill: "currentColor"
                            })
                          ])),
                          createTextVNode(" Login with Google ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div><div class="relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border"${_scopeId2}><span class="relative z-10 bg-background px-2 text-muted-foreground"${_scopeId2}> Or continue with </span></div><div class="grid gap-6"${_scopeId2}><div class="grid gap-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { "html-for": "email" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Email`);
                      } else {
                        return [
                          createTextVNode("Email")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "email",
                    type: "email",
                    placeholder: "test@example.com",
                    modelValue: unref(form).email,
                    "onUpdate:modelValue": ($event) => unref(form).email = $event,
                    required: ""
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><div class="grid gap-2"${_scopeId2}><div class="flex items-center"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { "html-for": "password" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Password`);
                      } else {
                        return [
                          createTextVNode("Password")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`<a href="#" class="ml-auto text-sm underline-offset-4 hover:underline"${_scopeId2}> Forgot your password? </a></div>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "password",
                    type: "password",
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    required: ""
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    type: "submit",
                    class: "w-full",
                    disabled: loading.value
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        if (loading.value) {
                          _push4(ssrRenderComponent(unref(Loader), { class: "animate-spin" }, null, _parent4, _scopeId3));
                        } else {
                          _push4(`<!---->`);
                        }
                        _push4(` Login `);
                      } else {
                        return [
                          loading.value ? (openBlock(), createBlock(unref(Loader), {
                            key: 0,
                            class: "animate-spin"
                          })) : createCommentVNode("", true),
                          createTextVNode(" Login ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div><div class="text-center text-sm"${_scopeId2}> Don&#39;t have an account? `);
                  _push3(ssrRenderComponent(unref(Link), {
                    href: "/register",
                    class: "underline underline-offset-4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Sign up `);
                      } else {
                        return [
                          createTextVNode(" Sign up ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div></div></form>`);
                } else {
                  return [
                    createVNode("form", {
                      onSubmit: withModifiers(handleLogin, ["prevent"])
                    }, [
                      createVNode("div", { class: "grid gap-6" }, [
                        createVNode("div", { class: "flex flex-col gap-4" }, [
                          createVNode(unref(_sfc_main$1p), {
                            variant: "outline",
                            class: "w-full"
                          }, {
                            default: withCtx(() => [
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                viewBox: "0 0 24 24"
                              }, [
                                createVNode("path", {
                                  d: "M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701",
                                  fill: "currentColor"
                                })
                              ])),
                              createTextVNode(" Login with Apple ")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1p), {
                            variant: "outline",
                            class: "w-full"
                          }, {
                            default: withCtx(() => [
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                viewBox: "0 0 24 24"
                              }, [
                                createVNode("path", {
                                  d: "M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z",
                                  fill: "currentColor"
                                })
                              ])),
                              createTextVNode(" Login with Google ")
                            ]),
                            _: 1
                          })
                        ]),
                        createVNode("div", { class: "relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border" }, [
                          createVNode("span", { class: "relative z-10 bg-background px-2 text-muted-foreground" }, " Or continue with ")
                        ]),
                        createVNode("div", { class: "grid gap-6" }, [
                          createVNode("div", { class: "grid gap-2" }, [
                            createVNode(unref(_sfc_main$L), { "html-for": "email" }, {
                              default: withCtx(() => [
                                createTextVNode("Email")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "email",
                              type: "email",
                              placeholder: "test@example.com",
                              modelValue: unref(form).email,
                              "onUpdate:modelValue": ($event) => unref(form).email = $event,
                              required: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          createVNode("div", { class: "grid gap-2" }, [
                            createVNode("div", { class: "flex items-center" }, [
                              createVNode(unref(_sfc_main$L), { "html-for": "password" }, {
                                default: withCtx(() => [
                                  createTextVNode("Password")
                                ]),
                                _: 1
                              }),
                              createVNode("a", {
                                href: "#",
                                class: "ml-auto text-sm underline-offset-4 hover:underline"
                              }, " Forgot your password? ")
                            ]),
                            createVNode(unref(_sfc_main$1B), {
                              id: "password",
                              type: "password",
                              modelValue: unref(form).password,
                              "onUpdate:modelValue": ($event) => unref(form).password = $event,
                              required: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          createVNode(unref(_sfc_main$1p), {
                            type: "submit",
                            class: "w-full",
                            disabled: loading.value
                          }, {
                            default: withCtx(() => [
                              loading.value ? (openBlock(), createBlock(unref(Loader), {
                                key: 0,
                                class: "animate-spin"
                              })) : createCommentVNode("", true),
                              createTextVNode(" Login ")
                            ]),
                            _: 1
                          }, 8, ["disabled"])
                        ]),
                        createVNode("div", { class: "text-center text-sm" }, [
                          createTextVNode(" Don't have an account? "),
                          createVNode(unref(Link), {
                            href: "/register",
                            class: "underline underline-offset-4"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Sign up ")
                            ]),
                            _: 1
                          })
                        ])
                      ])
                    ], 32)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$W), { class: "text-center" }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$V), { class: "text-xl" }, {
                    default: withCtx(() => [
                      createTextVNode(" Welcome back ")
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$Y), null, {
                    default: withCtx(() => [
                      createTextVNode(" Login with your Apple or Google account ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$Z), null, {
                default: withCtx(() => [
                  createVNode("form", {
                    onSubmit: withModifiers(handleLogin, ["prevent"])
                  }, [
                    createVNode("div", { class: "grid gap-6" }, [
                      createVNode("div", { class: "flex flex-col gap-4" }, [
                        createVNode(unref(_sfc_main$1p), {
                          variant: "outline",
                          class: "w-full"
                        }, {
                          default: withCtx(() => [
                            (openBlock(), createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("path", {
                                d: "M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701",
                                fill: "currentColor"
                              })
                            ])),
                            createTextVNode(" Login with Apple ")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1p), {
                          variant: "outline",
                          class: "w-full"
                        }, {
                          default: withCtx(() => [
                            (openBlock(), createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("path", {
                                d: "M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z",
                                fill: "currentColor"
                              })
                            ])),
                            createTextVNode(" Login with Google ")
                          ]),
                          _: 1
                        })
                      ]),
                      createVNode("div", { class: "relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border" }, [
                        createVNode("span", { class: "relative z-10 bg-background px-2 text-muted-foreground" }, " Or continue with ")
                      ]),
                      createVNode("div", { class: "grid gap-6" }, [
                        createVNode("div", { class: "grid gap-2" }, [
                          createVNode(unref(_sfc_main$L), { "html-for": "email" }, {
                            default: withCtx(() => [
                              createTextVNode("Email")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "email",
                            type: "email",
                            placeholder: "test@example.com",
                            modelValue: unref(form).email,
                            "onUpdate:modelValue": ($event) => unref(form).email = $event,
                            required: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue"])
                        ]),
                        createVNode("div", { class: "grid gap-2" }, [
                          createVNode("div", { class: "flex items-center" }, [
                            createVNode(unref(_sfc_main$L), { "html-for": "password" }, {
                              default: withCtx(() => [
                                createTextVNode("Password")
                              ]),
                              _: 1
                            }),
                            createVNode("a", {
                              href: "#",
                              class: "ml-auto text-sm underline-offset-4 hover:underline"
                            }, " Forgot your password? ")
                          ]),
                          createVNode(unref(_sfc_main$1B), {
                            id: "password",
                            type: "password",
                            modelValue: unref(form).password,
                            "onUpdate:modelValue": ($event) => unref(form).password = $event,
                            required: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue"])
                        ]),
                        createVNode(unref(_sfc_main$1p), {
                          type: "submit",
                          class: "w-full",
                          disabled: loading.value
                        }, {
                          default: withCtx(() => [
                            loading.value ? (openBlock(), createBlock(unref(Loader), {
                              key: 0,
                              class: "animate-spin"
                            })) : createCommentVNode("", true),
                            createTextVNode(" Login ")
                          ]),
                          _: 1
                        }, 8, ["disabled"])
                      ]),
                      createVNode("div", { class: "text-center text-sm" }, [
                        createTextVNode(" Don't have an account? "),
                        createVNode(unref(Link), {
                          href: "/register",
                          class: "underline underline-offset-4"
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Sign up ")
                          ]),
                          _: 1
                        })
                      ])
                    ])
                  ], 32)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="text-balance text-center text-xs text-muted-foreground [&amp;_a]:underline [&amp;_a]:underline-offset-4 [&amp;_a]:hover:text-primary"> By clicking continue, you agree to our <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a>. </div></div>`);
    };
  }
};
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/auth/login-form.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$4 = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex min-h-svh flex-col items-center justify-center gap-6 bg-muted p-6 md:p-10" }, _attrs))}><div class="flex w-full max-w-sm flex-col gap-6">`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/layouts/guest.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const Guest = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["ssrRender", _sfc_ssrRender]]);
const _sfc_main$3 = {
  __name: "login",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(Guest, _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<a href="#" class="flex items-center gap-2 self-center font-medium"${_scopeId}><div class="flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(GalleryVerticalEnd), { class: "size-4" }, null, _parent2, _scopeId));
            _push2(`</div> Acme Inc. </a>`);
            _push2(ssrRenderComponent(_sfc_main$5, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode("a", {
                href: "#",
                class: "flex items-center gap-2 self-center font-medium"
              }, [
                createVNode("div", { class: "flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground" }, [
                  createVNode(unref(GalleryVerticalEnd), { class: "size-4" })
                ]),
                createTextVNode(" Acme Inc. ")
              ]),
              createVNode(_sfc_main$5)
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/auth/login.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const __vite_glob_0_7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$3
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2 = {
  __name: "register-form",
  __ssrInlineRender: true,
  setup(__props) {
    const form = useForm({
      name: "",
      email: "",
      password: "",
      password_confirmation: ""
    });
    const loading = ref(false);
    const handleRegister = () => {
      loading.value = true;
      form.post("/register", {
        onSuccess: () => {
          loading.value = false;
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col gap-6" }, _attrs))}>`);
      _push(ssrRenderComponent(unref(_sfc_main$_), null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(unref(_sfc_main$W), { class: "text-center" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(unref(_sfc_main$V), { class: "text-xl" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Welcome back `);
                      } else {
                        return [
                          createTextVNode(" Welcome back ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$Y), null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Sign Up with your Apple or Google account `);
                      } else {
                        return [
                          createTextVNode(" Sign Up with your Apple or Google account ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(unref(_sfc_main$V), { class: "text-xl" }, {
                      default: withCtx(() => [
                        createTextVNode(" Welcome back ")
                      ]),
                      _: 1
                    }),
                    createVNode(unref(_sfc_main$Y), null, {
                      default: withCtx(() => [
                        createTextVNode(" Sign Up with your Apple or Google account ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(_sfc_main$Z), null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<form${_scopeId2}><div class="grid gap-6"${_scopeId2}><div class="flex flex-col gap-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    variant: "outline",
                    class: "w-full"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"${_scopeId3}><path d="M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701" fill="currentColor"${_scopeId3}></path></svg> Sign Up with Apple `);
                      } else {
                        return [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              d: "M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701",
                              fill: "currentColor"
                            })
                          ])),
                          createTextVNode(" Sign Up with Apple ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    variant: "outline",
                    class: "w-full"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"${_scopeId3}><path d="M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z" fill="currentColor"${_scopeId3}></path></svg> Sign Up with Google `);
                      } else {
                        return [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              d: "M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z",
                              fill: "currentColor"
                            })
                          ])),
                          createTextVNode(" Sign Up with Google ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div><div class="relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border"${_scopeId2}><span class="relative z-10 bg-background px-2 text-muted-foreground"${_scopeId2}> Or continue with </span></div><div class="grid gap-6"${_scopeId2}><div class="grid gap-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { "html-for": "name" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Full Name`);
                      } else {
                        return [
                          createTextVNode("Full Name")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "name",
                    type: "text",
                    placeholder: "John Doe",
                    modelValue: unref(form).name,
                    "onUpdate:modelValue": ($event) => unref(form).name = $event,
                    required: ""
                  }, null, _parent3, _scopeId2));
                  if (unref(form).errors.name) {
                    _push3(`<p class="text-xs text-red-600 -mt-1.5"${_scopeId2}>${ssrInterpolate(unref(form).errors.name)}</p>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="grid gap-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { "html-for": "email" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Email`);
                      } else {
                        return [
                          createTextVNode("Email")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "email",
                    type: "email",
                    placeholder: "test@example.com",
                    modelValue: unref(form).email,
                    "onUpdate:modelValue": ($event) => unref(form).email = $event,
                    required: ""
                  }, null, _parent3, _scopeId2));
                  if (unref(form).errors.email) {
                    _push3(`<p class="text-xs text-red-600 -mt-1.5"${_scopeId2}>${ssrInterpolate(unref(form).errors.email)}</p>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="grid gap-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { "html-for": "password" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Password`);
                      } else {
                        return [
                          createTextVNode("Password")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "password",
                    type: "password",
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    required: ""
                  }, null, _parent3, _scopeId2));
                  if (unref(form).errors.password) {
                    _push3(`<p class="text-xs text-red-600 -mt-1.5"${_scopeId2}>${ssrInterpolate(unref(form).errors.password)}</p>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="grid gap-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$L), { "html-for": "password" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Confirm Password`);
                      } else {
                        return [
                          createTextVNode("Confirm Password")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(unref(_sfc_main$1B), {
                    id: "password_confirmation",
                    type: "password",
                    modelValue: unref(form).password_confirmation,
                    "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
                    required: ""
                  }, null, _parent3, _scopeId2));
                  if (unref(form).errors.password_confirmation) {
                    _push3(`<p class="text-xs text-red-600 -mt-1.5"${_scopeId2}>${ssrInterpolate(unref(form).errors.password_confirmation)}</p>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div>`);
                  _push3(ssrRenderComponent(unref(_sfc_main$1p), {
                    type: "submit",
                    class: "w-full",
                    disabled: loading.value
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        if (loading.value) {
                          _push4(ssrRenderComponent(unref(Loader), { class: "animate-spin" }, null, _parent4, _scopeId3));
                        } else {
                          _push4(`<!---->`);
                        }
                        _push4(` Register `);
                      } else {
                        return [
                          loading.value ? (openBlock(), createBlock(unref(Loader), {
                            key: 0,
                            class: "animate-spin"
                          })) : createCommentVNode("", true),
                          createTextVNode(" Register ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div><div class="text-center text-sm"${_scopeId2}> Already have account? `);
                  _push3(ssrRenderComponent(unref(Link), {
                    href: "/login",
                    class: "underline underline-offset-4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Login `);
                      } else {
                        return [
                          createTextVNode(" Login ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div></div></form>`);
                } else {
                  return [
                    createVNode("form", {
                      onSubmit: withModifiers(handleRegister, ["prevent"])
                    }, [
                      createVNode("div", { class: "grid gap-6" }, [
                        createVNode("div", { class: "flex flex-col gap-4" }, [
                          createVNode(unref(_sfc_main$1p), {
                            variant: "outline",
                            class: "w-full"
                          }, {
                            default: withCtx(() => [
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                viewBox: "0 0 24 24"
                              }, [
                                createVNode("path", {
                                  d: "M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701",
                                  fill: "currentColor"
                                })
                              ])),
                              createTextVNode(" Sign Up with Apple ")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1p), {
                            variant: "outline",
                            class: "w-full"
                          }, {
                            default: withCtx(() => [
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                viewBox: "0 0 24 24"
                              }, [
                                createVNode("path", {
                                  d: "M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z",
                                  fill: "currentColor"
                                })
                              ])),
                              createTextVNode(" Sign Up with Google ")
                            ]),
                            _: 1
                          })
                        ]),
                        createVNode("div", { class: "relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border" }, [
                          createVNode("span", { class: "relative z-10 bg-background px-2 text-muted-foreground" }, " Or continue with ")
                        ]),
                        createVNode("div", { class: "grid gap-6" }, [
                          createVNode("div", { class: "grid gap-2" }, [
                            createVNode(unref(_sfc_main$L), { "html-for": "name" }, {
                              default: withCtx(() => [
                                createTextVNode("Full Name")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "name",
                              type: "text",
                              placeholder: "John Doe",
                              modelValue: unref(form).name,
                              "onUpdate:modelValue": ($event) => unref(form).name = $event,
                              required: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                            unref(form).errors.name ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs text-red-600 -mt-1.5"
                            }, toDisplayString(unref(form).errors.name), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "grid gap-2" }, [
                            createVNode(unref(_sfc_main$L), { "html-for": "email" }, {
                              default: withCtx(() => [
                                createTextVNode("Email")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "email",
                              type: "email",
                              placeholder: "test@example.com",
                              modelValue: unref(form).email,
                              "onUpdate:modelValue": ($event) => unref(form).email = $event,
                              required: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                            unref(form).errors.email ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs text-red-600 -mt-1.5"
                            }, toDisplayString(unref(form).errors.email), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "grid gap-2" }, [
                            createVNode(unref(_sfc_main$L), { "html-for": "password" }, {
                              default: withCtx(() => [
                                createTextVNode("Password")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "password",
                              type: "password",
                              modelValue: unref(form).password,
                              "onUpdate:modelValue": ($event) => unref(form).password = $event,
                              required: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                            unref(form).errors.password ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs text-red-600 -mt-1.5"
                            }, toDisplayString(unref(form).errors.password), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "grid gap-2" }, [
                            createVNode(unref(_sfc_main$L), { "html-for": "password" }, {
                              default: withCtx(() => [
                                createTextVNode("Confirm Password")
                              ]),
                              _: 1
                            }),
                            createVNode(unref(_sfc_main$1B), {
                              id: "password_confirmation",
                              type: "password",
                              modelValue: unref(form).password_confirmation,
                              "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
                              required: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                            unref(form).errors.password_confirmation ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs text-red-600 -mt-1.5"
                            }, toDisplayString(unref(form).errors.password_confirmation), 1)) : createCommentVNode("", true)
                          ]),
                          createVNode(unref(_sfc_main$1p), {
                            type: "submit",
                            class: "w-full",
                            disabled: loading.value
                          }, {
                            default: withCtx(() => [
                              loading.value ? (openBlock(), createBlock(unref(Loader), {
                                key: 0,
                                class: "animate-spin"
                              })) : createCommentVNode("", true),
                              createTextVNode(" Register ")
                            ]),
                            _: 1
                          }, 8, ["disabled"])
                        ]),
                        createVNode("div", { class: "text-center text-sm" }, [
                          createTextVNode(" Already have account? "),
                          createVNode(unref(Link), {
                            href: "/login",
                            class: "underline underline-offset-4"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Login ")
                            ]),
                            _: 1
                          })
                        ])
                      ])
                    ], 32)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(unref(_sfc_main$W), { class: "text-center" }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$V), { class: "text-xl" }, {
                    default: withCtx(() => [
                      createTextVNode(" Welcome back ")
                    ]),
                    _: 1
                  }),
                  createVNode(unref(_sfc_main$Y), null, {
                    default: withCtx(() => [
                      createTextVNode(" Sign Up with your Apple or Google account ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(unref(_sfc_main$Z), null, {
                default: withCtx(() => [
                  createVNode("form", {
                    onSubmit: withModifiers(handleRegister, ["prevent"])
                  }, [
                    createVNode("div", { class: "grid gap-6" }, [
                      createVNode("div", { class: "flex flex-col gap-4" }, [
                        createVNode(unref(_sfc_main$1p), {
                          variant: "outline",
                          class: "w-full"
                        }, {
                          default: withCtx(() => [
                            (openBlock(), createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("path", {
                                d: "M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701",
                                fill: "currentColor"
                              })
                            ])),
                            createTextVNode(" Sign Up with Apple ")
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$1p), {
                          variant: "outline",
                          class: "w-full"
                        }, {
                          default: withCtx(() => [
                            (openBlock(), createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("path", {
                                d: "M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z",
                                fill: "currentColor"
                              })
                            ])),
                            createTextVNode(" Sign Up with Google ")
                          ]),
                          _: 1
                        })
                      ]),
                      createVNode("div", { class: "relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border" }, [
                        createVNode("span", { class: "relative z-10 bg-background px-2 text-muted-foreground" }, " Or continue with ")
                      ]),
                      createVNode("div", { class: "grid gap-6" }, [
                        createVNode("div", { class: "grid gap-2" }, [
                          createVNode(unref(_sfc_main$L), { "html-for": "name" }, {
                            default: withCtx(() => [
                              createTextVNode("Full Name")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "name",
                            type: "text",
                            placeholder: "John Doe",
                            modelValue: unref(form).name,
                            "onUpdate:modelValue": ($event) => unref(form).name = $event,
                            required: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                          unref(form).errors.name ? (openBlock(), createBlock("p", {
                            key: 0,
                            class: "text-xs text-red-600 -mt-1.5"
                          }, toDisplayString(unref(form).errors.name), 1)) : createCommentVNode("", true)
                        ]),
                        createVNode("div", { class: "grid gap-2" }, [
                          createVNode(unref(_sfc_main$L), { "html-for": "email" }, {
                            default: withCtx(() => [
                              createTextVNode("Email")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "email",
                            type: "email",
                            placeholder: "test@example.com",
                            modelValue: unref(form).email,
                            "onUpdate:modelValue": ($event) => unref(form).email = $event,
                            required: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                          unref(form).errors.email ? (openBlock(), createBlock("p", {
                            key: 0,
                            class: "text-xs text-red-600 -mt-1.5"
                          }, toDisplayString(unref(form).errors.email), 1)) : createCommentVNode("", true)
                        ]),
                        createVNode("div", { class: "grid gap-2" }, [
                          createVNode(unref(_sfc_main$L), { "html-for": "password" }, {
                            default: withCtx(() => [
                              createTextVNode("Password")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "password",
                            type: "password",
                            modelValue: unref(form).password,
                            "onUpdate:modelValue": ($event) => unref(form).password = $event,
                            required: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                          unref(form).errors.password ? (openBlock(), createBlock("p", {
                            key: 0,
                            class: "text-xs text-red-600 -mt-1.5"
                          }, toDisplayString(unref(form).errors.password), 1)) : createCommentVNode("", true)
                        ]),
                        createVNode("div", { class: "grid gap-2" }, [
                          createVNode(unref(_sfc_main$L), { "html-for": "password" }, {
                            default: withCtx(() => [
                              createTextVNode("Confirm Password")
                            ]),
                            _: 1
                          }),
                          createVNode(unref(_sfc_main$1B), {
                            id: "password_confirmation",
                            type: "password",
                            modelValue: unref(form).password_confirmation,
                            "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
                            required: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                          unref(form).errors.password_confirmation ? (openBlock(), createBlock("p", {
                            key: 0,
                            class: "text-xs text-red-600 -mt-1.5"
                          }, toDisplayString(unref(form).errors.password_confirmation), 1)) : createCommentVNode("", true)
                        ]),
                        createVNode(unref(_sfc_main$1p), {
                          type: "submit",
                          class: "w-full",
                          disabled: loading.value
                        }, {
                          default: withCtx(() => [
                            loading.value ? (openBlock(), createBlock(unref(Loader), {
                              key: 0,
                              class: "animate-spin"
                            })) : createCommentVNode("", true),
                            createTextVNode(" Register ")
                          ]),
                          _: 1
                        }, 8, ["disabled"])
                      ]),
                      createVNode("div", { class: "text-center text-sm" }, [
                        createTextVNode(" Already have account? "),
                        createVNode(unref(Link), {
                          href: "/login",
                          class: "underline underline-offset-4"
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Login ")
                          ]),
                          _: 1
                        })
                      ])
                    ])
                  ], 32)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="text-balance text-center text-xs text-muted-foreground [&amp;_a]:underline [&amp;_a]:underline-offset-4 [&amp;_a]:hover:text-primary"> By clicking continue, you agree to our <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a>. </div></div>`);
    };
  }
};
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/components/auth/register-form.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const _sfc_main$1 = {
  __name: "register",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(Guest, _attrs, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<a href="#" class="flex items-center gap-2 self-center font-medium"${_scopeId}><div class="flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(GalleryVerticalEnd), { class: "size-4" }, null, _parent2, _scopeId));
            _push2(`</div> Acme Inc. </a>`);
            _push2(ssrRenderComponent(_sfc_main$2, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode("a", {
                href: "#",
                class: "flex items-center gap-2 self-center font-medium"
              }, [
                createVNode("div", { class: "flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground" }, [
                  createVNode(unref(GalleryVerticalEnd), { class: "size-4" })
                ]),
                createTextVNode(" Acme Inc. ")
              ]),
              createVNode(_sfc_main$2)
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/auth/register.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const __vite_glob_0_8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main = /* @__PURE__ */ Object.assign({ layout: Guest }, {
  __name: "index",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "py-4" }, _attrs))}>`);
      _push(ssrRenderComponent(unref(Link), {
        href: "/login",
        class: "bg-amber-500 px-4 py-3"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Hello`);
          } else {
            return [
              createTextVNode("Hello")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/pages/index.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_glob_0_9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main
}, Symbol.toStringTag, { value: "Module" }));
createServer(
  (page) => createInertiaApp({
    page,
    render: renderToString,
    resolve: (name) => {
      const pages = /* @__PURE__ */ Object.assign({ "./pages/app/dashboard.vue": __vite_glob_0_0, "./pages/app/profile/edit.vue": __vite_glob_0_1, "./pages/app/project/form.vue": __vite_glob_0_2, "./pages/app/project/index.vue": __vite_glob_0_3, "./pages/app/project/show.vue": __vite_glob_0_4, "./pages/app/task/index.vue": __vite_glob_0_5, "./pages/app/welcome.vue": __vite_glob_0_6, "./pages/auth/login.vue": __vite_glob_0_7, "./pages/auth/register.vue": __vite_glob_0_8, "./pages/index.vue": __vite_glob_0_9 });
      return pages[`./pages/${name}.vue`];
    },
    setup({ App, props, plugin }) {
      return createSSRApp({
        render: () => h(App, props)
      }).use(plugin);
    }
  }),
  { cluster: true }
);
